__significantly_reduce__
__energy_consumption__
__execution_time__
__significantly_reduces__
__speed_up__
__data_transfer__
__while_retaining__
__without_sacrificing__
__without_compromising__
__main_memory__
__energy_consumption__.
__performance_degradation__
__response_times__
__energy_savings__
__execution_time__.
__memory_access__
__network_bandwidth__
__resource_usage__
__memory_accesses__
__tradeoffs_between__
__power_consumption__,
__greatly_reduce__
__execution_times__
__thereby_reducing__
__significantly_increase__
__flash_memory__
__run_time__
__memory_usage__
__storage_space__
__low_latency__
__effectively_reduce__
__trade-offs_between__
__register_file__
__cycle_time__
__CPU_time__
__response_time__.
__application_performance__
__memory_space__
__without_incurring__
__resource_consumption__
__cache_misses__
__resource_constraints__
__memory_requirements__
__communication_overhead__
__high_performance__.
__hardware_resources__
__without_violating__
__greatly_reduces__
__worst_case__
__energy_consumption__,
__code_size__
__data_transfers__
__main_memory__.
__communication_cost__
__processing_power__
__low_overhead__
__execution_time__,
__resource_requirements__
__significantly_reduced__.
__data_locality__
__significantly_increases__
__performance_improvement__.
__branch_prediction__
__without_degrading__
__performance_degradation__.
__memory_size__
__energy_reduction__
__storage_capacity__
__memory_bandwidth__
__dramatically_reduce__
__greatly_reduced__
__response_time__,
__communication_costs__
__I/O__,
__memory_consumption__
__read/write__
__computation_and_communication__
__storage_requirements__
__data_movement__
__interprocessor_communication__
__instruction_cache__
__power_efficiency__
__significantly_reducing__
__memory_references__
__read_and_write__
__cut_down__
__cost_reduction__
__memory_requirement__
__network_latency__
__data_reuse__
__clock_cycles__
__greatly_increase__
__external_memory__
__effectively_reduces__
__L2_cache__
__execution_times__.
__memory_requirements__.
__functional_unit__
__trade_off__
__real-time_tasks__
__application_performance__.
__substantially_reduce__
__extremely_high__
__data_cache__
__memory_accesses__.
__network_bandwidth__.
__dramatically_reduces__
__idle_time__
__extremely_low__
__data_availability__
__area_overhead__.
__communication_performance__
__drastically_reduces__
__trading_off__
__communication_overhead__.
__greatly_reduced__.
__data_volume__
__cache_memory__
__improves_performance__
__I/Os__
__hardware_cost__
__cache_lines__
__cost_savings__
__resource_utilization__.
__low_cost__.
__hardware_resources__.
__performance_loss__
__improve_performance__
__CPU_utilization__
__memory_latency__
__secondary_storage__
__resource_usage__.
__significantly_impact__
__local_memory__
__cache_performance__
__energy_savings__.
__drastically_reduce__
__substantially_reduces__
__hardware_overhead__
__spatial_locality__
__data_accesses__
__buffer_space__
__disk_space__
__slows_down__
__branch_predictor__
__communication_bandwidth__
__load_imbalance__
__storage_space__.
__memory_usage__.
__disk_I/O__
__battery_life__
__significantly_affects__
__run_time__.
__cache_miss__
__high_scalability__
__computational_load__
__trades_off__
__disk_access__
__memory_resources__
__memory_utilization__
__main_memory__,
__helps_reduce__
__limited_memory__
__achieve_high__
__value_prediction__
__computation_cost__
__block_sizes__
__access_latency__
__context_switching__
__network_bandwidth__,
__processing_requirements__
__communication_cost__.
__communication_delays__
__performance_improvements__.
__slowing_down__
__memory_space__.
__computational_requirements__
__cache_size__
__performance_overhead__
__processor_utilization__
__write_operations__
__computational_overhead__
__communication_latency__
__problem_size__
__hard_disk__
__CPU_cycles__
__considerably_reduces__
__disk_accesses__
__cache_misses__.
__modern_processors__
__instruction-level_parallelism__
__access_times__
__cycle_time__.
__execution_speed__
__resource_contention__
__data_size__
__server_load__
__space_requirements__
__less_expensive__
__hardware_complexity__
__memory_footprint__
__false_sharing__
__significantly_decrease__
__storage_requirement__
__code_size__,
__high_latency__
__storage_requirements__.
__bandwidth_requirements__.
__temporal_locality__
__CPU_time__.
__additional_hardware__
__processor_performance__
__miss_rate__
__considerably_reduce__
__hit_ratio__
__hardware_overhead__.
__data_caches__
__message_overhead__
__runtime_overhead__
__peak_performance__
__fully_utilize__
__storage_overhead__
__low_latency__,
__energy_costs__
__pipeline_stages__
__memory_usage__,
__memory_capacity__
__space_overhead__
__development_costs__
__information_loss__.
__instruction_level_parallelism__
__improving_performance__
__schedule_length__
__hardware_cost__.
__improve_performance__.
__dramatically_reduced__
__without_loosing__
__high_throughput__,
__inter-processor_communication__
__function_evaluations__
__power_budget__
__significantly_decreases__
__data_transfers__.
__reduced_significantly__.
__computational_overhead__.
__performance_penalty__.
__cache_line__
__low_overhead__.
__communication_costs__.
__turnaround_time__
__performance_penalty__
__scheme_reduces__
__memory_consumption__.
__memory_overhead__
__program_performance__
(__I/O__)
__communication_overhead__,
__battery_life__.
__lower_cost__
__performance_goals__
__memory_traffic__
__memory_performance__
__reduced_significantly__
__increased_performance__
__miss_rates__
__message_traffic__
__processing_power__.
__communication_requirements__
__cycle_times__
__drastically_reduced__
__main-memory__
__code_size__.
__replacement_policy__
__network_performance__,
__resource_utilization__,
__query_performance__.
__processing_overhead__
__energy_dissipation__.
__substantially_increase__
__high_throughput__.
__performance_loss__.
__instruction_fetch__
__maintenance_cost__
__memory_requirements__,
__CPU_load__
__power_savings__.
__frequently_accessed__
__internal_memory__
__substantially_reduced__
__performance_overhead__.
__higher_performance__.
__scaled_up__
__low_overhead__,
__technique_reduces__
__dramatically_increase__
__data_transfer__,
__hard_disks__
__control_overhead__.
__execution_times__,
__communication_overheads__
__cycle_time__,
__saving_energy__
__bandwidth_consumption__.
__disk_bandwidth__
__effectively_utilize__
__read_and_write_operations__
__pre-computation__
__memory_size__,
__miss_ratio__
__memory_size__.
__greatly_reducing__
__cache_blocks__
__computational_requirements__.
__processor_performance__.
__program_performance__.
__cache_misses__,
__program_size__
__spill_code__
__programming_effort__
__compression_and_decompression__
__higher_speed__
__issue_queue__
__traded_off__
__memory_accesses__,
__clock_cycles__.
__runtime_performance__
__chip_area__.
__per_iteration__
__execution_speed__.
__effectively_exploit__
__computation_power__
__inter-task__
__storage_costs__
__access_latency__.
__power_efficiency__.
__thread-level_parallelism__
__problem_size__.
__memory_requirement__.
__storage_capacity__,
__save_energy__
__maintenance_costs__
__load_instructions__
__programming_effort__.
__locality_of_reference__
__sequential_access__
__L1_and_L2__
__miss_ratios__
__single-cycle__
__cost_estimates__
__disk_arrays__.
__context_switch__
__storage_space__,
__additional_resources__
__page_faults__
__exponentially_increasing__
__parallel_jobs__
__idle_periods__
__runtime_overhead__.
__poor_scalability__
__physical_memory__
__storage_cost__
__memory_banks__
__performance_impact__
__ROB__
__storage_capacity__.
__memory_bandwidth__.
__load_balance__.
__I/Os__.
__CPU_and_memory__
__performance_degradation__,
__pattern_set__
__cache_sizes__
__memory_resources__.
__programmer_productivity__
__remote_memory__
__increased_flexibility__
__processor_speed__
__processor_resources__
__working_sets__
__adversely_affects__
__energy_reduction__.
__greatly_affects__
__interprocessor_communication__.
__battery_lifetime__
__performance_overheads__
__memory_space__,
__hardware_requirements__
__spatial_locality__.
__cache_performance__.
__resource_usage__,
__computation_overhead__
__hardware_resources__,
__computation_costs__
__latency_reduction__
__additional_complexity__
__load_balance__,
__write-back__
__communication_cost__,
__cache_hierarchy__
__data_availability__.
__idle_times__
__space_usage__
__CPU_time__,
__read_operations__
__manual_effort__
__reduces_significantly__
__on-chip_cache__
__production_cost__
__cache_access__
__hardware_complexity__.
__global_communication__
__operating_costs__
__transfer_rate__
__severely_limit__
__storage_overhead__.
__completely_eliminates__
__execution_cycles__
__hardware_costs__
__cache_simulation__
__degraded_performance__
__performance_enhancements__
__round-trip__
__computation_resources__
__implementation_cost__
__disk_space__.
__performance_penalties__
__extra_hardware__
__space_utilization__
__fully_utilized__
__data_accesses__.
__memory_operations__.
__severely_limits__
__operational_costs__
__software_prefetching__
__dramatically_increases__
__L1_cache__
__considerably_reduced__
__avoids_unnecessary__
__avoiding_unnecessary__
__hardware_redundancy__
__hardware_resource__
__instruction_issue__
__computational_demands__
__processor_speeds__
__instruction_caches__
__prefetching_techniques__
__run-time_overhead__.
__spatial_locality__,
__table_size__
__memory_bandwidth__,
__space_consumption__
__pause_times__
__cache_size__,
__data_caches__.
__address_mapping__
__network_contention__
__bus_traffic__
__total_energy__
__power_overhead__
__memory_consumption__,
__development_cost__
__application_characteristics__
__memory_utilization__.
__synchronization_overhead__
__read_requests__
__load/store__
__memory_access__.
__computation_times__.
__existing_designs__
__substantially_increases__
__local_memory__.
__maximum_performance__
__power_budget__.
__CPU_usage__
__network_overhead__
__additional_overhead__
__test_quality__.
__maintenance_costs__.
__energy_efficient__.
__maintenance_cost__.
__branch_mispredictions__
__network_latency__,
__low_energy_consumption__
__FPGA_resources__
__resource_requirements__,
__performance_benefits__.
__computation_and_communication__.
__power_efficiency__,
__data_locality__,
__execution-time__
__update_cost__
__substantially_lower__
__off-chip_memory__
__space_requirement__
__turned_off__
__higher_capacity__
__user_intervention__.
__loads_and_stores__
__memory_requests__
__cache_configurations__
__wrong-path__
__CPU_overhead__
__query_cost__
__runtime_performance__.
__design_effort__.
__computational_resource__
__voltage/frequency__
__inter-core__
__user_effort__
__testing_effort__
__communication_bandwidth__,
__management_overhead__
__communication_performance__.
__optimum_performance__
__disk_failures__
__instruction_window__
__extremely_long__
__slack_time__
__memory_storage__
__resource_contention__.
__Mbps__.
__computation_overhead__.
__increased_throughput__
__block_transfer__
__implementation_cost__.
__turnaround_time__.
__per_cycle__.
__application_performance__,
__run_time__,
__large_arrays__
__dependent_instructions__
__performance_losses__
__space_requirements__.
__file_sizes__
__remains_unchanged__.
__index_size__
__data_dimensionality__
__block_size__,
__communication_bandwidth__.
__set-associative__
__memory_access__,
__delay_penalty__
__energy_budget__
__cache_space__
__cache_memory__.
__cache_locality__
__processing_costs__
__data_size__,
__load_imbalance__.
__conflict_misses__
__physical_registers__
__cost_effectiveness__
__page_table__
__register_pressure__
__cache_hits__
__memory_footprint__.
__server_performance__
__critical_path__.
__maximum_performance__.
__pipeline_depth__
__DVS_algorithms__
__storage_requirements__,
__energy-delay__
__MB/s__
__data_size__.
__drastically_reducing__
__inter-cluster_communication__
__CPU_cost__
__degrade_performance__
__failure-free__
__data_skew__
__improved_performance__,
__response-time__
__nearly_constant__
__storage_capacities__
__substantially_reducing__
__communication_requirements__.
__incur_high__
__buffer_cache__
__communication_latencies__
__silicon_area__.
__low_memory__
__computation_load__
__per_cycle__
__fully_utilizing__
__transmission_overhead__
__run-time_overhead__
__resource_consumption__,
__lock_contention__
__L1_data_cache__
__memory_access_latency__
__diminishing_returns__
__communication_times__
__MEMS-based_storage__
__instructions_per_cycle__
__development_costs__.
__memory_constraints__
__memory_bank__
__performance_bottleneck__
__execution_cost__
__processor_utilization__.
__cache_configuration__
__power_usage__
__performance_overheads__.
__CPU_power__
__block_size__.
__pipeline_stages__.
__run_times__.
__code_size_reduction__
__memory_latency__.
__processing_resources__.
__scale_poorly__
__page_size__
__reduced_cost__
__data_consistency__,
__communication_overheads__.
__memory_references__.
__processing_speed__,
__bandwidth_resources__
__additional_memory__
__improving_performance__.
__test_times__
__memory_latencies__
__transfer_rates__
__battery_life__,
__physical_memory__.
__bandwidth_limitations__
__CPU_performance__
__message_sizes__
__cache_utilization__
__processing_overhead__.
__flash_memory__,
__cost_reduction__,
__reduced_costs__
__reducing_energy_consumption__
__space_overhead__.
__small_files__
__energy_management__.
__register_file__,
__mark-sweep__
__CPU_speed__
__memory_footprint__,
__execution_performance__
__branch_predictors__.
__temporal_locality__.
__cache_sizes__,
__easy_implementation__
__communication_costs__,
__intermediate_results__,
__high_concurrency__
__minimal_overhead__
__bandwidth_overhead__.
__processor_performance__,
__server_load__,
__energy_overhead__
__energy_savings__,
__memory_constraints__.
__performance_impact__.
__cache_hit_ratio__
__access_times__.
__limiting_factor__
__reduced_size__
__cycle_count__
__CPU_utilization__.
__CPU_utilization__,
__refresh_rate__
__concurrent_transactions__
__cache_capacity__
__storage_size__
__low_energy_consumption__.
__benefits_include__
__inter-core_communication__
__improves_performance__.
__L2_caches__
__additional_hardware__.
__area_overheads__
__algorithmic_complexity__.
__limited_space__
__communication_latency__.
__inter-processor_communication__.
__Unlike_previous_works__,
__area_cost__
__dramatically_reducing__
__data_transfers__,
__bandwidth_consumption__,
__dramatically_reduced__.
__reliability_and_availability__.
__main_storage__
__space_savings__
__warm-up__
__extra_cost__
__performance_and_energy_consumption__
__network_latencies__
__application_execution__.
__latency_tolerance__
__verification_effort__
__reducing_power_consumption__
__temporal_locality__,
__cache_conflicts__
__thread-level_parallelism__.
__processor_cycles__
__execution_efficiency__
__overhead_reduction__
__cache_miss_rates__
__clock_rate__.
__cache_parameters__
__silicon_area__,
__buffer_space__.
__directly_impacts__
__memory_sizes__
__high-performance_processors__.
__memory_contention__
__search_times__
__disk_blocks__
__resource_demand__
__access_modes__
__write_performance__
__memory_access_patterns__.
__space_usage__.
__cache_sharing__
__increases_rapidly__
__disk_drives__,
__storage_device__.
__performance_penalties__.
__highly_predictable__
__delay_penalty__.
__slow-down__
__lower_power_consumption__
__server_bandwidth__
__cache_interference__
__Bloom_filters__.
__write_requests__
__frame_rate__,
__hardware_constraints__
__saving_energy__.
__lags_behind__
__private_caches__
__hardware_prefetching__
__communication_load__
__memory_overhead__.
__data_movement__,
__energy_usage__.
__size_increases__
__input_size__
__processing_capacity__.
__access_latency__,
__cache_block__
__bandwidth_overhead__
__internal_memory__.
__trace_cache__
__modern_microprocessors__
__memory_chips__
__implementation_costs__
__without_harming__
__hardware_cost__,
__single_cycle__
__disk_accesses__.
__achievable_performance__
__overhead_costs__
__buffer_area__
__access_costs__
__peak_performance__.
__size_increases__,
__data_availability__,
__circuit_complexity__.
__batch_jobs__
__latency_hiding__
__disk_I/O__.
__dedicated_resources__
__parallel_performance__.
__maximum_efficiency__
__context_switches__.
__resource_contention__,
__cost_reductions__
__long_latencies__
__hardware_requirements__.
__processor_speed__,
__temporary_storage__
__L2_cache__.
__extra_storage__
__Bloom_filters__,
__problem_size__,
__direct-mapped__
__low_overheads__
__message_sizes__.
__read_access__
__output_quality__.
__saving_power__
__data_duplication__
__scheduling_overhead__
__disk_space__,
__long_latency__
__largely_reduce__
__random_access__,
__performance_and_energy_consumption__.
__maximum_throughput__.
__write_and_read__
__power_consuming__
__miss_penalty__
__performance.This_paper__
__page_fault__
__reduce_latency__
__branch_misprediction__
__query_response__
__instruction_prefetching__
__battery_lifetime__.
__large_sized__
__stall_time__
__performance_gains__,
__TLB_misses__
__considerably_reduced__.
__higher_throughput__,
__false_sharing__.
__throughput_rate__
__insert/delete__
__instruction_caches__.
__redundant_execution__
__numerical_accuracy__
__cache_pollution__
__storage_requirement__.
__conflict_misses__.
__line_rates__
__speculative_execution__,
__code_density__
__hardware_complexity__,
__distance_calculations__
__energy_costs__.
__computational_overhead__,
__remote_accesses__
__area_cost__.
__severely_restricts__
__processing_speeds__
__narrow-width__
__disk_pages__
__idle_time__,
__L2_cache__,
__off-chip_memory__.
__fault_rates__
__set-associative_caches__
__texture_memory__
__page_sizes__
__execution_overhead__
__improved_scalability__
__cache_sizes__.
__file_cache__
__local_memories__
__long-latency__
__turn-around_time__
__incur_significant__
__maintenance_overhead__.
__live_range__
__cache_behavior__.
__cache_lines__.
__L1_caches__
__energy_consumptions__
__working_set_size__
__bandwidth_demands__
__processor_resources__.
__victim_cache__
__reduces_power_consumption__
__query_latency__
__well_balanced__
__low_power_consumption__.
__table_entries__
__processing_efficiency__
__disk_head__
__saves_energy__
__increased_complexity__
__improve_throughput__
__overhead_incurred__
__processing_times__,
__future_microprocessors__.
__greatly_increasing__
__processing_cost__.
__trade-off__,
__read_operations__.
__small_messages__
__data_volume__,
__loop_pipelining__
__drastically_reduced__.
__lookup_latency__
__arbitration_scheme__
__idle_time__.
__turnaround_times__
__MEMS_storage__
__control_independence__
__hash_join__
__software_execution__
__Amdahl's_law__
__access_conflicts__
__long_run__
__low_communication_overhead__
__performance_overhead__,
__latency_reduction__.
__CPU_intensive__
__bus_bandwidth__
__performance_bottleneck__.
__database_size__.
__single-thread_performance__
__data_redundancy__.
__speed-up__,
__page_accesses__
__read_ports__
__object_allocation__
__synchronization_overhead__.
__wear-leveling__
__hardware_utilization__.
__increases_exponentially__
__power_reduction__,
__area_and_power_consumption__.
__inter-PE_communication__
__communication_volume__
__issue_width__
__tile_sizes__
__computational_efforts__
__memory_allocation__,
__significant_performance_degradation__.
__branch_predictors__,
__instruction-level_parallelism__.
__greatly_influences__
__buffer_memory__
__buffer_space__,
__extra_overhead__.
__grid_jobs__
__timing_accuracy__
__recovery_times__
__low_utilization__
__local_disk__
__development_cost__.
__roll-back__
__effectively_alleviate__
__hardware_utilization__
__thread_pool__
__primary_memory__
__memory_bus__
__code_growth__
__reduced_greatly__.
__negligible_overhead__
__cache_replacement_policy__
__hardware_overhead__,
__context-switching__
__memory_capacity__,
__CPU_cycles__,
__program_performance__,
__increased_performance__.
__access_latencies__
__low_resource__
__memory_latency__,
__clock_speed__.
__small_overhead__
__reduces_energy_consumption__
__processor_load__
__reduced_energy_consumption__
__cache_miss_rate__
__computation_resources__.
__cache_and_TLB__
__branch_prediction_accuracy__
__operation_count__
__execution_units__.
__storage_overhead__,
__extremely_short__
__cache_hit_rates__
__sleep_state__
__hardware_costs__.
__execution_costs__
__inherent_parallelism__
__event_list__
__significant_reductions__
__runahead_execution__
__interrupt_handler__
__network_contention__.
__memory_latencies__.
__data_prefetching__.
__input_data_sets__
__inter-VM__
__memory_capacity__.
__access_efficiency__
__parallel_disk__
__parallel_disks__
__cache_memory__,
__increase_throughput__
__file_accesses__
__memory_limitations__
__intensive_computation__
__word_length__.
__high_contention__
__tag_bits__
__energy_dissipation__,
__large_messages__
__file_size__,
__bandwidth_costs__
__memory_cost__
__cache_accesses__
__manual_labor__
__processing_overheads__
__negatively_impacts__
__instruction_reuse__
__data_transfer_rates__
__high_data_availability__
__instruction_cache__.
__computation_times__,
__strong_isolation__
__data_protection__,
__additional_cost__
__schedule_length__.
__interprocessor_communications__
__memory_configurations__
__memory_banks__,
__memory_blocks__.
__branch_target_buffer__
__cache_size__.
__disk_access__.
__line_size__
__bandwidth_resources__.
__context_switching__.
__power_consumptions__
__lower_power_consumption__.
__cycles_per_instruction__
__bisection_bandwidth__
__energy_reduction__,
__completely_eliminating__
__instruction_counts__
__access_pattern__,
__file_sizes__.
__value_predictors__
__memory_traffic__.
__filter_cache__
__functional_unit__.
__superscalar_processors__,
__reference_locality__
__cache_performance__,
__query_efficiency__.
__extra_resources__
__developer_productivity__
__execution_overhead__.
__dynamic_scheduling__,
__Energy_savings__
__hit/miss__
__additional_costs__
__data_striping__
__data_copying__
__data_contention__
__considerably_increases__
__line_speed__
__wait_times__
__disk_throughput__
__energy_requirements__
__increased_capacity__
__data_access_patterns__,
__read-ahead__
__low_communication__
__inter-node_communication__
__turnaround_time__,
__excessively_long__
__average_temperature__
__total_energy_consumption__.
__scan_operations__
__false_positives_and_false_negatives__.
__data_volume__.
__degrades_performance__
__floating_point_operations__
__latency-sensitive__
__area_penalty__.
__program_locality__
__energy_saving__,
__block_sizes__,
__long_messages__
__scratch-pad__
__network_usage__.
__I/O_intensive__
__result_quality__.
__execution_efficiency__.
__decoding_process__.
__magnetic_disks__.
__large_memories__
__value_locality__
__peak_performance__,
__significant_overheads__
__query_delay__
__instruction_throughput__
__circuit_size__,
__uniprocessor_systems__
__memory_configuration__
__operational_cost__
__critical_path__,
__easily_exceed__
__reduces_considerably__
__increased_reliability__
__load_imbalance__,
__test_costs__.
__performance_loss__,
__limited_memory__,
__physical_address__
__prohibitively_large__
__increases_dramatically__.
__space_overhead__,
__internode_communication__
__FPGA_resources__.
__bandwidth_requirement__,
__instruction-level_parallelism__,
__Speculative_execution__
__low-power_modes__
__overload_situations__.
__context_switches__,
__processing_rates__
__temporal_and_spatial_locality__
__processing_capability__.
__memory-access__
__L2_caches__.
__register_file_size__
__cycle_times__.
__processor_configurations__
__communication_schedule__
__redundant_computations__.
__space_occupancy__
__processing_costs__.
__operational_costs__.
__DVS_algorithm__
__memory_buffers__
__Loop_fusion__
__global_history__
__code_quality__,
__power_manager__
__extra_overhead__
__memory_sizes__.
__on-chip_caches__.
__per_clock_cycle__.
__execution_speed__,
__OS-aware__
__periodic_task__
__communication_delay__,
__update_costs__
__storage_cost__,
__hit_ratio__.
__indirect_branches__
__communication_latencies__.
__prefetch_instructions__
__cache_hit__
__occlusion_queries__
__response_latency__
__considerable_overhead__
__high_overhead__.
__drastically_increases__
__timing_guarantees__
__hand-tuning__
__erase_operations__
__maintenance_costs__,
__time.This_paper__
__reduced_latency__
__rotational_latency__
__storage_cost__.
__static_power_consumption__
__CPU_cycle__
__cost_and_power_consumption__.
__program_size__,
__increases_dramatically__
__compression_and_decompression__.
__gracefully_degrading__
__reduced_substantially__
__bandwidth_bottleneck__
__clock_frequencies__.
__optimization_opportunities__.
__cache_utilization__.
__distance_computations__
__power_savings__,
__reorder_buffer__
__page_faults__.
__design_effort__,
__runtime_overhead__,
__disk_bandwidth__,
__dynamic_energy__
__consumes_significant__
__energy_overhead__.
__elapsed_time__.
__null_message__
__instruction_count__
__line_buffer__
__testing_costs__
__disk_utilization__
__Trace-driven_simulation__
__set-associative_cache__
__compiler-controlled__
__minimal_cost__.
__development_costs__,
__software_implementation__,
__server_machines__
__size_reduction__.
__high_flexibility__,
__file_size__.
__reduced_considerably__
__load_instruction__
__additional_overhead__.
__latency_and_energy_consumption__.
__write_operations__.
__low_computation__
__eliminating_unnecessary__
__stack_space__
__memory_conflicts__
__bus_contention__
__latency_and_throughput__.
__memory_demands__
__code_written__
__cycle_times__,
__reduce_energy_consumption__
__design_quality__,
__scheme_saves__
__dirty_pages__
__save_power__
__storage_utilization__,
__message_sizes__,
__heap_size__
__hit_ratio__,
__data_dimensionality__.
__improving_efficiency__
__server_performance__.
__communication_performance__,
__NFS_server__
__disk_failure__
__copy_operation__
__sustained_performance__
__Data_communication__
__exhibit_poor__
__user-perceived_latency__
__processor_resources__,
__disk_performance__
__performance_and_energy_efficiency__
__route_lookup__
__cost-performance__
__optimal_performance__,
__cost_and_power_consumption__
__memory_access_times__
__control_message__
__register_windows__
__register_requirements__
__load/store_instructions__
__instruction_memory__
__routing_hops__
__loop_buffer__
__code_reordering__
__address_translation__.
__fetch_bandwidth__
__low_hardware_cost__
__linearly_increasing__
__CPU_load__.
__external_fragmentation__
__power_efficient__,
__request_rate__
__quantitatively_characterize__
__conventional_architectures__.
__memory_locality__
__compilation_overhead__
__forward_progress__
__shared-bus__
__message_traffic__.
__miss_rate__.
__data_reuse__,
__negative_slack__
__workload_variations__
__space_efficiency__,
__directory_protocols__
__communication_latency__,
__memory_references__,
__space_requirement__.
__release_consistency__
__improves_performance__,
__space_utilization__.
__improving_performance__,
__considerably_increased__
__extra_computation__
__increased_latency__
__low_storage__
__design_closure__.
__computational_expense__
__cost_effectiveness__,
__performance_penalty__,
__slow_response__
__backup_capacity__
__transaction_throughput__
__web_proxies__
__eliminates_unnecessary__
__random_accesses__
__processor_utilization__,
__access_locality__
__task_executions__
__Value_prediction__
__read/write_operations__.
__object_size__,
__small_overhead__.
__short_messages__.
__significantly_decreasing__
__multiple_rounds__
__write_performance__.
__instruction_cache_misses__
__buffer_caches__
__computational_overheads__
__processor_power_consumption__
__performance_per_watt__
__power_management_schemes__
__synchronization_costs__
__data_currency__
__intensive_computations__
__drastically_increase__
__disk_page__
__clock_cycle__,
__CPU_performance__.
__throughput_and_latency__.
__machine_utilization__
__significantly_shorten__
__lookup_operations__
__security_level__,
__memory_utilization__,
__cache_accesses__.
__computational_intensity__
__data_cache_misses__
__evenly_distributing__
__greatly_decreases__
__memory_bandwidth_requirements__
__hardware_overheads__.
__communication_bottlenecks__
__read_accesses__
__storage_costs__,
__faster_machines__
__bus_traffic__.
__space_requirements__,
__latency_overhead__
__response_delay__
__practical_limits__
__peripheral_devices__.
__data_caches__,
__computational_speed__,
__management_overhead__.
__configuration_overhead__
__computation_power__.
__disk_bandwidth__.
__special_purpose_hardware__
__size_grows__.
__locality_of_reference__,
__power_saving__,
__reconfiguration_overhead__
__physical_register__
__successfully_completing__
__NUMA-aware__
__read_latency__
__application_characteristics__,
__wear_leveling__
__dramatically_lower__
__code_compression__.
__greatly_reduced__,
__software_development_costs__
__bypass_network__
__Achieving_high__
__additional_complexity__.
__access_times__,
__development_cost__,
__processor_cycles__.
__memory_operations__,
__lock_contention__.
__routing_flexibility__
__trades-off__
__reuse_opportunities__
__direct-mapped_caches__
__traffic_overhead__.
__compile_time__.
__branch_instruction__
__deadline_misses__.
__translation_lookaside_buffer__
__slowdown_factors__
__reduced_dramatically__
__branch_instructions__.
__issue_logic__
__false_sharing__,
__saving_and_restoring__
__excessive_overhead__
__hit_rate__,
__storage_costs__.
__update_cost__,
__disk_I/O__,
__storage_area__
__memory_overhead__,
__superlinear_speedup__
__startup_latency__
__cache_blocks__.
__operational_costs__,
__replication_cost__
__tape_drives__
__operating_cost__.
__download_speed__
__saves_power__
__power_budgets__
__page_sizes__.
__internal_storage__
__modern_computers__.
__adversely_affecting__
__loosely_synchronized__
__executed_instructions__
__memory_footprints__
__leakage_power_savings__
__cache_contents__
__packet_buffer__
__turn-around_time__.
__Run_time__
__instruction_queue__
__low_costs__.
__throughput_increases__
__task_migration__.
__cache_levels__
__deployment_costs__.
__execution_speeds__
__decoder_complexity__
__reduced_considerably__.
__processor_caches__.
__computation_burden__
__re-configurability__
__resource_requirement__
__reads_and_writes__,
__Modern_microprocessors__
__perfor-_mance__
__resources_consumed__
__giga__
__frequent_values__
__running_threads__
__transfer_rate__.
__instruction_and_data_cache__
__cache_memories__,
__loop_execution__
__compiled_programs__
__low_latency_and_high_bandwidth__
__execution_time__)
__function_inlining__
__gate_count__,
__redundant_messages__
__compute-bound__
__cache_locality__.
__cache_miss_rates__,
__simulation_accuracy__.
__multiple_branches__
__fetch_policies__
__physical_registers__.
__delivery_path__
__significant_power_savings__.
__sleep_mode__,
__computation_power__,
__L2_and_L3__
__fetch_policy__
__software_cache__
__reduced_power_consumption__
__maximum_parallelism__
__degrading_performance__
__storage_capacities__.
__memory_and_CPU__
__low_hardware_complexity__
__access_costs__.
__limiting_factor__.
__flash-memory__
__processing_capability__,
__access_frequency__
__read/write_operations__
__adaptive_routing__,
__irregular_codes__
__null_messages__
__algorithmic_efficiency__
__conserve_energy__
__read-intensive__
__fewer_resources__
__CPU_usage__.
__commit_processing__
__CPU_cycles__.
__reference_stream__
__workload_characteristics__,
__throughput_degradation__.
__severely_impact__
__data_cache_performance__
__bank_conflicts__
__maximum_efficiency__.
__line_size__,
__read_throughput__
__computation_complexity__,
__bus_width__
__execution_units__,
__frequency/voltage__
__load_unbalance__
__protocol_processing__,
__temporal_coherency__
__data_bus__,
__table_sizes__
__load_latency__
__communication_throughput__
__boot-up__
__coherence_traffic__
__computational_demands__.
__instructions_executed__
__hardware_contexts__
__power_consumption__)
__completely_eliminated__
__register_usage__
__faster_processors__
__instruction_level_parallelism__,
__critical_instructions__
__negligible_performance_overhead__.
__high_responsiveness__
__check-pointing__
__gigabits_per_second__
__stream_buffers__
__task_sets__,
__coherence_misses__
__incurs_significant__
__LRU_replacement__
__prefetch_scheme__
__clock_rates__,
__cache_leakage__
__instruction_selection__,
__vector_clock__
__migration_cost__
__increasing_throughput__
__CPU_resources__.
__disk_I/Os__
__processor_speeds__.
__cache-line__
__read_misses__
__surprisingly_low__
__minimal_overhead__.
__hardware_modification__
__hardware_budget__
__64-byte__
__small_area__.
__off-chip_memory_accesses__
__consume_significant__
__load_and_store_instructions__
__data_contention__.
__additional_circuitry__
__memory_access_latencies__.
__sustained_throughput__
__client_caches__
__power_consumption_and_area__
__memory_unit__
__key_lengths__
__management_subsystem__
__acceptable_overhead__
__tens_of_thousands__
__slightly_increases__
__energy_overheads__
__conventional_architectures__
__unit_cost__.
__throughput_rates__
__CPU_resource__
__checkpoint_overhead__
__extra_cost__.
__consumed_power__
__effectively_hide__
__update_cost__.
__abort_rate__
__processor_speed__.
__bandwidth_savings__.
__additional_layers__
__10_seconds__.
__page_size__,
__pause_times__.
__clock_speeds__.
__flash_drive__
__high_density__.
__lock_contention__,
__disk_scheduling_algorithm__
__hardware_cache__
__hard_disks__,
__buffer_cache__.
__battery_lifetime__,
__SPEC95_integer__
__instruction_fetching__
__data_caching__,
__cache_miss_ratio__
__Flash_memory__.
__direct-mapped_cache__
__memory_contention__.
__paging_activity__
__extremely_low__.
__cache_ways__
__band_width__
__communication_phases__
__dynamic_scheduler__
__dictionary_size__
__microarchitectural_technique__
__energy_per_bit__
__cache_contention__
__packet_latency__.
__transaction_restarts__
__instructions_from_multiple_threads__
__substantially_decrease__
__L2_cache_misses__
__page_fault_rate__
__memory_latencies__,
__initial_latency__
__processor_configurations__.
__optimum_performance__.
__processor_configuration__
__chip-wide__
__computational_load__,
__performance_enhancement__,
__hardware_budget__.
__hardware_costs__,
__leakage_energy__.
__event_counters__
__data_dependency__,
__low_hardware_cost__.
__adversely_impacting__
__delay_overhead__.
__write_cache__
__deeper_pipelines__
__inherent_randomness__
__line_speeds__.
__shared_caches__,
__fetch_architecture__
__memory_encryption__
__round_trip__
__remote_memory_accesses__
__programmer_effort__.
__decoding_delay__
__defect_density__,
__computation_overhead__,
__cache_space__.
__processor_caches__
__problem_sizes__,
__TLB_miss__
__data_allocation__,
__interprocessor_communication__,
__architectural_improvements__
__expansion_ratio__
__average_packet_latency__
__interrupt_overhead__
__page_faults__,
__substantially_larger__
__timing_predictability__
__prefetching_schemes__
__operand_size__
__cache_effects__
__memory_access_conflicts__
__checkpoint_operation__
__batch_processing__,
__reduced_memory__
__lower_costs__,
__computational_loads__
__access_memory__
__poor_locality__
__network_overhead__,
__tester_memory__
__data_cache_behavior__
__administrative_burden__
__Mbit/s__.
__cache_line_size__
__improve_performance_significantly__.
__update_costs__.
__maintenance_cost__,
__tag_array__
__last_level_cache__
__per_month__
__memory_bound__
__potentially_huge__
__coding_efficiency__,
__throughput_performance__,
__submitted_jobs__.
__clock_rate__,
__data_prefetching__,
__disk_capacity__
__core_counts__
__scheduling_decisions__,
__cache_behavior__,
__Main_memory__
__task_granularity__
__architectural_complexity__
__CPU_consumption__
__unit-speed__
__copying_overhead__
__energy_consumed__
__area_requirement__
__disk_accesses__,
__pipeline_scheduling__
__communication_requirements__,
__workload_redistribution__
__aggregate_bandwidth__
__memory_traffic__,
__dynamic_slack__
__processing_capacity__,
__peak_bandwidth__
__physical_memory__,
__database_size__,
__code_growth__.
__live_heap__
__service_disruption__.
__performance_losses__.
__significant_performance_loss__.
__Reducing_power__
__achieving_maximum__
__conserving_energy__.
__CPU_availability__
__cryptographic_operations__,
__retrieval_times__
__wait_time__.
__128_bit__
__operation_costs__.
__local_disks__.
__temporal_and_spatial_locality__.
__disk_utilization__.
__forward_steps__
__vector_registers__
__RAM_memory__
__annotation_effort__
__compilation_times__
__bandwidth_demands__.
__memory_performance__,
__maintaining_data_consistency__
__per_cycle__,
__high_overheads__.
__implementation_cost__,
__external_memory_accesses__
__objective_function_evaluations__
__seek_times__
__transfer_rates__.
__cache_hit_rate__
__sequential_accesses__
__Additional_benefits__
__page_reference__
__fine-grain_parallelism__.
__idle_state__
__cache_tag__
__guest_domain__
__aggressive_prefetching__
__page_size__.
__labor_cost__
__space_utilization__,
__data_accesses__,
__path_lengths__,
__job_schedulers__
__idle_processor__
__precious_bandwidth__
__second-level_cache__
__large_caches__,
__memory_access_latencies__
__cache_hit_rates__.
__thread_execution__
__task_preemption__
__server_workloads__,
__high_bandwidth_and_low_latency__
__execution_performance__,
__per_packet__.
__energy_costs__,
__wasted_energy__
__higher_resolutions__
__L2_misses__
__packing/unpacking__
__SPEC2000_benchmarks__.
__clock_domains__,
__database_replicas__
__increases_rapidly__,
__tight_deadlines__
__private_cache__
__reduced_drastically__
__disk_performance__.
__increased_concurrency__
__frequently_executed_paths__
__communication_efficiency__,
__timing_predictions__
__memory_constraints__,
__array_layouts__
__register_pressure__.
__signing_and_verification__
__lower_latencies__
__single-thread_performance__.
__fewer_resources__.
__bus_transactions__
__quality_requirement__
__total_wire_length__.
__loop_fusion__.
__hardware_configurations__.
__victim_buffer__
__spill_code__.
__calendar_queue__
__fence_instructions__
__conflicting_constraints__
__performance_overheads__,
__TLB_entries__
__parallel_processes__,
__data_TLB__
__message_traffic__,
__disk_energy__
__unnecessary_computations__
__power_efficient__.
__single_thread__
__array_contraction__
__speculative_prefetching__
__read_operations__,
__low-load__
__mutual_exclusive__
__lower_power_consumption__,
__memory_interference__
__fetch_engine__
__resource_usages__
__power_usage__.
__dominating_factor__
__roughly_constant__
__update_transaction__
__parallel_workload__
__grows_exponentially__,
__buffer_storage__
__WSN_node__
__cache_coherence__,
__cache_organizations__.
__striping_unit__
__power-performance_efficiency__
__latency_hiding__.
__cache_hit_ratios__
__compact_size__
__inter-processor_communications__
__modest_overhead__
__fine_granularity__,
__bare_PC__
__inter-iteration__
__memory_subsystem__,
__access_latencies__,
__MPEG_decoding__
__minimal_hardware__
__orders-of-magnitude__
__microprocessor_systems__.
__miss_rates__,
__set_size__,
__resource_overhead__
__precision_requirements__
__stall_cycles__
__minimum_power_consumption__
__miss-rate__
__energy_consumptions__.
__cache_sharing__.
__correct_operation__,
__incur_considerable__
__instruction_and_data_caches__
__miss_ratios__.
__thread-level_parallelism__,
__database_accesses__
__query_messages__.
__larger_caches__
__optimized_designs__
__load_queue__
__dynamically_balancing__
__million_dollars__
__spare_capacity__.
__optimal_load_balancing__
__client_caching__
__elapsed_time__,
__maintenance_overhead__,
__response_latency__,
__programmer_effort__
__optimum_conditions__
__Communication_overhead__
__overhead_costs__.
__multicast_forwarding_state__
__low_contention__
__system's_performance__,
__programming_productivity__
__CPU_speed__,
__runtime_overheads__.
__computational_capability__.
__space_usage__,
__frame_rates__,
__high_processing_speed__
__line_rate__.
__running_speed__
__greatly_decrease__
__query_times__.
__cache_miss__.
__constant_memory__
__improves_efficiency__
__DRAM_access__
__cache_hit_ratio__,
__larger_sizes__
__external_bus__
__wall_clock__
(__Dynamic_Voltage_Scaling__)
__cryptographic_computations__
__form_factor__,
__resource_savings__
__CPU_overhead__.
__execution_cycles__.
__timing_violation__
__average_power_consumption__.
__read_and_write_ports__
__task_synchronization__
__carefully_choose__
__thread_assignment__
__page_coloring__
__cache_conflicts__.
__I/O__)
__live_objects__.
__roughly_equivalent__
__value_locality__,
__invalidation_traffic__
__reducing_power_consumption__.
__flash_devices__
__consume_less_energy__
__short-duration__
__storage_capability__
__deadline_violations__
__network_speeds__.
__execution_costs__.
__total_cost_of_ownership__.
__cycle_counts__
__address_bits__.
__instructions_per_cycle__,
__memory_access_times__.
__power_budgets__.
__idle_times__.
__improving_accuracy__
__constant_amortized__
__MPI-IO__,
__balanced_workload__
__reduces_drastically__
__deployment_cost__.
__faster_response__
__rapidly_increases__
__WCET_estimation__
__wakeup_logic__
__strong_scaling__
__finer_control__
__profiling_framework__
__RAM_usage__
__costs_involved__
__client-side_caching__
__remarkably_reduces__
__disk_failure__.
__large_messages__,
__inlet_temperature__
__processor_frequency__
__memory_fragmentation__
__cache-related_preemption_delay__
__packaging_and_cooling__
__power_utilization__
__additional_energy_savings__
__query_response_times__.
__on-chip_caches__,
__database_scans__.
__paging_delay__
__transmission_costs__,
__higher_scalability__
__low_energy_consumption__,
__disk_seeks__
__idle_intervals__
__buffering_requirements__
__architectural_parameters__,
__smaller_size__,
__CPU_power__,
__uniformly_distribute__
__completely_ignoring__
__register_requirements__.
__task_schedules__
__aggregate_throughput__,
__drastically_decrease__
__reducing_energy__
__&mu__;s
__energy-efficiency__,
__small_files__.
__acceptably_low__
__performance_scalability__
__desired_reliability__
__ensuring_correct__
__rate_increases__
__memory_occupation__
__balanced_scheduling__
__CPU_frequency__
__operational_efficiency__.
__administrative_overhead__
__great_savings__
__data_center's__
__read_and_write_operations__,
__local_store__
__peak_floating-point_performance__
__direct-mapped_caches__,
__significant_speedups__,
__switching_overhead__
__trace_buffer__
__code_expansion__
__capacity_misses__
__redundant_messages__.
__churn_rate__
__superscalar_processor__,
__load/stores__
__bit_transitions__
__pipeline_gating__
__dynamic_voltage_scaling__,
__migration_overhead__
__finer-grained_control__
__fast_decompression__
__texture_memory__.
__storage_requirement__,
__cache_efficiency__.
__investment_cost__
__wait_time__,
__memory_transfer__
__branch_penalty__
__grows_rapidly__.
__long-latency_load__
__load-balanced_switch__
__memory_traps__
__multiprogramming_level__
__memory_storage__,
__instrumentation_overhead__
__snooping_cache__
__communication_loads__
__extra_hardware__.
__cache_hits__,
__major_defects__
__reduced_latency__.
__access_frequencies__.
__speed_improvements__.
__O-GEHL__
__access_frequency__.
__interrupt_latency__
__power_source__.
__cache_replacement__.
__allocation_schemes__,
__impractically_large__
__cache_organization__,
__processing_overheads__.
__fewer_processors__
__simultaneous_optimization__
__conventional_processors__.
__concurrent_accesses__.
__computational_complexities__,
__FF/Rew__
__baseline_processor__
__disk_failures__,
__administrative_costs__.
__main_performance_bottleneck__
__exploit_locality__
__lock_acquisition__
__processors_and_communication_links__
__strong_consistency__.
__compiler_support__,
__storage_efficiency__,
__CPU_energy_consumption__
__scheduling_overhead__.
__high_frame_rates__.
__arithmetic_instructions__
__bus_widths__
__code-size__
__Java_processors__
__page_replacement_policy__
__CPU_speeds__
__extra_memory__
__overflow_records__
__degrades_performance__.
__sensor_inputs__
__overload_conditions__,
__reduced_energy_consumption__.
__modest_increases__
__file_writes__
__cache_banks__
__message_queues__.
__memory_access_latency__.
__fault_tolerance_techniques__,
__level_shifters__.
__standby_state__
__performance_optimizations__,
__load/store_queue__
__centralized_controller__
__helps_alleviate__
__reconfiguration_overhead__.
__coding_effort__
__write_throughput__
__prohibitively_complex__
__row_buffer__
__CPU_performance__,
__Soft_Updates__
__small_writes__
__checksum_mismatches__
__communication-computation_overlap__
__hand_optimized__
__conventional_processors__,
__data_freshness__,
__instruction_parallelism__
__trade_offs_between__
__L2_cache_organization__
__maximum_throughput__,
__comparatively_low__
__parallel_memories__
__buffer_requirements__,
__TLB_performance__
__communication_overheads__,
__implementation_costs__.
__miss_rates__.
__memory_efficiency__,
__block_boundaries__.
__acceptable_overhead__.
__multiple_ports__
__saving_resources__
__network_speeds__
__current_GPUs__
__substantial_saving__
__server_bandwidth__.
__internal_fragmentation__
__write/erase__
__double_buffering__
__idle_times__,
__instruction_window__,
__HTTP/1.1__.
__greatly_decreased__
__processor_pipelines__
__TLB_misses__,
__indirect_jump__
__low_performance_overhead__
__maximizing_resource_utilization__.
__increased_performance__,
__virtually_indexed__
__cache_designs__.
__exploits_temporal_locality__
__strip-mining__
__modern_designs__
__variable_voltage_processors__.
__workload_balance__.
__data_contention__,
__RAID_systems__.
__bus_utilization__
__disk_energy_consumption__
__instruction_fetch_bandwidth__
__power-efficiency__
__slightly_longer__
__processor_throughput__
__low_performance_overhead__.
__unnecessarily_high__
__FPGA_reconfiguration__
__minimal_latency__
__memory_parallelism__
__active_power__.
__major_limiting_factor__
__considerably_increased__.
__node_utilization__
__application_executions__
__prediction_tables__.
__disk_access__,
__off-chip_memory__,
__trace-level__
__cache_blocks__,
__branch_prediction_accuracy__,
__deadline_requirements__.
__power_hungry__.
__file_creation__
__prediction_table__.
__higher_speed__,
__cost/performance__,
__implementation_costs__,
__SMT_processors__,
__data_dimensionality__,
__lower_latency__.
__small_messages__.
__write_requests__.
__failure-free_overhead__
__Current_microprocessors__
__FM_Reviews__.
__saving_power__.
__storage_consumption__
__higher_throughputs__
__mis-speculated__
__vector_register__
__key_storage__
__mispredicted_branches__
__slack_time__.
__related_costs__
__remote_memory_accesses__.
__issue_queues__
__reliability_requirements__,
__access_latencies__.
__single_appearance_schedule__
__concurrent_requests__,
__uniprocessor_systems__,
__deliver_high_performance__
__block_accesses__.
__maximally_exploit__
__pipeline_architecture__,
__dead_blocks__
__well_balanced__.
__considerable_saving__
__bottom-line__
__dynamically_tuned__
__reduced_significantly__,
__acquiring_and_releasing__
__pipeline_stalls__
__replacement_policies__,
__price/performance_ratio__
__DRAM_chip__
__LRU_replacement_policy__
__working_sets__,
__off-chip_memory_accesses__.
__synchronization_overhead__,
__unnecessarily_long__
__processing_load__.
__single_block__
__achieve_higher_throughput__
__communication_traffic__,
__Boolean_search__
__cache_hits__.
__cache_miss_rates__.
__random_reads__
__event_queue__
__CPU_load__,
__size_constraints__,
__space_consumption__.
__turn-around_times__
__small_caches__
__Loop_unrolling__
__join_processing__,
__improving_throughput__
__issue_widths__
__cache_accesses__,
__write_latency__
__pipeline_parallelism__.
__per_week__,
__modest_cost__.
__higher_clock_frequencies__
__existing_DVS_algorithms__
__memory_constraint__
__directory_cache__
__virtualization_overhead__
__random_writes__
__signi?cant__
__application_launch__
__idle_power__
__high_data_availability__,
__bus_bandwidth__.
__load_reduction__
__low-power_mode__.
__CPU_cache__
__snoopy_cache__
__tighter_integration__
__saves_significant__
__branch_mispredictions__,
__user_interactivity__,
__reducing_communication_overhead__
__additional_savings__
__random_write_performance__
__trade-off__:
__reorder_buffer__,
__link_speed__.
__prolonged_periods__
__buffer_block__
__pin_bandwidth__
__branch_prediction_accuracy__.
__indirect_jumps__
__performance_tradeoff__.
__throughput_requirement__.
__computational_expensive__
__memory_access_locality__
__cache_efficiency__
__operational_cost__,
__negligible_overhead__.
__capacity_limitations__
__delay_penalties__
__memory_stalls__
__miss_ratio__.
__workload_fluctuations__
__special_circumstances__.
__executed_simultaneously__,
__negligible_area_overhead__.
__critical_path_length__
__hardware_resource__.
__worst_case_execution_times__
__Speculative_multithreading__
__high-speed_memory__
__message-handling__
__memory_chips__,
__decoder_complexity__.
__index_update__
__single_thread_performance__
__L2_data_cache__
__trace_caches__
__inter-thread_communication__
__multiple_instruction_issue__
__processing_speeds__.
__register_requirements__,
__collateral_damage__.
__miss_rate__,
__incurs_higher__
__private_caches__,
__modest-sized__
__maximum_energy_saving__
__BA_protocol__
__reliability_and_availability__,
__resource_utilisation__.
__reconfiguration_cost__
__single_point_of_failure__,
__vector_operations__,
__buffer_sharing__.
__single_disk_failure__
__memory_pressure__
__core_dump__
__memory_pressure__.
__GB/s__.
__redistribution_costs__
__advanced_reservations__
__source_operand__
__periodic_checkpointing__
__multiple_outstanding__
__test_application_times__.
__read_requests__.
__instrumentation_points__
__decompression_speed__
__high_rate__,
__steering_logic__
__error_detection_coverage__
__transmission_bandwidth__,
__rekeying_cost__
__L1_data_cache__.
__queuing_delays__.
__synchronization_delays__
__memory_technology__.
__query_costs__
__prefetching_algorithm__,
__Web_page_retrieval__
__read_operation__.
__per_dollar__
__prefetch_requests__
__main_memories__.
__large_instruction_windows__
__acquisition_times__
__explicit_memory_management__.
__low_throughput__.
__long_memory_latencies__
__vector_register_file__
__processor_frequencies__
__CPU_resources__,
__compute_bound__
__simultaneous_connections__
__message_latency__,
__physical_registers__,
__moderate_sized__
__improving_network_performance__
__executing_instructions__
__carefully_balance__
__resource_bottlenecks__
__computational_burden__,
__hardware_redundancy__.
__local_storage__,
__network_diameter__,
__large_caches__.
__carefully_balanced__
__state_maintenance__.
__page_frames__
__message_switching__
__bit-streams__
__roughly_half__
__storage_units__,
__wide_bus__
__software_DSMs__
__network_bandwidths__.
__pointer-intensive_applications__
__deadlock_and_livelock__
__worst-case_instruction_cache_performance__
__issue_slots__
__runtime_estimates__
__messaging_cost__
__array_size__
__disk_reads__
__short_distances__
__CPU_seconds__
__exploiting_locality__
__inter-node_communication__.
__NoC_routers__
__memory_devices__,
__DRAM_architecture__
__code_readability__
__irrelevant_attributes__,
__higher_reliability__,
__heavy_loads__
__Memory_requirements__
__aggregated_bandwidth__
__memory_sizes__,
__soft_aperiodic_tasks__
__mis-speculation__
__frequency-voltage__
__utilization_rates__.
__placement_strategy__.
__workload_imbalance__
__drops_significantly__.
__Java_heap__
__set_associative_caches__
__bandwidth_demand__.
__message_transfers__
__cost_considerations__
__miss_penalties__
__special_hardware_support__.
__single_instruction__
__VLIW_code__
__processor_counts__
__floating_point__,
__input/output_ports__
__write_operation__.
__code_expansion__.
__task-sets__
__file_replication__,
__regular_structures__,
__power_reductions__.
__additional_costs__.
__sleep_signal__
__cache_conflict_misses__.
__limited_parallelism__
__critical_operations__
__memory_structure__,
__peak_power_consumption__
__monolithic_register_file__
__TCP_offload__
__small_memory__,
__memory_demands__.
__floating-point__,
__instruction_window_size__
__GB/sec__
__size_reduction__,
__ROB__,
__set_associativity__
__cache_management_policies__
__Fat_H-Tree__
__degraded_mode__
__cache-sensitive__
__significantly_increased__,
__high_memory_bandwidth__.
__high_computational_performance__
__partial_inlining__
__message_delivery_latency__
__write-once_optical__
__trace_length__
__significant_performance_loss__
__conventional_caches__
__quicker_response__
__raw_performance__.
__process_variability__,
__timing_predictability__.
__wasted_resources__
__idle_processors__
__wasted_effort__
__key_length__.
__thread_execution__.
__operating_range__.
__central_coordination__.
__pipelined_execution__
__irregular_memory_access_patterns__.
__timing_overhead__
__long_execution_times__
__multiple_copies__.
__synchronization_overheads__
__file_level__
__database_processing__.
__transaction_deadlines__.
__high_image_quality__,
__priority_schedulers__
__stall_time__.
__certificate_management__.
__performance_benefits__,
__issue_width__,
__electricity_bill__
__scheduled_events__
__shock_resistance__,
__application-specific_hardware__
__throughput_rate__,
__Cache_performance__
__register_accesses__
__low-throughput__
__element_moves__
__low_power_dissipation__,
__lower-power__
__slack_times__
__scheduling_instructions__
__bank_selection_instructions__
__binary_compatibility__.
__startup_latency__.
__cache_organizations__,
__low-power_operating_modes__
__instruction-cache__
__dirty_cache_lines__
__line_sizes__
__idle_periods__,
__locality_improvement__
__cache_access__.
__search_costs__,
__inclusion_property__
__instrumentation_overhead__.
__frequency_scaling__.
__cost_trade-offs__
__frequently_executed_paths__.
__R-NUMA__
__compressed_test_data__
__power_penalty__
__allocated_resources__.
__meeting_deadlines__,
__DVS_and_ABB__
__coherence_overhead__
__high_productivity__.
__mispredicted_branch__
__stream_buffers__,
__generational_collector__
__acceptable_levels__
__thread_state__
__bypass_networks__
__increased_availability__
__saving_energy__,
__client_satisfaction__
__backup_cache__
__hardware_overheads__
__pipeline_depth__,
__low_computation_cost__.
__false_dismissal__
__test_set_size__.
__minimal_hardware_overhead__
__scheduling_overhead__,
__attraction_memory__
__a_4__-wide
__total_energy__.
__compression_and_decompression__,
__block_level__,
__slack_time__,
__code_compression__,
__texture_memory__,
__packet_processing__,
__cache_levels__.
__asynchronous_design_style__
__packet_latency__,
__save_considerable__
__SW-TPM__
__moving-head__
__high_modularity__
__low_latencies__
__replication_based__
__cache/memory__
__CPU_cost__.
__working_set_size__.
__double_vias__
__marginal_overhead__
__random_write__
__instruction_buffer__
__space_requirement__,
__latency_effects__
__patient_throughput__
__memory_dependence_prediction__
__unit_cost__,
__cache-related_preemption__
__speed_penalty__.
__code_density__,
__sample_rates__
__circuit_optimizations__
__configurable_logic__,
__test_cases__)
__packet_handling__
__live-range_splitting__
__data_dependence__.
__running_threads__.
__wirelength_increase__
__high_line__
__logging_overhead__
__allocation_mechanism__,
__high_locality__
__skip_graphs__
__storage_savings__
__parallelized_code__
__update_rate__,
__unacceptably_low__
__branch_outcome__
__store_queue__
__Previous_schemes__
__rendering_speed__,
__disk_scheduling__,
__L1_cache__.
__remains_unchanged__,
__degrading_performance__.
__floating-point_performance__
__memory_pool__
__latency_hiding_techniques__
__cache_hit_rate__.
__eviction_policies__
__expected_values__,
__power-consumption__
__average_memory_access_latency__
__multi-core_CPUs__,
__distance_computations__.
__misprediction_penalty__
__error_checking__.
__per_clock_cycle__,
__job_completes__
__access_conflicts__.
__remained_unchanged__.
__space-sharing__,
__load_misses__
__software_costs__.
__compilation_speed__
__accident_rate__
__mobile_processors__
__screen_resolution__.
__coarse-granularity__
__user-perceived_latency__.
__concurrent_search__
__branch_target__
__backward_slices__
__SMT_architectures__
__throughput_rate__.
__erase-before-write__
__lower_power__.
__live_objects__,
__insertion_policy__
__resource_consumptions__
__CPU_cost__,
__transfer_rate__,
__global_synchronization__,
__computation_resources__,
__hardware_parallelism__.
__sharply_increased__
__shared_memory_access__
__memory_sharing__.
__cycle_accuracy__
__pipeline_depths__
__stream_buffer__
__stall_times__
__energy-delay2__
__least-recently-used__
__vector_unit__
__transaction_throughput__.
__processing_cost__,
__hardware_performance__,
__spatial_and_temporal_locality__.
__index_scans__
__database_workloads__,
__turn-around_times__.
__erasure_coding__,
__issuing_instructions__
__cost-benefit_analysis__.
__misprediction_recovery__
__Accurate_branch_prediction__
__request_arrival_rate__,
__application_executions__.
__dependent_instructions__.
__storage_utilization__.
__improve_performance_significantly__
__memory_copies__
__disk_traffic__
__tens_of_milliseconds__
__loads/stores__
__smaller_groups__,
__direct_mapped__
__processor_cache__
__large_meshes__.
__software_DSMs__.
__10_seconds__,
__hold_times__
__join_cost__
__vulnerability_factor__
__memory_cost__.
__pilot_overhead__
__inter-tile__
__disk_seek__
__silent_data_corruption__
__message_startups__
__shorter_delay__
__consistency_guarantees__.
__query_response_times__,
__data_forwarding__,
__processor_counts__.
__column-major__
__centralized_approaches__,
__line_buffers__
__redundant_execution__.
__guest_domains__
__mirrored_disk__
__extra_delays__
__register_spilling__
__supercomputing_centers__.
__clock-cycle__
__prediction_tables__
__write_back__
__high_performance_processors__.
__customer_service_levels__.
__randomly_accessed__
__disk_caches__
__directly_translates__
__voice_streams__.
__scheduling_flexibility__
__pin_count__,
__detection_coverage__
__processor_cycles__,
__run-time_overhead__,
__low-power_mode__
__manufacturing_cost__,
__proportional_increase__
__cycle_counts__.
__error_tolerances__
__Erasure_coding__
__processing_overhead__,
__disk_writes__
__disk_write__
__total_cost__,
__energy_consumption__)
__drowsy_cache__
__negligible_performance_penalty__.
__RAID_Level_5__
__turn_around_time__
__speculative_storage__
__tape_drive__
__quality_loss__.
__format_conversion__,
__memory_cost__,
__deadline_miss_rate__
__NoC_performance__
__input/output_operations__
__huge_overhead__
__storage_usage__
__random_accesses__.
__data_retention__.
__locking_overhead__
__network_latencies__,
__iSCSI_storage__
__thread_migration__,
__substantially_reduced__,
__lock_based__
__greatly_decreased__.
__intermediate_storage__.
__battery_lifetimes__
__computational_workload__
__tolerating_multiple__
__submitted_jobs__
__dependent_operations__.
__parallel_jobs__,
__periodic_update__
__per_packet__,
__reduced_bandwidth__
__code_duplication__,
__communication_latencies__,
__DSP_kernels__
__victim-aggressor__
__SPEC2K_benchmarks__
__context_switch_overhead__
__gathering_statistics__
__wireless_network_simulation__
__reducing_code_size__
__runtime_complexity__.
__low_update_rates__,
__insertion_rate__
__communications_overhead__
__gang_scheduling__.
__functional_redundancy__
__small_files__,
__table_entries__.
__intensive_task__
__long-latency_loads__
__hardware_contexts__,
__policy_optimization__.
__minimum_latency__,
__personal_workstation__
__bus_transaction__
__area_cost__,
__shared_resource_contention__
__route_updates__.
__related_costs__.
__network_control_plane__
__word-lengths__
__sub-millisecond__
__block_cleaning__
__non-volatile_RAM__
__routing-table__
__fuel_consumption__,
__frequent_updates__,
__improving_efficiency__,
__construction_cost__.
__minimal_overhead__,
__developers_spend__
__simultaneous_connections__.
__error_checker__
__uniform_load__
__bus_contention__.
__messaging_overhead__.
__workload_variation__
__worst-case_execution_time__.
__handoff_latencies__
__main_memories__,
__backbone_routers__,
__consecutive_cycles__.
__streaming_rate__,
__transaction_throughput__,
__switching_overhead__.
__operational_cost__.
__instruction_and_data_caches__.
__causing_excessive__
__processor_speeds__,
__VLIW_instruction__
__Cache_misses__
__two_fold__
__data-rates__
__improves_accuracy__.
__test_set_size__,
__soft-error_vulnerability__
__cost_intensive__
__bandwidth_savings__,
__faster_execution__.
__delta-encoding__
__LRU_replacement_policy__.
__save_network_bandwidth__
__DRAM_refresh__
__search_effort__.
__index_size__,
__caching_and_prefetching__.
__lookups_per_second__
__Special_requirements__
__fault-coverage__
__redundant_disks__
__core_processor__.
__disk-oriented__
__hash_joins__
__screen_image__
__virtual_function_calls__
__uniprocessors_and_multiprocessors__.
__Mean_Time_To_Failure__
__group_sizes__,
__processing_costs__,
__sensing_area__,
__macroscopic_view__
__user_revocation__
__enhancing_reliability__
__high_resolutions__.
__conflict_miss__
__query_execution_times__
__moderate_cost__
__request_reordering__.
__multiprocessor_operating_systems__
__maintaining_consistency__.
__low_communication_overhead__,
__CPU_power__.
__code_explosion__
__c-AOTC__
__preemption_delay__
__routing_load__.
__hardware_redundancy__,
__disk_scrubbing__
__shuffle_operations__
__data_volumes__,
__error_detection_latency__
__speeded-up__
__router_buffer_size__
__floating-point_operation__
__utilization_rate__
__longer_latency__
__energy_spent__
__memory_subsystems__.
__customer_requests__,
__SPEC2000_integer_benchmarks__
__resources_utilization__,
__minimal_performance_overhead__
__minimal_performance_overhead__.
__broadcast_capability__
__interconnect_delays__,
__quality-control__
__precise_exceptions__,
__maintaining_coherence__
__Instruction_cache__
__turned-off__
__high-end_processors__
__code_density__.
__pipeline_latency__
__address_buses__,
__flow-graph__
__task_partitioning__,
__temporary_arrays__
__dynamic_and_leakage_power__.
__task_level__,
__instruction-set_extensions__
__evenly_distribute__
__lookup_speed__
__modest_performance_overhead__
__active_threads__
__resource_utilizations__
__performance_and_energy_consumption__,
__battery_voltage__
__saving_memory__
__file_growth__
__power_consumption_and_delay__
__route_discovery_overhead__
__performance_impact__,
__operation_shuffling__
__inter-reference__
__multiprogramming_level__,
__Gbit/sec__
__compile_time__,
__high_throughput_and_low_latency__.
__increase_throughput__.
__storage_clusters__.
__failure-free_execution__
__collective_operation__,
__component_failure_rates__
__field_multiplications__
__avoiding_deadlock__
__pipelined_schedule__
__multi-level_caches__.
__achieves_higher_throughput__
__processing_rates__.
__conflict_misses__,
__power_consumed__
__multi-core_designs__
__Unix_file_systems__
__accurate_modeling__.
__short_intervals__
__avoiding_overfitting__
__heap_size__.
__cost_and_power_consumption__,
__state-saving__.
__reducing_power_consumption__,
__current_microprocessors__.
__during_high-level_synthesis__
__application's_working_set__
__short-lived_objects__
__sequential_access__,
__schedule_lengths__.
__FC-AL__
__line_speed__.
__read_requests__,
__test_compression_environment__.
__tag_arrays__
__scatter/gather__
__negligible_area_overhead__
__write_cache__.
__packet_classifiers__.
__Torus_Ring__
__DRAM_bandwidth__
__moderate_length__
__cache_port__
__spend_significant__
__instruction_TLB__
__code_layout__
__high_speed_processing__
(__static_and_dynamic__)
__reference_locality__,
__disk_subsystems__
__mem-_ory__
__low_memory__,
__free-list__
__re-_quires__
__direct-mapped_caches__.
__per_thread__,
__annual_growth__
__pattern_history_table__
__fully-associative__
__anti-messages__
__virtually_addressed__
__loop_overhead__
__exploit_thread-level_parallelism__
__cache-to-cache_transfers__
__instruction_windows__
__migratory_sharing__
__initiation_interval__
__extend_battery_life__
__hit_rates__.
__set-associative_caches__,
__query-evaluation__
__fault_tolerance_capability__
__window-constrained__
__intercluster_communication__
__R-type__
__per-formance__
__industry_standard_benchmark__
__cut_down__.
__cache_replacement__,
__software_prefetching__,
__sufficient_parallelism__.
__compressed_bitmaps__
__run_time_overhead__.
__parallelization_overhead__
__poor_spatial_locality__
__processor_register__
__independent_instructions__.
__mispredicted_branches__.
__small_caches__,
__power_usage__,
__exploiting_ILP__
__tightly_coupled_multiprocessors__.
__vector_accesses__
__participating_nodes__,
__storage_servers__,
__reasonable_effort__
__removing_useless__
__low_latency_and_high_bandwidth__.
__compression_function_evaluations__
__communication-intensive_applications__
__instruction_redundancy__
__guest_jobs__
__increase_throughput__,
__jump_pointer__
__task_schedulers__
__latency_bounds__.
__routing_table_sizes__,
__main_storage__,
__leakage-saving__
__cache_access_latency__
__remains_unaffected__.
__directory_protocol__
__Software_prefetching__
__deadline_miss_ratio__.
__locking_overhead__.
__soft_real-time_transactions__.
__extra_processors__
__executed_instructions__,
__larger_problem_sizes__
__executing_program__.
__Prolog_execution__
__instruction_cache_misses__.
__cache_pollution__.
__register_sets__.
__temporal_granularity__
__register_allocations__
__block_transfer__,
__reduced_energy__
__pause_times__,
__frequency_scaling__,
__pre-emption__,
__runahead_execution__.
__wiring_complexity__.
__concurrent_requests__.
__clustered_processors__
__buffer_disks__
__megabytes_per_second__
__query_latency__,
__redundant_threading__
__allotted_processors__.
__local_disk__.
__worst-case_lookup_time__
__memory_cache__
__memory_caching__
__prediction_table__
__pointer_intensive__
__disk_throughput__.
__rear-end__
__sanitized_database__
__point_to_point_communication__
__computation_load__.
__development_cycles__,
__software_pipelined_loop__
__page_level__
__NUMA_systems__
__cached_data__,
__recovery_point__
__buffer_memory__.
__resource-usage__
__load_instructions__,
__arithmetic_instructions__.
__synchronization_costs__.
__coherence_controller__
__computing_machines__,
__executed_instructions__.
(__Instructions_Per_Cycle__)
__incurs_lower__
__cache_line_sizes__
__optimizing_energy_consumption__
__transfer_times__.
__branch_misprediction_penalty__.
__double-buffering__
26__&percnt__;
23__&percnt__;
__branch_outcomes__
__coordinated_checkpointing__,
__heap_usage__
__scaling_effects__
__VCG_payments__.
__infrastructure_requirements__
__BLAS_operations__
__wall-clock_execution__
__modern_superscalar_processors__
__dynamically_optimizing__
__posting_lists__.
__secondary_storage_device__
__garbage_collections__
__memory-intensive_workloads__.
__diminishing_returns__,
__latency_and_jitter__.
__multi-level_caches__
__extra_hardware__,
__cache_thrashing__
__read_operation__,
__high_throughputs__.
__I-O__
__general-purpose_computation__
__software_development_costs__.
__CPU_loads__
__maximum_energy_savings__
__route_reconstruction__
__Advantages_include__
__CC-NUMA_multiprocessors__
__judiciously_chosen__
__worst_case_constant__
__area_utilization__,
__cache_configuration__.
__MLP-aware__
__memory_access_latency__,
__counting_Bloom_filter__
__memory_intensive_applications__.
__prefix_expansion__
__cache_replacement_policy__.
__shared_L2__
__innermost_loops__
__improving_scalability__.
__return_address_stack__
__improved_quality__,
__Kilo-instruction__
__Kilo-instruction_processors__
__energy-inefficient__
__inter-PE__
__heavy_workload__
__user_convenience__,
__additional_overhead__,
__individual_cores__,
__dynamically_allocated__,
__redundant_transmissions__.
__programmable_vertex__
__surviving_disks__
__cluster_utilization__
__causality_tracking__
__resource_saving__
__parallel_processing_systems__,
__memory_contention__,
__average_waiting_times__
__network_bandwidth__)
__register-constrained__
__effectively_utilized__.
__highly_imbalanced__.
__redundant_computation__,
__efficient_hardware_implementation__
__input_queuing__
on-__chip_area__
__cache_access_latency__.
__performance_and_code_size__.
__branch_misprediction_penalty__
__variable_sizes__
__loop-carried_dependences__.
__disk_I/Os__.
__flash_drives__
__transaction_restarts__.
__active_threads__.
__unexpected_delays__
__added_bonus__
__local_store__,
__multi-processor_scheduling__
__Tree_exploration__
__false_conflicts__
__private_L2_cache__
__bank_conflicts__.
__runtime_scheduling__
__zero_overhead__
__Thumb_code__
__long_latency_instructions__
__packet_throughput__.
__tape_storage__.
__fitness_evaluations__,
__chip_pins__
__small_write__
__memory_requests__.
__modest_overhead__.
__two_thirds__
__self-interference__,
__dynamically_scheduled_processor__
__network_adapters__,
__block_buffering__
__internal_buffers__.
__registration_process__,
__energy_expended__
__distributed_sparing__
__voltage/frequency_levels__
__instruction_encoding__.
__single-thread_performance__,
__memory_pressure__,
__switch_port__
__memory_capacities__
__thread_parallelism__
__microarchitectural_simulation__
__remote_memory_access_latency__
__direct-mapped_instruction__
__DVS_algorithm__,
__shared_heap__
__machine_availability__.
__heat_dissipation__,
__data_center_networks__
__diagnostic_tasks__
__playback_delay__.
__working_set_sizes__
__coherence_directory__
__mental_map__.
__management_strategy__,
__memory_device__.
__incurs_overhead__
__operating_speed__,
__replication_schemes__,
__low_communication_cost__,
__loop_cache__
__LRU_replacement__,
__a_level__-by-level
__conventional_caches__.
__Multimedia_streaming_applications__
__read_misses__.
__Relevant_features__
__dynamic_adaptability__,
__branch-predictor__
__tertiary_memory__
__Declustering_techniques__
__multiprogrammed_environment__.
__trace_cache__,
__reconfigurable_processing_unit__
__branch_instruction__,
__RAID5_disk_arrays__
__mean-time-to-failure__
__large_sizes__,
__file_cache__.
__end-to-end_QoS__,
__Dynamic_Voltage_Frequency_Scaling__
__loop_scheduling__,
__real-world_workloads__
__dynamic_energy__.
__group_level__,
__fault_masking__,
__memory_allocations__,
__cache_partitioning__,
__message_buffering__
__meter-reading__
__main_memory_compression__
__load_instructions__.
__long_latency_operations__
__efficient_resource_utilization__.
__face_traversal__
__limited_memory_resources__
__instruction-fetch_bandwidth__
__table_scans__
__Data_migration__
__improved_scalability__.
__active_flows__.
__aperiodic_tasks__,
__comparatively_small__.
__write_accesses__
__loop_overhead__.
__interleaved_memories__
__consecutive_executions__
__maximum_utilization__
__Aggressive_prefetching__
__bandwidth_contention__
__visible_artifacts__.
__diffracting_trees__
__data_access_locality__
__forecast_uncertainty__
__IO_subsystem__
__IPv4_addresses__
__cache_thrashing__.
__power_overhead__,
__idle_processors__.
__reliability_considerations__
__fault_detection_latency__
__cache_locality__,
__silicon_devices__
__communication_volume__.
__failed_disks__.
__read_performance__,
__prefetching_techniques__,
__cache-miss__
__and_vice_versa__)
__equivalent_gates__
__bus_utilization__,
__highly_scalable__:
__pre-fetching__,
__older_generation__
__improve_throughput__.
__underutilized_resources__
__procedure_cloning__
__cache_line__,
__basic_block__,
__file_cache__,
__bus_traffic__,
__space_savings__.
__Pre-execution__
__garbage_collection_overhead__,
__branch-prediction__
__eventual_consistency__,
__low_contention__,
__cache_capacity__,
__total_size__,
__torus_network__,
__source_operands__.
__gate_count__.
__cache_configurations__,
__issue_width__.
__floating_point_operations__,
__DRAM_memory__.
__transistor_budget__
__live_ranges__.
__data_access_locality__,
__switching_elements__,
__link_speeds__,
__disk_utilization__,
__deterministic_replay__.
__low_overheads__,
__disk_replacement__
__defect_rates__,
__predictive_prefetching__
__private_L2__
__CPU_capacity__.
__instruction_caching__
__issue_arises__
__superscalar_core__
__instructions_executed__,
__communication_distance__.
__user-perceived_performance__.
__greater_emphasis__
__head_positioning__
__compiled_simulators__
__startup_costs__
__modest_cost__
__active_disks__
__secondary_storage_devices__,
__20_percent__.
__power_limits__
__iteration_period__.
__floating-point_performance__.
__instruction_issue__,
__Amdahl's_law__.
__small_form_factor__,
__battery_consumption__.
__network_contention__,
__grows_logarithmically__
__prefetch_distance__
__communication_times__,
__structural_hazards__
__heap_sizes__
__turn-around_time__,
__parallel_distributed_memory_computers__
__dead_lines__
__duty_cycles__,
__reliability_characteristics__.
__opportunity_exists__
__cross-ISP_traffic__
__paging_costs__
__user's_cognitive_load__
__complete_fault_coverage__.
__reconfiguration_times__,
__well_balanced__,
__384_kbps__
__cache_configuration__,
__purchase_cost__.
__cooling_power__
__average_waiting_times__.
__event_queues__,
__calibration_effort__.
__detection_latency__.
__lower_power__,
__memory_fragmentation__.
__banked_register_file__
__data_buses__,
__file_allocation__,
__latency-hiding__
__data_prefetcher__
__control_path__.
__bus_bandwidth__,
__aperiodic_servers__
__instruction_packing__
__capacity_requirements__,
__higher_utilization__,
__spatial_and_temporal_locality__,
__design_parameters__:
__write_ports__
__cache_space__,
__throughput_requirements__,
__hit_ratios__,
__multi-level_cache_hierarchies__
__configuration_prefetching__
__reordering_mechanism__
__achieves_speedups__
__transfer_rates__,
__garbage_collections__,
__Spatial_locality__
__L-CBF__
__decoupled_architectures__
__capacity_requirements__.
__instruction_window_size__.
__working-sets__
__cache_line_size__,
__floating_point_operation__
__cache_conflict_misses__
__compiler-optimized__
__scan_enable_signal__
__directory_size__
__increases_slightly__
__tens_of_minutes__.
__re-ordering__,
__administrative_overhead__.
__virtually-addressed__
__preempting_task__
__replica_consistency__,
__bus_arbiter__.
__average_case_performance__.
__energy_dissipated__
__wider_issue__
__bank_conflicts__,
__miss_latencies__
__administration_costs__.
__issue_logic__.
__CPU_energy__
__clustered_microarchitectures__
__cost_performance__.
__low-power_operating_modes__.
__bypass_network__.
__processor_throughput__.
__bus_wrapper__
__1,000_times__
__CPU_usage__,
__memory_requests__,
__recovery_overhead__
__power_wall__
__persistent_connections__,
__execution_cycles__,
__extra_memory__.
__CPU_and_memory__.
__tight_resource_constraints__.
__routing_overheads__.
__heap_size__,
__clock_ticks__
__reduced_power__,
__lookup_efficiency__.
__page_table__.
__wasted_space__.
__internal_fragmentation__.
__average_latency__,
__small_caches__.
__dynamically_scheduled_processors__
__reconfiguration_overheads__
__access_efficiency__,
__sector_caches__
__network_interface_cards__.
__memory_buffers__.
__carbon_footprint__.
__download_times__,
__routing_table_sizes__
__idle_intervals__,
__Benefits_include__
__compiler-generated_code__
__accessed_frequently__
__energy_gains__.
__On-chip_caches__
__variable_latencies__
__Mbits/sec__.
__start-up_costs__
__disk_energy__.
__software_maintenance_costs__
__runtime_penalty__.
__total_wire_length__,
__latency_constrained__
__screen_resolution__,
__buffered_crossbars__
__bandwidth_bottleneck__,
__technology_trends__,
__transaction_aborts__.
__investment_cost__.
__transition_overhead__
__file_I/O__.
__processor_memory__
__instruction_mix__,
__video-on-demand_systems__,
__replica_locations__
__array_size__,
__storage_capability__,
__storage_hierarchy__,
__electrical_signaling__
__continuous_availability__.
__delay_propagation__
__synchronization_delay__.
__issue_superscalar_processor__
__reducing_overheads__
__tape_drives__.
__wire-length__.
__small_writes__,
__download_delay__
__detection_latency__,
__achieving_high_performance__,
__faster_machines__.
__processor_heterogeneity__,
__task_priorities__,
__deep_pipelining__
__sys_tem__
__many-core_architectures__,
__Program_compression__
__instruction_counts__.
__commit_phase__
__run_ahead__
__heavy_workloads__.
__FPGA_slices__
__route_calculation__
__homogeneous_clusters__,
__packet_transmission_delay__.
__tag_arrays__.
65__&percnt__;
/__spl_mu__/s
__partial_products__.
__class_level__,
__acceptance_rate__,
__performance_advantages__,
__file_access_patterns__,
__increased_throughput__.
__channel_conflict__
__cost_and_communication_cost__.
__route_stability__.
__pipeline_hazards__
__system's_total__
__interconnection_length__,
__chip-area__
__low_energy__.
__desirable_tradeoff__
__battery_lifetimes__.
__cache_contention__.
__physical_register_file__
__acceptance_ratio__,
__multiple_multicasts__
__intermediate_computations__.
__statistical_power__,
__multiple_read/write_streams__
__link_traffic__.
__memory_access_locality__.
__multiplications_and_additions__.
__round_trip_latency__
__long_memory_latencies__.
__page_granularity__.
__truncation_error__.
__raw_performance__,
__messaging_overhead__,
__floating_point_performance__
__load-balancing_techniques__
__write_policy__
split-__bus_architecture__
__Minimizing_communication__
__improving_locality__
__bus_contention__,
__reduction_potential__
__cache-coherent_multiprocessors__.
__commercial_server_workloads__.
__direct_mapped_instruction__
__query_execution_plans__,
__context-switches__
__low_power_mode__
__dependent_tasks__,
__Accurately_measuring__
__voltage/frequency_scaling__,
__checkpointing_overhead__
__negligible_performance_impact__
__utilization_efficiency__,
__buffer_utilization__,
__fewer_resources__,
__Mach_3.0__,
__performance_and_energy-efficiency__.
__energy_reserves__,
__concurrent_sessions__
__space_savings__,
__resource_fragmentation__.
__event_scheduling__.
__megabytes_per_second__.
__power_considerations__.
solution-__adaptive_finite_element__
__regular_codes__
__L2_miss__
__blade_servers__.
__fault_resolution__
__automatically_managed__
__packet_processing_systems__
__network_decomposition__
__increasing_concurrency__
__wait-freedom__.
__Mean_Time_to_Failure__
__Design_trade-offs__
__block_accesses__,
__considerable_overhead__.
__victim_caches__,
__optical_multistage_interconnection_networks__
__accrued_utility__
__simple_cores__.
__power-efficiency__,
__pipelined_computers__.
__synchronous_writes__
__dependence_violations__
__gate_equivalents__
__future_CMPs__
__trace_reuse__
__resource_fragmentation__
__capital_expenditure__,
__workload_migration__
__purchase_cost__
__cost/performance__.
34__&percnt__;
__limited_storage_capacity__,
__production_yield__,
__memory_unit__,
__state_elements__,
__size_limitation__
47__&percnt__;
__process_arrival_pattern__
__cluster_utilization__.
__accuracy_requirements__,
__pipelined_cache__
__wiring_overhead__
__custom_instructions__,
__hybrid_parallelism__
__register_file_size__.
__Under_certain_circumstances__
__data-dependencies__
__contiguous_allocation_strategies__
__sizes_grow__,
__considerable_energy_savings__.
__hardware_assistance__
__idle_intervals__.
__disk_controllers__
__8-bit_microcontrollers__
__power_trade-offs__
__reconfiguration_times__
__SPECint2000_benchmarks__,
__post-compilation__
__hyperblock_formation__
__lower_energy_consumption__,
__energy_terms__,
__cache_interference__,
__superscalar_execution__
__high_compatibility__
__memory_locality__,
__safe_regions__
__guaranteed_quality_of_service__.
__radio-triggered__
__cache_indexing__
__Reducing_energy__
__server_redundancy__
__reducing_energy_consumption__,
__main_memory__)
__Thread_migration__
__code_cache__.
__live-range_splitting__.
four-__way_set-associative_cache__
__resource_utilization__)
__execution_overhead__,
__concurrently_executing_transactions__
__transistor_count__.
__checkpoint_recovery__
__acceptable_response_times__
__Software_controlled__
__memory_bandwidth_requirement__
__object_replacement__
__IPC_loss__,
__average_wire_length__
__static_power__,
__reconfiguration_times__.
__smart_recompilation__
__bandwidth_demands__,
__direct-mapped_cache__.
__Runahead_execution__
__idle_disks__
__gate_level_simulation__
__coherence_traffic__,
__instruction_delivery__
__processing_overheads__,
__large_instruction_windows__.
auto-__increment/decrement__
__compute_intensive_applications__.
__inherently_serial__
__trace_file__.
__disk_performance__,
__per_clock_cycle__)
__cpu_time__
__error_floors__.
__data_retention__,
__life-cycle_costs__.
__DSM_multiprocessors__.
__write_buffers__
__feedback_information__,
__performance_criteria__:
__larger_caches__,
__Increased_performance__
__OLTP_workloads__
__area_and_wire_length__
__data_cache_misses__,
__message_overheads__.
__instruction_fetch_energy__
__DMA_engine__.
__code_portability__,
__increasing_dimensionality__,
__state_saving__,
__superscalar_microarchitecture__
__cycle_accuracy__,
__referencing_behaviour__
(__memory_accesses__,
__routing_area__,
__functional_unit_binding__.
__low_encoding_complexity__
__write_port__
__memory_space_requirements__,
__remote_invocations__.
__proxy_cache__,
__hit_or_miss__.
__computational_overheads__.
__performance_gain__,
__word_width__
__response_latency__.
__page-table__
__zero-downtime__
__fine-grained_localization__
__link_contention__.
__delay_cost__,
__harmonic_periods__
__expected_path_length__
__buffer_hit_probability__.
__random_writes__.
__extra_bandwidth__.
__costs_incurred__
__double-counting__
__local_stores__,
__fairly_accurately__.
__register_access__
__pipelined_functional_units__
__bottle_neck__
__completely_lost__
__avoiding_useless__
__whole-program_analysis__,
__schedule_overruns__.
__SPEC_CPU2006_benchmarks__
__distance_traveled__,
__index_files__.
__instruction-cache_misses__
__application_dependent__,
__Web_workloads__,
__supercomputing_center__
MS-__I/O__
__Set-associative_caches__
__buffer_sizing__,
__frequency_and_supply_voltage__
__job_splitting__
__instruction_cache_performance__.
__CPU_time__).
__runtime_compilation__
49__&percnt__;
__increased_throughput__,
__assembly_and_disassembly__
__access_delays__.
__temporal_and_spatial_localities__
__DRAM_bandwidth__.
__short-lived__.
__extra_circuitry__.
__low_energy__,
__small_messages__,
__array_processors__,
__negative_interactions__
__sustained_performance__.
__forward_steps__.
__synchronization_requirements__,
__SIMD_units__
__locality_characteristics__
__full_adders__,
__power_penalty__.
__compilation_speed__.
__Cost_considerations__
__unacceptable_overhead__
__large_meshes__,
(__maximum_flow__
__Secondary_storage__
__inter-processor_communication_overhead__
__large_file_transfers__
__game_state__.
__external_sorting__.
__significant_overhead__,
__storage_area__.
__L1_caches__.
__denormalized_numbers__
__bare_minimum__.
__dependency_preservation__.
__bus_connections__.
__Poor_performance__
__area_and_power__,
__I/O_ports__,
__morbidity_and_mortality__
__Sleep_mode__
__Gigabits_per_second__.
__finger_table__.
__process_capability__,
__certification_requirements__
__systolic_communication__
__conservative_mode__
__Iterative_compilation__
__encoder_complexity__
__maximum_attainable__
__management_overhead__,
__default_parameters__,
__cache_parameters__,
__startup_delays__
__runahead_execution__,
__Analytical_model__
__miss_latencies__.
__synchronization_algorithms__,
__memory_level_parallelism__
__instruction_prefetching__,
__idle_machines__
__popular_movies__
__register_spills__,
__net_delay__,
__nice_properties__:
__balanced_routing__
__machine_utilization__.
__Computational_requirements__
__distance_calculations__,
__limiting_factor__,
__significant_speedup__,
__simulation_fidelity__
__unacceptable_overhead__.
__memory_locality__.
__task_allocation_strategy__.
__64_KB__
__cache_related_preemption_delay__
__looking_ahead__.
__set_associative_cache__
__storage_cells__.
__overlapping_communication_with_computation__.
__join_selectivities__.
__wrong_path__
__cache_capacity__.
__autonomous_operation__
__fabrication_cost__.
__larger_caches__.
__disk_space_utilization__
__memory_fences__
__extra_circuitry__
__MBytes/sec__
__distributed_hard_real-time_systems__
__instruction_prefetching__.
__consume_considerable__
__history_table__
__peer_population__.
__wiring_overhead__.
__energy_optimizations__
__reliable_operation__,
__large_matrices__,
__runtime_checks__,
__cache_hit_ratios__.
__victim_caches__
__low_hardware_complexity__.
__algorithmic_efficiency__,
__deployment_scenario__,
__clustered_architectures__.
__reduces_energy_consumption__.
__user-perceived_latency__,
__disk_throughput__,
__working_frequency__,
__SPECint_benchmarks__
__node's_energy__
__cache_and_TLB_misses__.
__subsequent_requests__.
__break-even_point__
__parameter_variation__,
__hard-to-predict_branches__,
__caching_policies__,
__page_caching__
__multiple_branch_prediction__
__minutes_or_hours__
__Look-up_Tables__
__memory_access_conflicts__.
__multiported_register_files__
__customer_service_levels__
__video_processing_applications__,
__reduction_schemes__.
__distributed_shared_memory_machines__
__precise_exceptions__.
__static_routing__,
__average_power_consumption__,
__total_latency__.
__write_operations__,
__memory-intensive_applications__,
__pro_vides__
__slow_convergence_speed__.
__instruction_wakeup__
__increasing_reliability__.
__coherence_overhead__.
__dual-Vt_design__
__cache_write__
__machine_utilization__,
__primary_concern__,
__CPU_consumption__.
__clock_periods__,
__register_file_organization__,
__instruction_fetch__.
__low-power_operation__,
non-__fault-tolerant__
__byte_hit_ratio__
__high_contention__,
__high_traffic__.
__non-uniform_traffic_patterns__
__perceived_latency__,
__logic_level__.
__extremely_effective__,
__access_cost__.
__fast_Ethernet__.
__cache_conflict_misses__,
__active_buffering__
__fault_rate__.
__feature_interaction__,
__skewed_associative__
__mirrored_disks__
__parallel_iterative_algorithms__
__header_size__
__improving_quality__.
__critical_path_delays__,
__cache_pollution__,
__left_unchanged__,
__checkpoint_latency__
__data_parallel_applications__.
__wait_times__,
__dynamic_web_pages__,
__contiguous_allocation__
__Disk_scheduling__
__average_power__,
__miss_latency__
__arbitrary_permutations__.
__high-end_processors__.
92__&percnt__;
__alternative_designs__,
__hard_errors__.
__memory_address__.
__external_memory_accesses__.
__write/read__
__instruction_queues__,
__access_path__,
__bus_usage__
__data_cache__)
__placement_strategies__,
__idle_cycles__.
__PARSEC_benchmarks__
__symbolic_state_space__
__quality_tradeoffs__
__bus_widths__,
__network-management__
__today's_microprocessors__
__page_migration/replication__
__queueing_effects__
__test_times__,
__Multi-context_FPGAs__
__problem-dependent__.
__decoding_delay__,
__multi-level_memory_hierarchies__
__false_negatives_and_false_positives__
__increasing_dimensionality__
__light_load__.
__environmental_damage__
__massively_parallel_architectures__,
__Redundancy_techniques__
__limited_space__,
__redundant_messages__,
__delay_penalty__,
__grow_exponentially__,
__Web_caching__,
__minimizing_power_consumption__.
__speculative_update__
__branch_target_buffers__.
high-__speed_channel__
__DSP_programs__.
__stream_descriptors__
__array_padding__
__long_instruction__
__chip_pins__.
__external_storage__.
__hit_latency__
__dependence_speculation__.
__dependence_predictor__
__processing_efficiency__,
__deferrable_servers__
__height_reduction__
__Branch_mispredictions__
__disk_writes__.
__startup_latency__,
__transmission_speed__,
__erase_operations__.
__register_banks__,
__reliability_and_fault_tolerance__.
non-__numerical_applications__.
