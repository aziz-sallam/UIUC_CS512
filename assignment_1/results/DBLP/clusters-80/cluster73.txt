__source_code__
__operating_system__
__off-the-shelf__
__operating_systems__
__programming_language__
__file_system__
__open_source__
__paper_describes__
__&mdash__;
__virtual_machine__
__an_extensible__
__programming_model__
__database_system__
__operating_system__.
__operating_systems__.
__programming_language__.
__parallel_programming__
__stand-alone__
__an_open_source__
__programming_environment__
__open-source__
__object-oriented_programming__
__web_application__
__software_package__
__development_environment__
__web_server__
__software_packages__
__an_open-source__
__self-contained__
__simulation_environment__
__freely_available__
__software_tool__
__DB2__
__operating_system__,
__programming_language__,
__graphical_user_interface__
__Java-based__
__tool_called__
__mobile_code__
__Perl__
__database_management_system__
__user_interface__,
__C#__
__application_software__
__Linda__
__newly_developed__
__IDE__
__Java_applications__
__concurrent_programming__
__server-side__
__existing_applications__
__simulation_software__
__file_system__.
__database_system__.
__cross-platform__
__parallel_programming__.
__programming_paradigm__
__simulation_tool__
__simulation_framework__
__Mathematica__
__visualization_tool__
__programming_environments__
__development_environment__.
__specially_designed__
__programming_environment__.
__lines_of_code__
__Windows_NT__
__device_drivers__
__execution_environment__
__programming_techniques__
__platform-independent__
__Simulink__
__Java_code__
__Java_applications__.
__briefly_described__.
__commercial_software__
__network_protocols__.
__specifically_designed__
__legacy_code__
__language_extensions__
__scripting_language__
__Windows_XP__
__AJAX__
__design_tool__
__high-level_language__
__assembly_language__
__Standard_ML__
__Ajax__
__computing_platform__
__Linux_kernel__
__plug-ins__
__programming_style__
__fully_implemented__
__data_format__
__Ada_95__
__discrete-event_simulation__
__plugged_into__
__execution_environment__.
__platform_independent__
__runtime_environment__
__design_environment__
__programming_model__.
__Fortran_90__
__software_implementation__
__XML_processing__
__application_programmers__
__data_structures_and_algorithms__
__software_platform__
__designed_specifically__
__device_driver__
__PRISM__
__Visual_Basic__
__simulation_platform__
__Mach__
__file_system__,
__object-oriented__,
__Java_RMI__
__multi-language__
__advanced_features__
__Java_Virtual_Machine__
__written_in_Java__
__Mac_OS_X__
__Microsoft_Windows__
__OASIS__
__Condor__
__industrial-strength__
__2006_John_Wiley_&_Sons__,
__programming_paradigms__
__software_environment__
__High_Performance_Fortran__
__Java_classes__
__full-fledged__
__test_suite__.
__software_packages__.
__software_tools__,
__code_generator__
__Common_Lisp__
__software_framework__
__programming_tools__
__virtual_machine__.
__industry_standard__
__web_server__.
__simulation_program__
__programming_interface__
__An_overview__
__fully_functional__
__software_package__.
__data_management_system__
__programming_model__,
__programming_environment__,
__software_programs__
__front_end__
__application_software__.
__main_purpose__
__database_system__,
__programming_environments__.
__front-ends__
__object-oriented_language__
__platform-specific__
__simulation_model__,
__graphical_interface__
__main_features__
__PL/I__
__originally_designed__
__originally_developed__
__development_tools__.
__desktop_applications__.
__computational_chemistry__
__industry-standard__
__scripting_languages__
__file_format__
__Tcl__
__development_tool__
__web_application__.
__simulation_engine__
__ANSI_C__
__virtual_machine__,
__application_programming_interface__
__database_management_system__.
__simulation_environment__,
__interactive_graphics__
__C#__.
__protection_mechanism__
__additional_functionality__
__Microsoft_SQL_Server__
__Modula-2__
__application_framework__
__device_drivers__.
__Globus_Toolkit__
__execution_engine__
__visualization_tool__.
__Estelle__
__written_in_Java__.
__Object-oriented_programming__
__machine_language__
__simulation_package__
__distributed_file_system__
__component_technology__
__tool_set__
__closely_resembles__
__test_environment__
__Lustre__
__database_application__
__Linux-based__
__code_base__
__software_tool__,
__Java_application__
__Enterprise_JavaBeans__
__SAGA__
__distributed_programming__
__dynamic_instrumentation__
__C_compiler__
__Smalltalk-80__
__SQL/XML__
__software_libraries__
__application_programming_interfaces__
__Fortran_77__
__special_features__
__dynamic_linking__
__fully_developed__
__design_philosophy__
__Windows_2000__
__object-oriented_programming_languages__
__Java_virtual_machine__
__programming_paradigm__.
__game_engine__
__simulation_language__
__GUI-based__
(__IDE__)
__Aspect_Oriented_Programming__
__tool_suite__
__class_library__
__self-contained__,
__Implementation_issues__
__Java_language__
__hardware_description_languages__
__scripting_language__.
__an_extensible__,
__second-generation__
__Windows_NT__.
__scene_graph__
__easily_extensible__
__class_libraries__
__software_library__
__Microsoft_Office__
__development_environment__,
__execution_environment__,
__existing_tools__,
__abstraction_layer__
__the_definitive_guide__:
__optimizing_compiler__
__device_drivers__,
__software_stack__
__software_module__
__runtime_support__
__tightly_integrated__
__simulation_code__
__software_support__
__Application_Programming_Interface__
__prototype_implementation__,
__operating_system_kernel__
__basic_functions__
__OMNeT++__
__simulation_platform__.
__pocket_reference__:
__software_development_environment__
__Java_based__
__Windows-based__
__assembly_language__.
__personal_computer__.
__Java_applets__
__Java_source_code__
__reference_implementation__
__Jade__
__An_open_source__
__development_platform__
__testing_framework__
__software_packages__,
__packet_filter__
__Prism__
__software_package__,
__Software_Transactional_Memory__
__research_prototype__
__evaluation_tool__
__Visual_Studio__
__direct_access__
__Ada_2005__
__MIDAS__
__OGSA-DAI__
__language_extension__
__machine_translation_system__
__ISIS__
__Pocket_PC__
__visualization_software__
__Ada_9X__
__written_in_Java__,
__persistent_objects__
__MUSE__
__writing_programs__
__Microsoft_Excel__
__Figure_1__
__command-line__
__runtime_environment__.
__Xen__.
__server_architecture__
__back_end__
__Perl__,
__Remote_Procedure_Call__
__real-time_operating_system__
__plug-ins__.
__dynamically_generates__
__Handel-C__
__control_program__
__dynamically_loaded__
__user-space__
__parallel_programming__,
__Fortran_programs__
__Java_Virtual_Machine__.
__code_generator__.
__COBRA__
__command_language__
__automatically_translates__
__GPSS/H__
__Java_programmers__
__communication_interface__
__highly_modular__
__SQL-based__
__Fortran_90__.
__VM/370__
__automatically_transforms__
__web_browsers__,
__web_server__,
__Remote_Method_Invocation__
__relational_DBMS__
__remote_procedure_call__
__communication_software__
__run-time_environment__
__mathematical_software__
__Java_implementation__
__fully_operational__
__software_development_environment__.
__protocol_implementation__
__Java_technology__
__Sun_Microsystems__
__Virtual_machine__
__communication_facilities__
__computation_model__.
__Message_passing__
__dynamic_loading__
__simulation_tool__,
__Common_Lisp__.
__experimental_platform__
__software_application__.
__communication_middleware__
__IDE__.
__production-quality__
__Experience_report__:
__platform_independence__
__ANSI-C__
__Web_server__.
__ready-made__
__open_source__,
__tool_named__
__Scalable_Vector_Graphics__
__user-configurable__
__list_processing__
__Cedar__
__VISTA__
__C#__,
__parallel_programming_model__
__object-oriented_development__
__JBoss__
__application_software__,
__execution_model__,
__library_routines__
__highly_portable__
__an_open_source__,
__data_base_management__
__Matlab/Simulink__
__IBM_DB2__
__procedural_languages__
__VHDL_code__
__client_application__
__general_purpose__,
__Verilog_HDL__
__application_framework__.
__object-oriented_applications__
__data_formats__.
__lets_developers__
__generation_tool__
__Fortran_95__
__integrated_development_environment__
__an_open-source__,
__command_line__
__Java_5.0__
__network_programming__
__text_editor__
__Windows_Mobile__
__content_management_system__
__Opal__
__natural_language_interface__
__relational_database_system__
__real-time_image_processing__
__pre-built__
__verification_environment__
__front-end__,
__Commercial-Off-The-Shelf__
__micro-kernel__
__a_desktop_quick_reference__:
__parallelizing_compiler__
__an_object-oriented__,
__tool_suite__.
__network_simulators__.
__execution_platform__
__An_open-source__
__plug-ins__,
__vendor-specific__
__JESS__
__client_programs__
__Web_proxy__
__GNU/Linux__
__Web_browser__.
__XML_parsing__
__Jess__
__visualization_tool__,
__web-based__,
__multithreaded_programming__
__Programming_language__
__parallel_programming_environment__
__Muse__
__CORAL__
__problem_solving_environment__
__media_player__
__supporting_infrastructure__
__type_qualifiers__
__version_1.0__
__Java_implementations__
__reference_monitor__
__modeling_environment__.
__MPEG-4__,
__fully_implemented__,
__virtual_machine_monitor__
__Perl__.
__open-source__,
__code_bases__
__prototype_demonstrates__
__Charm++__
__Java_libraries__
__pre-processor__
__DACS__
__IEEE_standard__
__embedded_operating_system__
__specific_implementations__
__initial_prototype__
__Java_API__
__relational_database_management_system__
__version_2.0__
__Microsoft_Windows__.
__Microsoft_Excel__.
__client_software__
__recently_released__
__freely_available__.
__network_simulator__,
__Concurrent_Pascal__
__concurrent_applications__.
__script-based__
__high_level_language__
__briefly_introduced__.
__desktop_application__
__menu-driven__
__object-oriented_language__.
__data_dictionary__
__Internet_Explorer__
__design_environment__,
__compiler_infrastructure__
__program_analysis_tools__
__originally_intended__
__dynamically_linked__
__Sun_Microsystems__'
__programming_interface__,
__standard_software__
__Object_Request_Broker__
__distributed_operating_system__.
__Basic_Linear_Algebra_Subprograms__
__simulation_program__.
__data_base_management_systems__
__text_editing__
__real-time_Java__
__off_the_shelf__
__public-domain__
__implementation_techniques__,
__program_documentation__
__highly_flexible__,
__Java_software__
__storage_manager__
__Java-enabled__
__Ode__
__design_tool__,
__Mac_OS_X__.
__PL/I__.
__Emerald__
__back-end__.
__Mathematica__,
__Java_applications__,
__automatically_converts__
__class_libraries__.
__visualization_framework__
__MS_Windows__
__programming_interfaces__
__Cyclops__
__application_programmers__.
__Java™__
__programming_interface__.
__IEC_61131-3__
__thread-safe__
__mail_server__
__platform-independent__,
__C_compiler__.
__machine_independent__
__simulation_package__.
__distributed_operating_system__
__software_libraries__.
__MS-DOS__
__parallel_language__
__persistent_object__
__Java_compiler__
__simulation_languages__
__object-oriented_programming_language__
__web-based_application__
__kernel_module__
__integrated_environment__
__full-featured__
__software_environment__.
__DB2__,
__graphical_user_interface__,
__dynamic_languages__
__Common_Object_Request_Broker_Architecture__
__Smalltalk-80__.
__JADE__,
__Modula-3__
__prototypically_implemented__
__VAX/VMS__
__data_base_management_system__
__XML_applications__
__rapid_application_development__
__open_standard__
__proof_of_concept__.
__database_interface__
__OS_X__
__access_control_list__
__scripting_language__,
__data_structures__:
__Visual_Basic__.
__programming_techniques__,
__scripting_languages__.
__Coral__
__development_tool__.
__UNIX_systems__
__application_server__.
__CD++__
__parallel_programming_language__
__copy-and-paste__
__graphics_rendering__
__PC_based__
__procedural_and_object-oriented__
__relational_database_system__.
__performance_analysis_tools__
__communications_protocol__
.__NET_framework__.
__Enterprise_Edition__
__off-the-shelf__,
__distributed_transaction_processing__
__development_platform__.
__Implementation_details__
__Erlang/OTP__
__natural_language_interface__.
__runtime_environment__,
__secure_applications__
__Web-based__,
__workflow_engine__.
__Java_application__.
__software_development_environment__,
__data_format__.
__application_program__.
__compiler_framework__
__FORTRAN_77__
__MARS__,
__SLAM_II__
__platform_independent__.
__CORBA_middleware__
__highly_usable__
__file_format__.
__development_platforms__
__script_language__
__prototypical_implementation__
__simulation_software__,
__Unified_Parallel_C__
__programming_support__
__model-checker__
__main_functions__
__core_architecture__
__transaction_manager__
__runtime_systems__.
__assembly_language__,
__platform_independent__,
__Java_class__
__open_source_project__
__device_driver__.
__WebSphere®__
__Xen__,
__extension_mechanism__
__shared_libraries__
__numerical_software__
__Tcl/Tk__
__Mozilla_Firefox__
__configuration_files__.
__Rational_Rose__
__Objective_Caml__
__reference_implementation__.
__Program_analysis__
__information_retrieval_system__,
__programming_abstraction__
__open_source_code__
__profiling_tools__
__FORTRAN_IV__
__compiler_implementation__
__Java_2_Micro_Edition__
__XML_technologies__.
__file_format__,
__CAMS__
__message-oriented_middleware__
__web_browser__,
.__NET_Framework__
__Integrated_Development_Environment__
__assembly_code__,
__extension_points__
__production-level__
__Linux_OS__
__Windows_CE__
__virtualization_techniques__
__Java_applets__.
__language_processors__
__closed-source__
__query_optimizer__.
__intermediate_form__
__object_databases__
__Verilog__,
__partially_implemented__
__dynamic_code_generation__
__database_management_system__,
__relational_database_management_systems__.
__debugging_tool__
__graphic_user_interface__
__Java_applet__
__an_object-oriented_approach__.
__class_loader__
__hardware_description_language__.
__high-level_programming_languages__
__functional_simulator__
__expert_system_shell__
__programming_tools__.
__software_suite__
__relational_database_management_system__.
__parser_generator__
__mainframe_computer__
__Java_environment__
__Scientific_computing__
__XSL-FO__
__APL_programs__
.__NET_Remoting__
__Macromedia_Flash__
__library_components__
__scheduling_tool__
__Lustre__,
__personal_computer__,
__standard_Java__
__hand_written__
__OASIS__,
__language_translation__
__graphical_output__
__originally_written__
__CORBA_components__
__implementation_language__
__software_environment__,
__Web_application__,
__Windows_XP__.
__OpenGL_ES__
__J-Sim__
__Pegasus__
__modern_programming_languages__
__programming_systems__.
__Proteus__
__Intel_x86__
__user-written__
__shrink-wrapped__
__compound_document__
__stored_procedures__
__Oracle_database__
__network_administration__
__intermediate_languages__
__Zebra__
__template_library__
__graphical_editor__
__three-tiered__
__language_extensions__,
__DNA_sequence_analysis__
__virtual_machine_technology__
__Access_Grid__
__Java_components__
__computational_algebra__
__Pascal_programs__
__C-XSC__
__simulation_language__.
__Unix-based__
__virtual_storage__
__Systems_Network_Architecture__
__internally_developed__
__execution_engine__.
__IDE__,
__common_coupling__
__graphical_interface__.
__dynamically_extensible__
__freely_available__,
__unmodified_applications__
__robot_platform__.
__Application_Programming_Interfaces__
__graphical_applications__
__Java_program__.
__Proof-Carrying_Code__
__Web_server__,
__parallel_programming_languages__.
__extremely_flexible__
__logic_emulation__
__stream-processing__
__kernel-mode__
__commercial_software__,
__interactive_programs__
__stored-program__
__pocket_guide__:
__Visual_Basic__,
__object-oriented_simulation__
__code_generator__,
__programming_framework__
__external_tools__
__application_suite__
__software_engineering_environment__
__email_client__
__Java_Servlets__
__debugging_environment__
__Proteus__,
__Futurebus+__
__entry_point__
.__NET_platform__.
__standard_language__
__graphical_tool__
__experiences_developing__
__configuration_file__
__Java_virtual_machine__.
__OS/360__
__DB2_UDB__
(__Message_Passing_Interface__)
__Java_Swing__
__Application_programs__
__visualization_environment__.
__compiler_generation__
__Java_2_Enterprise_Edition__
__compiler_infrastructure__.
__home-grown__
__Common_Lisp__,
__query_engines__.
__graphics_package__
__query_processor__.
__taint_analysis__
__Concurrent_Pascal__.
__database_engine__
__command_language__.
__Symbian_OS__
__single_system_image__
__R-OSGi__
__demonstration_illustrates__
__Globus_Toolkit_4__
__compilation_techniques__.
__data_store__.
__Windows_NT__,
__rapidly_prototyping__
__prototyping_platform__
__C_compiler__,
__graphics_library__
__optimizing_compiler__,
__HP-UX__
__interprocess_communications__
__parallelizing_compiler__.
__Open_MPI__
__object_store__
__proof-carrying_code__
__thread_library__
__distributed_computers__.
__Lustre__.
__Hydra__,
__SICStus_Prolog__
__front_end__,
__communication_interface__.
__game_engine__.
__user-selectable__
__clone_detection_tool__
__parser_generator__.
__standard_compliant__
__AspectC++__
__object-orientation__,
__multiple_platforms__.
__XML_parser__
__MATLAB/Simulink__
__functionally_identical__
__TCP_implementation__
__event_trace__
__Condor__,
__Java_programming__.
__runtime_library__.
__dynamic_web_pages__.
__storage_mechanism__
__IBM&reg__;
__standard_library__
__program_generator__
__network_emulator__
__freely-available__
__text_editors__
__commercial-grade__
__data_repository__,
__Tango__
__Java_library__
__Model-View-Controller__
__API_documentation__
__commercial_and_open-source__
__operating_systems__:
__microcomputer-based__
__XACML_policies__
__marker-passing__
__HTTP_protocol__
__POSIX_Threads__
__primary_goals__
__ALPHA/Sim__
__ns-3__
__prototyping_environment__
__operating_system_services__.
__Java_class_files__
__newly_released__
__lines_of_code__)
__free_software__.
__performance_monitor__
__machine_organization__
__socket-based__
__BPEL_engine__
__configuration_files__,
__test_platform__
__partitioned_global_address_space__
__moderate-sized__
__trace_file__
__structured_query_language__
__scripting_languages__,
__Visualization_Toolkit__
__Windows_XP__,
__advanced_features__,
__virtualization_layer__
__buffer_manager__
__TTP/C__
__filing_system__
__built_atop__
__million_lines_of_code__.
__File_system__
__Unreal_Tournament__
__byte-code__
__commercial_database__
__compiler_translates__
__W3C_standards__
__software_platform__,
__problem-solving_environment__
__dynamic_binary_instrumentation__
__closely_mimics__
__DB2_Universal_Database__
__numerical_software__.
__macro_language__
__multithreaded_Java__
__client-server_architecture__,
__fault-tolerant_distributed__
__communication_facility__
__Oracle_10g__
__large_clusters__.
.__NET_framework__
__rapid-prototyping__
__data_encapsulation__
__PDP-11__
__active_object__
__simulation_languages__.
__CORBA_object__
__Java_VM__
__software_application__,
__malware_analysis__.
__speech_recognition_and_synthesis__
__reference_material__
__PC_hardware__
__extension_language__
__programmer_writes__
__graphical_interface__,
__UNIX-based__
__protocol_specification__.
__VRML/X3D__
__Linux_operating_system__
__Integrated_Development_Environments__
(__Computer_Aided__
__PL/I__,
__implementation_language__.
__query_execution_engine__
__add-ins__
__World_Wide_Web_Consortium__
__GUI_applications__
__Objective_Caml__.
__embedded_controller__
__database-backed__
__network_stack__
__development_platform__,
__Java_technology__.
__public_domain_software__
__object-based__,
__Vienna_Fortran__
__programming_exercises__.
__Linux_2.4__
__web_application__,
__Artemis__
__European_project__.
__code_bases__.
__Java_byte_code__
__GUI_based__
__remote_method_invocation__.
__runtime_environments__.
__configuration_tool__
__ANSI_C__.
__Java_EE__
__subject-oriented__
__Java_language__,
__XML-RPC__
__reusable_modules__
__engineering_software__
__object_persistence__
__sequential_programming__
__parallel_programming_paradigms__
__platform_dependent__
__LAM/MPI__
__Apple_Macintosh__
__simulation_testbed__
__Dyalog_APL__
__prototyping_process__
__Reference_Manual__
__tool_kit__
__higher_level_abstractions__
__easily_extendable__
__graphics_interface__
__performance_profiling__
__Simulink__,
__component_technology__.
__execution_framework__
__Cobra__
__standard_libraries__
__Mac_OS_X__,
__National_Instruments__
__Windows_95__
__executable_content__
__Blue_Gene__
__Functional_Reactive_Programming__
__runtime_engine__
__open_platform__
__XQuery_engine__
__Place_Lab__
__purposely_designed__
__multi-platform__,
__long_term_goal__
__Adobe_Flash__
__Java_language__.
__multithreaded_programming__.
__molecular_visualization__
__Eclipse-based__
__unified_architecture__
__driver_support__
__object_database__
__FORTRAN_II__
__procedural_programming__.
__numerical_codes__.
__Java_applets__,
__programmatic_interface__
__user-friendly__.
__codesign_environment__
__cross-profiling__
__Java/CORBA__
__persistent_store__
__Linux_based__
__parallel_computational__
"__off-the-shelf__"
__model_generator__
__tool-set__
__JavaServer_Pages__
__objected-oriented__
__query_tool__
__fully_compliant__
__processor_simulator__
__Kahn_Process_Network__
__declarative_networking__
__object-oriented_programming_language__.
__Dynamic_slicing__
__MS-Windows__
__vendor-neutral__
__simulation_engine__,
__embedded_platform__.
__message_passing_library__
__cross-platform__,
__Palm_OS__
__statistical_package__
(__Common_Object_Request_Broker_Architecture__)
__Component_Object_Model__
__Tcl__.
(__JADE__)
__generic_libraries__
__numerical_libraries__
__assembly_languages__
__Linux_environment__
__Red_Hat__
__Condor-G__
__application_server__,
__networked_workstations__.
__application_program_interface__
__Turbo_Pascal__
__publicly_released__
__query_optimizers__.
__information_interchange__.
__API_documentation__.
__implementation_language__,
__reuses_existing__
__transparent_manner__.
__Grid-aware__
__interactive_graphic__
__PDP-8__
__Windows®__
__Common_Language_Runtime__
__FT-MPI__
__experiences_building__
__message-passing_programs__
__Linux_2.6__
__Microsoft_Windows__,
__Windows_applications__
__software_binaries__
__unit_test_cases__
__PCs_running__
__Storage_Resource_Broker__
__communication_layer__,
__client_side__.
__MATLAB®__
__text_editors__.
__pattern_matchers__
__additional_facilities__
__fairly_complicated__
__standards-compliant__
__re-architecting__
__DSP_chip__
__java_programs__.
__tool_chain__,
__coding_standards__.
__X_Windows__
__MPI_application__
__Dynamic_binary_translation__
__orthogonal_persistence__
__trusted_computing_platform__.
__Java_enabled__
__event_logging__
__batch-oriented__
__distributed_programming__,
__ProM__
__high_portability__
__hardware-software_co-design__
__target_platform__
__language_interpreter__
__open_architecture__,
__XML_DBMS__
__annotation_tool__.
__Smalltalk-80__,
__interactive_user_interface__
__extraction_tool__
__pure_Java__
__tightly_integrate__
__intermediate_language__,
__VM/CMS__
__COBOL_programs__
__preliminary_performance_measurements__
__Web_technology__,
__POSIX_threads__
__text_editor__.
__text-editing__
__made_easy__
__CORBA_IDL__
__shading_language__
__markup_languages__,
__UNIX®__
__IBM_PC__
__office_productivity__
__Java_components__.
__QoS_manager__
__scientific_programming__
__stored_program__
__shared_memory_programming__
__Microsoft_Access__
__Matlab_environment__.
__version_2.0__.
__Mentor_Graphics__
__highly_modular__,
__Generic_Haskell__
__mobile_agent_platform__
__strongly_typed__,
__design_aid__
__digital_system_design__
__fully_configurable__
__laboratory_assignments__
__smart_pointers__
__domain_specific_language__
__Assertion-based__
__Unix_systems__
__UNIX_workstations__
__object-oriented_language__,
__Windows_2000__.
__Java_APIs__
__type-checked__
__macro_data_flow__
(__IDE__).
__development_method__,
__Windows_Server_2003__
__Minerva__
__higher-level_abstractions__
__diagnosis_tool__
__software_licensing__
__object-oriented_database_management_system__
__web_framework__
__language.This_paper__
__statistical_computing__
__Ada_compiler__
__Proof-carrying_code__
__header_files__
__XQuery_processing__
__hypermedia_authoring__
__highly_versatile__
__interactive_programming__
__user-programmable__
__communication_libraries__.
__device_driver__,
__chess-playing__
__Mach__,
__Extended_Static_Checking__
__version_3.0__
__networked_virtual_environment__
__translation_tools__
__easily_portable__
__relational_database_technology__
__record_and_replay__
__SQL/DS__
__PERL__
__reference_manual__.
__analysis_engine__
__server_software__
__executable_codes__
__module_design__
__architecture_independent__
__hardware_organization__
__Micro_Edition__
__web_client__
__synthesizable_Verilog__
__code_base__,
__popular_open_source__
__easily_extensible__,
__stack_architecture__
__code_coupling__
__user-interface__,
__programming_framework__.
__data_sublanguage__
__database_machines__.
__Cilk++__
__hardware-independent__
__Intermediate_Format__
__Java_reflection__
__frequently_asked_questions__
__schema_creation__
__communication_library__.
__Load_distribution__
__verification_platform__
__field-tested__
__preliminary_performance_results__.
__Ninf-G__
__Microsoft_Visual_Studio__
__high_level_programming_languages__
__MySQL_database__
__stackable_file_system__
__SQL_server__
__TinyOS-based__
__visual_programming__,
__Abstract_data_types__
__trusted_computing_base__
__VMware_ESX__
__user-friendly_interface__
__tool_suite__,
__intrinsic_functions__
__embedded_control__
__object-oriented_database_system__
__parallel_libraries__
__bare-bones__
__communication_module__
__tool_chains__
__Taylor_II__
__Mac_OS__
__Fortran_90__,
__Microsoft_SQL_Server__,
__PROM__
__security_kernel__
__VRML_browser__
__Jini_technology__
__general_purpose_languages__
__CAD_environment__
__Java_and_CORBA__
__declarative_language__.
__shared_window__
__machine_descriptions__
__parallel_programming_environment__.
__ESC/Java2__
__graphics_engine__
__simulation_language__,
__window_manager__
__Mach_3.0__
__interpreted_language__
__backwards_compatible__
__J2EE_application__
__meta-object__
__Simulink/Stateflow__
__machine_translation_project__
__intermediate_format__
__event-driven_programming__
__WebSphere_Application_Server__
__graphical_interfaces__,
__software_frameworks__,
__Network_emulation__
__distributed_object_technology__
__relational_database_technology__.
__machine_architectures__.
__email_server__
__core_component__
__batch_mode__.
__graphics_editor__
__GPU_virtualization__
__CORBA-compliant__
__stream_processing_engine__
__Jeliot_3__
__demonstration_highlights__
__server_side__.
__resource_manager__.
__Java_application__,
__assembly_instructions__.
__Java_Expert_System_Shell__
__main_modules__
__Jade__,
__Answer_set_programming__
__associative_processing__
__Ada_83__
__Java_platform__
__integrated_development_environment__.
__Linux_kernel__,
__executable_program__
__Fortran_77__.
__source_language__.
__easy_customization__
__algorithmic_language__
__IBM_PCs__
__user_interface_management_system__
__object-oriented_programming__:
__highly_portable__.
__library_calls__
__object_technology__,
__weakly_typed__
__J2EE_application_server__
__protocol_specification__,
__code_level__.
__application_development_environment__
__at_Carnegie-Mellon_University__.
__vendor-supplied__
__extensible_markup_language__
__Full_Maude__
__Arden_Syntax__
__custom_tailored__
__diagramming_tool__
__object_storage__
__personal_firewall__
__self-explanatory__
(__Scalable_Vector_Graphics__)
__computational_physics__.
__graphical_tools__.
__simulation_toolkit__
__Hyper/J__
__intermediate_languages__.
__agent_platform__.
__Data_structure__
__graphic_displays__
__user_terminal__
__textual_format__
__decimal_floating-point_arithmetic__
__VHDL_or_Verilog__.
__markup_language__,
__plugin-based__
__mainstream_programming_languages__
__development_kit__
__hardware_simulator__
__user_interface_toolkit__
__front_ends__.
__easily_added__.
__relational_DBMS__.
__data_stream_management_system__
__system_administration__,
__IBM_XL__
__Linux_device_drivers__
__Windows_platform__.
__Java_virtual_machine__,
__type-preserving_compiler__
__GRID_superscalar__
__software_toolkit__
__operating_system_kernel__.
__current_implementations__.
__Windows_2000__,
__MIDP_2.0__
__proof-carrying_code__.
__visual_programming_environments__
__Windows_applications__.
__backup_and_restore__
__XQuery_processor__.
__tool_set__,
__communication_library__,
__development_tool__,
__Internet_Explorer__.
__Texas_Instruments__'
__GUI_programming__
__Java_Server_Pages__
__composition_language__
__version_2.0__,
__XML_messages__.
__Ada_code__
__open-source_software__,
__test-bench__
__reference_documentation__
__open_source_components__.
__Windows_environment__.
__packet_sniffer__
__highly_productive__
__runtime_systems__,
__Hypertext_Markup_Language__
__XQuery_Update_Facility__
__architectural_level__.
__substantially_simplify__
__Oracle_DBMS__
__user_level__,
__reflexion_model__
__architectural_principles__,
__VR_Juggler__
__testing_tool__,
__exploration_tool__
__distributed_object_management__
__Naked_Objects__
__Industrial_strength__
__IBM_7090__
__mobile_robotic_platform__
__web_infrastructure__
__Snort_rules__
__Red_Hat_Linux__
__concurrent_process__
__bug_fixes__.
__programming_library__
__Python-based__
__virtual_globe__
__Eclipse_plugin__
__OO_language__
__primarily_intended__
__avionics_systems__.
__system.This_paper_describes__
__performance_analysis_tools__.
__digital_library_collections__
__middleware_services__,
__dynamic_linking__,
__Safety_Critical_Java__
__serial_interface__
.__NET_Compact_Framework__.
__saga__
__scripting_environment__
__DEVS_and_Cell-DEVS__
__architectural_analysis__.
__an_object_oriented_language__
__structuring_concepts__
__array_language__
__DG-ADAJ__
__ParoC++__
__highly_extensible__
__Java_Enterprise_Edition__
__command_set__
__global_object_space__
__simulink__
__menu_driven__
__main_functionalities__
__load_balancing_service__
__Ninf-G2__
__molecular_graphics__
__XML_language__
__object_manager__
__Linux_platforms__.
__Globus_Grid__
__Apache_Axis__
__fault_tolerance__:
__An_object_oriented__
__numerical_code__
__application_development_platform__
__input_method__.
__Linux_distributions__
__bytecode_verifier__
__lexical_analyzer__
__middle_tier__
__SIMAN_simulation__
__definition_languages__
__program_analysis_tools__.
__Sun_Solaris__
.__NET_platform__
__object_oriented_programming_languages__
__Java_CoG__
__program_design__,
__administration_tool__
__Pilot-Job__
__J2EE_architecture__
__template_engine__
__Graphic_User_Interface__
__rich_client__
__Java_servlets__
__MS_Word__
__Java_class_library__.
__Data_General__
__Cooperative_Search_Engine__
__Database_management__
__model_creation__,
__XML_signature__
__hardware-dependent_software__
__Rational_Software_Architect__
__major_design_goal__
__resource_manager__,
__modular_components__.
__PL/SQL__
__hardware_emulator__
__LINDA__
__reusable_software_component__
__compiler_implementation__.
__record-oriented__
__measurement_tool__,
__hardware_vendors__
__Concurrent_Haskell__
__Google's_MapReduce__
__Fortran_95__.
__Apache_Ant__
__trait-based__
__Sun's_Java__
__HP-UX__,
__Java_servlet__
__Java_technologies__
__&psi__;-__SSA_representation__
__concurrency_constructs__
__JavaBeans_components__
__Pathway_Tools__
__Java_RMI__,
__Linux_kernels__
__Cellular_Disco__
__an_object-oriented_language__,
__Ariadne__,
__minimal_effort__
__bioinformatics_application__
__dynamic_instrumentation__.
__software_stack__,
__distributed_object_middleware__
__Web_interface__.
__structure_editor__
__User_Mode_Linux__
__GPSS/H__.
__ARINC_653__
__counterflow_pipeline__
__Global_Arrays__
__the_Glasgow_Haskell_Compiler__.
__memory_leak_detection__
__Structured_programming__
__Co-Array_Fortran__
__updated_versions__
__Open_OODB__
__WAP_2.0__
__Fortran_77__,
__program_specializer__
__auxiliary_processor__
__HLA-compliant__
__virtualization_techniques__.
__development_toolkit__
__Model_Builder__
__NFS_servers__
__J2EE_applications__.
__SP-GiST__
__designed_specially__
__microkernel-based__
__media_gateway__
__Xilinx_Virtex_FPGA__.
__PostgreSQL_database__
__Java_JIT_compiler__
__Microsoft®__
__database_query_language__
__workstation_environment__.
__core_functionalities__
__IBM_eServerTM_BladeCenter®__
__Java_VM__.
__RT-Mach__
__easily_modified__.
__APL_characters__
__compiler_back-end__
__hardware_compilation__.
__network_programming__.
__star_diagram__
__interface_builder__
__freely_downloadable__
__multi-agent_platform__
__open-source_Java__
__Microsoft_Word__,
__Natural_language_understanding__
__main_components__.
.__NET_Common_Language_Runtime__.
__privilege_separation__
__nested_array__
__database_programming_language__.
__ODMG-compliant__
__XQuery_Full-Text__
__dynamically_loadable__
__functional_programming_language__,
__high_level_languages__.
__DBMS_architecture__
__Estelle__,
__Web_programming__
__Initial_performance_results__
__remote_procedure_call__.
__untrusted_code__.
__profiling_tool__
__code_producer__
__IBM_System/370__
__critical_path_analysis__.
__Windows_PCs__
__control_station__
__hybrid_relational-XML__
__Semantic_Network_Array_Processor__
__database_programming__
__programming_interfaces__.
__visual_scripting__
__large_mainframe__
__Navigation_Server__
__process_manager__
__numerical_computing__.
__pretty-printing__
__user_space__.
__parallel_optimization__
__the_Glasgow_Haskell_Compiler__
__software_library__.
__Object-oriented_analysis__
__OSI_protocol__
__medium_speed__
__XSLT_transformation__
__mouse-driven__
__Smalltalk-80&trade__;
__command_language__,
__log-structured_file_system__
__standards_compliant__
__Modula-2__,
__metaobject_protocol__
__Unix_systems__.
__pattern_matching__:
__standard_libraries__.
__Trellis/Owl__
__separation_kernel__
__rendering_engine__,
__&lgr__;-DB
__diagnostic_program__
__high-level_architecture__
__hot_swapping__
__ANSI_C__,
__Microsoft_Word__.
__modelling_tool__,
__database_engine__.
__fully-functional__
__SPIDER__,
__XML_information_retrieval__
__biological_database__
__configuration_language__,
__workstation_environment__
__higher_level_language__
__algorithm_animation__,
__geographic_database__
__persistent_database__
__formally_specified__.
__tracer__,
__BSD_UNIX__
__APL_interpreter__
__Unstructured_Information_Management_Architecture__
__shell_scripts__
__record/replay__
__Ada_programs__,
__MetaEdit+__
__user-customizable__
__controller_board__
__IPC_mechanism__
__supporting_interactive__
__WebCom-G__
__performance_measurement_tool__
__sys-tem__
__multicore_programming__
__record-replay__
__query_specification__.
__USB_device__
__blue-tooth__
__HTTP_servers__
__Commodity_Grid__
__Distributed_Component_Object_Model__
__Apple_II__
__fully_documented__
__generic_types__.
__prototype_compiler__
__IBM_370__
__performance_benchmark__
__source-to-source_translation__
__object_viewers__
__processor_family__.
__Java_middleware__
__personal_robot__
__Jikes_RVM__,
__Portable_Document_Format__
__Symmetric_Lisp__
__suspend_and_resume__
__language_processors__.
__source_code_repository__
__IBM-compatible__
__GUI_software__
__machine_simulator__
__UNIX_environment__.
__dynamically_typed_languages__
__real-world_application__,
__error_repair__
__Eclipse_plug-ins__
__control_program__.
__development_platforms__.
__Protégé_ontology__
__signature_creation__
__Java_environment__.
__open-sourced__
__process_scheduler__
__Visual_Basic_6.0__
__dynamically_compiled__
__programming_patterns__,
__Common_LISP__
__data-parallel_programming__
__refactoring-aware__
__graphics_API__
__executable_file__
__bytecode_interpreter__
__Oracle_PL/SQL__
__programming_conventions__
__Pegasus__.
__Active_Disks__
__Apache_HTTP_Server__
__Real-time_CORBA__
__graphical_output__.
__Eclipse_IDE__
__TCL__
__international_standard__.
__look-and-feel__
__class_files__,
__plug-compatible__
__OpenGL_API__
__OpenMP_compiler__
__portable_software__
__deployment_descriptors__
__library_routines__,
__bioinformatics_resource__
__synthetic_workload_generator__
__class_library__.
__IBM®__
__Prolog_program__
__Performance_debugging__
__IBM®_DB2®__
__bytecode_instrumentation__.
__BG/L__.
__parallel_programming_assistant__
__commercial_grade__
__visualization_toolkit__
__compiler_backend__
__buffer_cache__,
__session_manager__
__Google_maps__
__Java_Web_Start__
__SQL_standard__
__Firefox_browser__
__expert_system_shell__.
__component_architecture__,
__upward_compatible__
__Data_model__
__Java_Card__,
__Data_abstraction__
__storage_engine__
__Modula-3__.
__Sun_Grid_Engine__
__Trace_Analyzer__
__gains_popularity__
__NCBI_BLAST__
__platform-neutral__
__370-XA__
__completely_transparent__
__kernel_mode__
__visualisation_tool__,
__program_decomposition__
__Lisp_implementation__
__Consistency_management__
__bulk-synchronous__
__TPC-App__
__microcode_compiler__
__Prism-MW__
(__Graphical_User_Interface__)
__Dynamic_linking__
__Handel-C__,
__parallel_MPI_applications__
__programming_examples__.
__open-source_tools__
__modest_extensions__
__software_development_kit__
__flight_control_software__
__Windows_based__
__Microsoft_Visual_Basic__
__source-level_debugging__
__presentation_tool__
__Flash_MX__
__graphical_programming_language__
__ISO/IEC_standard__
__HPF/JA__
__Linux_distribution__
__Jikes_Research_Virtual_Machine__
__Python_library__
__LAM/MPI__.
__layout_engine__,
__Information_modeling__
__engineering_tool__
__application_programming_interface__.
__Java_Native_Interface__
__genome_mapping__
__AJAX-based__
__automatic_instrumentation__
__Java_packages__
__CDC_Cyber__
__JDK_1.2__
__usage_scenario__,
__testing_framework__,
__Java_platform__.
__J2ME_CLDC__
__Formally_verifying__
__embedded_software__:
__Caernarvon__
__vectorizing_compiler__
__API_library__
__Rockwell_Collins__
__dynamic_linker__
__SPiDER__
__XML_parser__.
__load_tests__
__hybrid_architectures__.
__CPU/FPGA__
__runtime_state__
__Eclipse_plugins__
__VHDL_or_Verilog__
__collaboration_transparency__
__profiling_tool__,
__Perl_script__
__virtual_machines__:
__high_level_language__.
__Tracer__,
__industry-standard_benchmark__
__Globus_XIO__
__Flash_Lite__
__Java_runtime_environment__
__profiling_tool__.
__parallel_programming_environment__,
__text_editor__,
__isolated_execution__
(__Structured_Query_Language__)
__Interval_Methods_In_Knowledge_Representation__.
__thread_package__
__Windows_operating_systems__.
__an_enhanced__,
__Java_Development_Kit__
__format_string_vulnerabilities__
__Modelica__,
__control_abstractions__
__file_operations__.
__directive-based__
__program_visualization__,
__mainframe_computers__
__Pet_Store__
__source_code_and_documentation__
__distributed_DBMS__
__MISRA_C__
__behavioral_interface_specification_language__
__POSIX_standard__
__server_pages__
.__NET_framework__,
__J2EE_application_server__,
__SUIF_compiler__
__formal_approaches__,
"__write_once__,
__Texas_Instruments__.
__bulk_synchronous_parallel__
__safe_regression_test_selection__
__fault_tolerant_MPI__
__database_engines__.
__dynamic_AOP__
__TRIPS_architecture__
__UML_notation__,
__Computing_Research_Repository__
__data_mining_tool__,
__basic_functions__.
__OpenMP_directives__.
__mass_storage_system__.
__geometric_computing__.
__linear_algebra_libraries__
__resource_monitoring__.
__distributed_stream_processing_system__.
__arcade_game__
__TAE_Plus__
(__AJAX__)
__numerical_code__.
__core_library__
__manufacturing_line__.
__Scalable_Simulation_Framework__
__Semantics-preserving__
__meeting_capture__
__Instruction_List__
__HyperText_Markup_Language__
__native-code__
__Query_Language__)
__Berkeley_DB__
__Event-driven_programming__
__NLP_components__
__Microsoft_Project__
__foundational_proof-carrying_code__
__stream_processing_middleware__
__fully_operational__,
__concrete_realizations__
__large_phylogenetic_trees__.
__easily_extendible__
__support_tool__,
__instruction_set_simulator__.
__Blue_Matter__
__operating_systems__'
__CPU_accounting__
__DEC-10__
.__NET_3.5__
__ActiveX_control__
__primitive_set__
__Pocket_PCs__
__Set_theory__
__GPSS/H__,
__OS_services__,
__RT-CRM__
__CORBA_3.0__
__reverse_engineering_environment__
__Proof_Animation__
__fuzz_testing__
__oriented_applications__.
__cross-browser__
__OS_kernels__
__Windows_NT_4.0__
__rapid_system_prototyping__.
__programming_interfaces__,
__GNU_Emacs__
__user_guide__
__visual_basic__
__Java_implementation__.
__experiment_management__
__concurrent_object-oriented_language__
__MIMD_multiprocessor__
__debugging_facilities__
__Structured_design__
__memory-based_parsing__
4D/__RCS__
__behavior_model__,
__CORAL__.
__commercial_web_sites__,
__high_level_constructs__
__bytecode_verifier__.
__Smart_card__
__user-level_thread__
__object-relational_DBMS__
__visual_language__,
__ladder_diagram__
__Meta-AspectJ__
__script_language__,
__SIMAN/Cinema__
__Microsoft_Visio__
__dynamic_partial_reconfiguration__.
__round-tripping__
__educational_modules__
__reference_implementation__,
__Globus_Toolkit__.
__Modern_operating_systems__
__Open_Inventor__
__UNIX-like_operating__
__ANSI-C__.
(__Application_Programming_Interface__)
__Scalable_POWERparallel__
__dynamic_web_applications__
__CODASYL_database__
__relationally_complete__
__portable_parallel__
__Active_Server_Pages__
__data_interchange_format__
__Application_programmers__
__Enterprise_Dynamics__
__hosting_environment__
__generic_libraries__.
__functional_enhancements__
__information_server__.
(__Sharable_Content_Object_Reference_Model__)
__support_environment__,
__minimal_effort__.
__authoring_environment__,
__Simulink/Stateflow__.
__Special_purpose__
__Erlang/OTP__.
__VRML_2.0__
__Software_reusability__
(__IMS_LD__)
__simulation_methodology__,
__virtual_machine-based__
__access_control_checks__
__APL2/PC__
__mainstream_languages__
__object-based_storage__
__Object-oriented_analysis_and_design__
__stubs_and_skeletons__
__Prolog_interpreter__
__OLTP_systems__.
__WordPerfect__
__MIThril__
__graphics_software__
__deductive_database_system__
__dependability_benchmark__
__high-level_synthesis_tools__.
__Recent_extensions__
__MUC-4__.
__architectural_constructs__
__attached_processor__
__socket_interface__
__Future_enhancements__
__access_lists__
__Excel_spreadsheets__
__reference_guide__
__message_passing_primitives__
__document-processing__
__host_programming_language__
__cycle-true__
__compiler_generator__
__Semantic_Web_standards__.
__embedded_SW__
__Emacs_Lisp__
__Excel_spreadsheet__
__middleware_layer__.
__emulation_platform__
__pure_functional__
__beta_version__
__modern_programming_languages__,
__executing_programs__.
__XML_DOM__
__Web_browser__,
__language_extension__,
__Data_structures__,
__OpenGL_ES__.
__R-GMA__
__integration_platform__,
__intelligent_search_agent__
__hardware_building_blocks__
__visual_editors__
__XQuery_processor__
__web_services_technology__.
__BitTorrent_client__
__Object_Teams__
__MaRTE_OS__.
__programming_language__;
__trusted_computing_technology__.
__University_of_Regina__.
__programming_idioms__.
__ATM_API__
__telephone_switch__
__triple_store__
__middleware_stacks__
__SMT_solver__.
__gateway_service__
__PC_Grid__
__VHDL_simulator__.
__thick-client__
__Apache_Axis2__
__Ptolemy_II__,
__SQL_Server__,
__Linux_operating_system__,
.__NET_based__
__Learning_Management_System__,
__video_game_console__
__metadata_schemas__.
__proof-ofconcept__
__GUI-driven__
__managed_code__
__enactment_engine__
__output_formats__.
__fine-tuned__,
__Operating_System__)
__NCSA_Mosaic__
__ANSI_standard__
__database_engine__,
__network_management_tool__
__Earth_science_data__
__runtime_support__,
__SIP_stack__
__easily_ported__
__integration_tool__
__UNIX_Consultant__
__older_versions__
__sensor_gateway__
__CORBA_interfaces__
__visual_editor__
__document_format__.
__software_suite__,
__XML_editor__
__data_translation__,
__Jeliot_3__.
__handwriting_recognizer__
__Programming_Support_Environment__
__application_generator__
__reusable_code__.
__operating_system__:
__IBM_360__
__discrete_event_simulator__
__execution_replay__
__Java_SE__
__compiler/interpreter__
__Odin_II__
__writing_tool__
__Functional_programming_languages__
__mobile_agent_platform__.
__Yogi__
__dual-boot__
__distributed_executions__
__computing_facility__.
__virtualization_environment__
__analysis_engine__.
__direct_execution__.
__vendor_specific__
__Level_2_BLAS__
__Object-oriented_modelling__
__Jess__,
__database_administration__
__open_source_platform__
__hybrid_simulation__.
__Pentium_processor__
__simulation_kernel__.
__computing_Grid__
__centralized_database__
__successive_refinements__.
__Execution_Layer__
__Plug-ins__
__compiled_languages__
"__Spreadsheet_simulation__"
__security_scanner__
__transport_mechanism__.
__Logistical_Networking__
__spoken_language_dialogue_system__
__flow_chart__.
__instruction_set_architectures__.
__aspect_refactoring__
__platform_independence__.
(__DB2_UDB__)
__script_files__
__Windows_NT_4.0__.
__graphics_library__.
__type_parameterization__
__version_1.1__
__custom_architectures__
__MICAz_motes__
__interface_generator__
__parallel_virtual_machine__
__parallel_FEM__
__OMNeT++__,
__CASE_tool__,
__physical_device__.
__optimizer_generator__
__parser_generators__.
__application_programming__,
__rapid_prototyping_methodology__
__highly_configurable__.
__dynamic_software_updating__
__debugging_environment__.
__banking_application__.
__object_management__,
__application_independent__.
__file_manager__,
__SPMD_programming__
__HMCS-G__
__ChinaGrid_Support_Platform__
__Linux_environment__.
__Charm++__,
__data-parallel_language__
__mind-mapping__
__parallel_debugging__
__general-purpose_languages__
__Globus_Toolkit__,
__computer_algebra_systems__,
__P2P_collaboration__
__Trusted_Platform_Modules__
__JXTA_protocols__
__lightweight_virtualization__
__virtual_appliance__
__proof-carrying_code__,
__multiagent_platform__
__Eclipse_technology__
__Modula-3__,
__socket_API__
[__mc]square__
__relational_query_processor__.
__GIGA__
__shadow_driver__
__binary_translator__
__core_components__,
__taint-tracking__
__ELLA__
__Sparse_BLAS__
__usability_inspection_method__
__J2EE_application_server__.
__Macintosh_computers__
__evaluation_tool__,
__automotive_application__
__short_paper__.
__command-and-control__
__highly_modularized__
__Windows_OS__
__research_platform__,
__VM/370__.
__UI_components__.
__IBM_System_z9TM__
__IBM_System_z9__
__magnetic_bubble_memory__
__SAGA__,
__user_manual__
__popular_open-source__
__runtime_environments__,
__product_code__.
__Cluster_OpenMP__
__meta-database__
__loadable_kernel_module__
__parallelizing_sequential__
__socket_programming__
__desktop_workstation__
__performance_debugger__
__adaptive_educational_hypermedia__
__Event_Heap__
__linked_structures__
__Hierarchical_Data_Format__
__message-passing_interface__
__MPI_programming__
__program_compilation__,
__user-level__,
__distributed_execution__,
__application_independent__,
__JBoss__.
__structured_design_methodology__
__OpenSolaris__
__scene-graph__
__architecture_definition__
__Windows_operating_systems__
__run-time_environment__,
__Global_Arrays__.
__ZigBee_standard__
__desktop_client__
__microcomputer_systems__.
__runtime_libraries__
__JBOSS__
__transaction-level_modeling__
__CLP_language__
__block-diagram__
__software_design_patterns__.
__specific-purpose__
__Java_execution_environment__
__hardware_abstraction_layer__
__OSEK/VDX__
__UNIX_shell__
__Globus-based__
__parallelization_tool__
__open_source_framework__
__graphical_browser__
__Ada_95__,
__object_request_brokers__
__web_proxy__
__completely_redesigned__
__command_line_interface__.
__cyclic_debugging__
__An_analytical_performance_model__
__continuous_media_server__
__relies_heavily__
__CORBA_technology__.
__major_enhancements__
__pre-existing__,
__Java_class_library__
__SPMD_style__
__HPF_compiler__.
__SWI-Prolog__.
__Python_interface__
__COBOL_code__
__mathematical_sketching__
__hard-_ware__
__high-level_language__.
__PAM-Blox__
__OpenGL_Shading_Language__
__ocean_modeling__
__Java-based__,
__object-oriented_simulation__.
__visual_routines__
__host_language__,
__Solaris_MC__
__pure_Java__.
__automated_refactoring__
__Spec#__
__simulation/emulation__
__Grid_simulator__
__protocol_implementations__,
__cluster_server__
__digital_archive__.
__interpreted_languages__
__AMD__.
__parallel_program_design__
__PS-GRADE__
__an_object-oriented_application_framework__
__symbol_manipulation__.
__MUPPETS__
__easily_extensible__.
__OBO-Edit__
__ECJ__
__coupled_models__.
__open-source_and_commercial__
__chip_assembly__
__transaction_manager__.
__instruction_set_design__.
__Lisp_dialect__
__refactoring_operations__
__program_slicer__
__Programmer's_Workbench__
__Java_IDE__
__feasibility_study__,
__executable_files__.
__Multithreaded_programming__
__graphics_acceleration__
__Eclipse_Java__
__Windows_API__
__reference_implementations__.
__class_library__,
__GRAPE__,
__tool-suite__
__image_processing_library__
__Data_structures_and_algorithms__
__MS_Excel__
__general-purpose_programming_languages__
__J-Orchestra__
__symbolic_debugger__
__Cadence_design__
__Unix_environment__
(__High_Performance__
__network_appliance__
__collected_traces__
__network_stack__,
__Microsoft_Excel__,
__display_controller__
__remote_procedure_call_mechanism__
__concurrent_garbage_collector__
__relational_database_management_system__,
__control_panels__.
__SQL_syntax__
__data_dictionaries__
__threads_package__
__building_customized__
__desktop_sharing__
__architecture-neutral__
__legacy_Fortran__
__memory_layout__.
__remote_debugging__
__linguistic_descriptions__.
__JBoss__,
__TV_conference__
__Berkeley_DB__,
__standard_APIs__.
__programming_support__.
__Sun_Sparc__
__Dynamic_instrumentation__
__equivalence_checker__
__program_mutation__
__graphical_programming__
__XML_Web_Services__,
__Standard_Template_Library__
__container_classes__.
__graphical_animation__,
__GPU_architecture__,
__Prolog_implementations__
__FORTRAN_90__
__scientific_programmers__
__Quake_III__
__Bioconductor_package__
__covers_version__
__CAVE_environment__
__Oracle_PL_/_SQL__
__command_line_interface__
__digital_logic_simulation__
__Java_AWT__
__graphic_environment__
__massively_parallel_machine__
__e-wallet__
__office_suites__
__parallel_Fortran__
__Pascal_compiler__
__incremental_parallelization__
__user_interface_components__,
__process_scheduler__.
__research_purposes__,
__bioinformatics_workflow__
__optimistic_simulator__
__language_translators__.
__distributed_IPC__
__product-quality__
__peripheral_device__
"__stand-alone__"
__Internet_Explorer__,
__DEVS_formalism__.
__OLTP_applications__.
__SPEC_CPU2006__.
__web_graphics__
__IBM's_DB2__
__user_written__
__free_of_charge__.
__host_OS__.
__FORTRAN_compiler__
__PCD++__
__fault_tolerant_systems__,
__use-case__.
__networking_hardware__.
__Purdue_University__.
__File_System__,
__WWW_interface__
__data_manager__.
__API_documentation__,
__punched_cards__,
__compiler-compiler__
__metadata_aggregation__
__multimedia_platform__
__annotation_framework__,
__main_originality__
__manual_pages__,
__document_editor__
__object_serialization__.
__GPL_license__.
__Java_runtime__
__workflow_execution_engine__
__Oracle_9i__
__Atmel_AVR__
__POSIX-compliant__
__dynamically_reconfigurable__.
__hardware_encryption__
__AquaLogic_Data_Services_Platform__
__object-oriented_framework__.
__extensible_database__
__smart_transducer_interface__
__programming_language__)
__metadata_repository__.
__response_characteristics__.
__cluster_and_grid_computing__
__system-level__.
__graphical_user__
__Ajax-enabled__
__SpecC_language__
__XML_query_language__.
__Web_client__
__VHDL-AMS__,
__friendly_interface__
__Fortran-90__
__screen-oriented__
__virtual_storage__,
__Prolog_implementation__
__translating_Smalltalk__
__road_traffic_simulation__
(__Java_Agent_DEvelopment_Framework__)
__HLA_simulations__
__LAM/MPI__,
__shared-memory_systems__,
__workflow_editor__
__Common_Language_Infrastructure__
__Cache_management__
__ANSI-C__,
__Grid_service__,
__CPN_Tools__,
__parallel_Haskell__
__seismic_data_processing__
__workflow_concepts__
__graphics_programming__.
__coupled_simulations__
__object-oriented_methodology__.
__Basic_Local_Alignment_Search_Tool__
__PowerPC_processors__
__parallel_language__,
__compute_cloud__
__backing_store__.
__Real-time_rendering__
__FORTRAN_program__
__image_algebra__
__KOMI__
__Microsoft_Internet_Explorer__,
__XSL_transformations__.
__semantic_portal__
__UDP/IP__.
__trusted_platform_module__
__Musical_Instrument_Digital_Interface__
__wireless_sensor_platform__
__existing_technologies__:
__UNIX_systems__.
__automatic_partitioning__
__prototyping_environment__,
__music_synthesis__
__UNIX_processes__
__policing_function__
__networking_stack__
__briefly_sketched__.
__automatic_memory_management__.
__PE_file__
__PATR-II__
__Service_Pack__
__Java_Virtual_Machine__,
__open_source_technologies__
__distributed_memory_multiprocessor__
__internet_of_things__
__compiler_directives__,
__commutativity_analysis__
__open_source_project__,
__Legion__,
__IBM_System/360__
__report_generator__
__CP-67__
__basic_linear_algebra_subprograms__
__mix_and_match__
__Array-OL__
__the_Internet_Backplane_Protocol__
__standard_ML__
__linear_algebra_library__
__UNIX_System_V__
__parallel_netCDF__
__performance_analysis_tools__,
__key_components__,
__Unix_tools__
__exploratory_programming__
__transparent_communication__
__multiway_rendezvous__
__card-handling__
__parallel_library__
__Windows_kernel__.
__high-level_programming_languages__,
__hardware_compiler__.
__Dynamic_HTML__
(__operating_system__)
__object-oriented_DBMS__
__hardware-enforced__
__data_description_language__
__software_factory__.
__Gtk+__
__concurrent_object-oriented_programming_language__
__Java_interface__
__an_object_oriented__,
__MPICH-G2__,
__Knowledge_Engineering_Environment__
__basic_functionality__,
__naming_scheme__,
__constraint_handling_rules__
__Online_testing__
__alignment_tables__
__usage_model__,
__data_logging__,
__parallel_programming_language__.
__Program_debugging__
__home_grown__
(__VHSIC_hardware_description_language__)
__Bluetooth_wireless_technology__
__object-relational_DBMS__.
(__Object_Management_Group__).
__persistent_programming_language__
__TCP/IP_network__.
non-__object-oriented__
__synchronisation_mechanisms__
__run-time_specialization__
__Tcl-Tk__
__synthesizable_VHDL_code__.
__specific_implementations__.
__interface_definition_language__.
__generic_classes__.
__add-ons__.
__program_animation__
__abstraction_layer__,
__standard-cell_library__.
__software_toolkit__,
__assembler_language__
__performance_debugging__,
__hardware_performance_monitor__
__Sun_Microsystems_Laboratories__.
__Apache_server__
__IBM_DB2__,
__client-server_application__
__MoonWalker__
__Eclipse_JDT__
__Grid_portal__,
__latest_version__
__JAVA_programs__
__generator_tool__
__concurrent_functional_language__
__interoperability_framework__.
__manipulation_language__.
__hardware_description_language_VHDL__.
__ADL_SCORM__
__Java_Agent_DEvelopment_Framework__
__programming_abstraction__,
__location_transparency__.
__heterogeneous_parallelism__.
__J2ME_applications__
__Warp_machine__
__Peridot__
__perl__
__monitoring_facility__
__ER_diagrams__.
__Performance_considerations__
__G-code__
__EDA_tools__,
__embedded_OS__
__High-level_language__
__Globus_Toolkit_4__,
__Ajax_applications__.
__computational_environment__,
__compatibility_testing__.
__wrapper_generator__
__linear_algebra_software__
__collaborative_graphics_editing__
__Java_Micro_Edition__
__user_interface_builder__
__license_agreement__
__hardware_interfaces__
__Hardware-supported__
__web_components__,
__MapReduce_programming_model__
__Penetration_testing__
__program_compression__
(__graphical_user_interface__)
__Perl_package__
__DB2____&reg__;
__hierarchical_task_graph__
__Concert/C__
__Turing_Plus__
__commercial_software_products__.
__opensource_software__
__Microsoft_Foundation_Classes__
__Objective_Caml__,
__linear_algebra_operations__,
__High_assurance__
__implicitly_parallel__
__indexed_MegaBLAST__
__parsing_engine__
__Sony_Ericsson__
__Mac_OS__.
__integrated_architecture__,
__Ninf-C__
__binary_translator__.
__message-passing_mechanism__
__robustness_testing__.
__Wintel__
__compilers_and_interpreters__
__file_manager__
__hardware/software_cosimulation__
__practical_realisation__
__Computational_Framework__
__concurrent_PASCAL__
__avail-able__
__parallel_constructs__.
__multiprocessor_simulator__
__MPI_I/O__
__XML_parsers__
__OpenMP_programming_model__
__adding_persistence__
__object_oriented__.
__JXTA_platform__.
__authoring_language__
__secure_coprocessor__
__data_center_management__
__portable_parallel_programming__
__Multiple_dispatch__
__IBM_compatible__
__domain-specific_language__,
__Microsoft's_SQL_Server__
__multi-stage_programming__
__secure_web_server__
__high_performance_cluster__
__IEEE_754_floating_point__
Microsoft__&reg__;
__inexpensive_hardware__
__MPI_code__
__Open_Inventor__,
__robust_parser__
__manual_pages__
__model_checker_NuSMV__
__cross_assembler__
__symbolic_debugger__,
__object-oriented_programming_language__,
__Automatic_code_generation__
__class_declarations__
__patent-pending__
__OPAL__
__existing_web_applications__.
__bug_repository__
__Tcl__,
__functionally_complete__,
__Apache_web_server__.
__virtual_machine_monitor__,
__open-source_framework__
__Synopsys__,
__Motorola_68000__
__Web_server_performance__.
__object-oriented_DBMS__.
__heterogeneous_computational_clusters__.
__Networked_virtual_environments__
__Linux_platform__.
__knowledgeable_users__
__digital_license__
__ODMG_compliant__
__SOAP_engine__
__high_level_programming_language__
__Andrew__,
__client/server_technology__
__online_shop__
__multiprocessor_workstation__.
__reactive_processes__.
__SNMP_management__
__electronic_encyclopedia__
__GFDL__
__data_structure__:
__structuring_facilities__
__Pascal_programs__,
__&lsqb__;1&rsqb;,
__embedded_microcontrollers__
__Hardware_and_software_components__
__multi-reader__,
__multiprocessor_simulator__.
__Csound__
__Bartok__
__running_concurrently__,
__real_time_operating_systems__
__J2ME/CLDC__
__mainframe_computer__.
__instrument_control__,
__voting_machine__.
__Parallel_Random_Number_Generators__
__complex_arithmetic__.
__relational_database_system__,
__eL-CID__
__shared_libraries__.
__Altair__
__Java_Script__
__graphical_tool__,
__process_scheduler__,
__initialization_procedure__.
__Concurrent_Collections__
__Intel_8088__
__communication_module__,
__MPI/RT__
__web-service_based__
__Fortran-77__
__Rational_Rose__,
__iconic_programming__
__SQL_server__,
__Cedar__,
__File_structures__
__operating_system__).
__application_programmer_interface__
__style_sheet__
__SNORT_IDS__
__Unix_shell__
__adaptive_parallelism__
__message_passing_paradigm__.
__Pascal_program__
__Fortran_code__,
__adaptable_multimedia__
__layout_editor__
__perl__,
__web_components__
__multi_threading__
__extension_language__.
__standard_Fortran__
__file_encryption__
__easy_prototyping__
__High-integrity__
__AIX_operating_system__.
__security-enhanced__
__Unix_file_system__
__VMEbus__
__Robotic_Platform__
__flexibility_and_extensibility__,
__Microsoft_Windows_NT__
__Linux_Security_Modules__
__assembly_languages__,
__virtual_machine__:
__encoders_and_decoders__.
__bastion__
__trusted_components__.
__JAVA_applets__
(__Parallel_Virtual_Machine__)
__programming_environment__:
__Microsoft_Internet_Explorer__
__database_design_tool__
__virtualization_layer__.
__Syntax-driven__
__early_access__
__GUI_builder__
__Dyalog-APL__
__program_animation__,
__packet_processing_engine__
__JLS__
__formal_description_techniques__.
__enterprise_services__,
__processor_models__,
__dataflow_machine__.
__high_performance_scientific_computing__
.__Net_Framework__
__embedded_SQL__
__DODDLE-OWL__
__PLT_Scheme__.
__Actor_model__
__querying_XML__.
__bio-inspired_systems__
__data_exchange_format__.
__CODASYL_DBMS__
__incremental_compilation__,
__Free_Software_Foundation__
__file_systems__:
__data_manager__,
__Java_JIT_compiler__.
__biomedical_data_analysis__
__web_farm__
__writing_portable__
__language_interpreters__
__vertical_profiling__
__transactional_programming__.
__workload_characterization__,
__Language_Integrated_Query__
real-__time_flight__
__field_data_collection__
__Legacy_code__
__extensible_compiler__
__UNIX_environment__
__fast-track__
__API_libraries__
__Flash_retrieval__
__finite_capacity_scheduling__
__Language_features__
__Legacy_Interface__
__loadable_kernel_modules__
__capture/replay__
__DEVS_modeling__.
__worker_nodes__,
__extension_points__.
__validation_environment__
__Migrating_legacy__
__Windows_kernel__
__certifying_compilation__.
__Scientific_simulations__
__telephone_switching_system__.
__related_statistics__.
__instruction-set_simulator__,
__SDH_network__
__termination_tool__
__Virtual_Machine__,
__object-oriented_environments__.
__Ada_compiler__.
__speech_dialogue__
__Microsoft_product__
(__Instruction_Set_Architecture__)
__dynamically_reconfigurable_architectures__
__PDP-11/45__
__international_standard__,
__existing_simulators__,
__parallel_programming_paradigm__.
__micro_processor__
__dual-rail_logic__
__Proteus__.
__standard_UNIX__
__graphic_user_interfaces__
__trace-analysis__
__dynamic_invariant_detection__
non-__task-specific__
__Visual_Language_Compiler__-Compiler
__logical_units__.
__Cayuga__
__parallel_simulation_environment__
__Open_MP__
__Toolbox_for_MATLAB__
__stored_procedure__
__Intelligent_Miner__
__Eclipse_platform__.
__object_oriented_programming_language__
__Java_HotSpot__™
.__NET_Common_Language_Runtime__
__MPEG-4_Part_10__
__embedded_system's__
__interactive_web__
__semantic_translation__
__Ada_83__.
__J-Sim__,
__development_environment__:
__graphics_programming__
__Hyper-V__
__C#__'s
__performance-analysis__
__Total_Recall__
__alerting_service__
__platform_architecture__.
__commercial_RDBMS__,
__machine_architecture__,
__multiparadigm_language__
__AJAX-enabled__
__static_analyzers__.
__Functional_components__
__functional_simulator__.
__source_code_repository__.
__Linux_device_drivers__,
__operating_system_kernel__,
__TLC_model_checker__.
__development_proceeds__
__piecemeal_fashion__
__Sun_RPC__
__task_planner__
__General_Public_License__
__floppy_disk__
__October_2007__.
__object-oriented_database_system__,
__x86_architecture__.
__CROWN_Grid__
__synthetic_workload__.
__composition_engine__
.__NET_Framework__,
__interactive_graphical_applications__.
__LISP_1.5__
__insurance_domain__,
__user-defined_data_types__
__Third_party__
__DEC_PDP-11__
__Zebra__,
__Fortran_compilers__.
__defacto_standard__
__PLT_Scheme__
__conformance_test_suites__
__LISP_interpreter__
__TMO-based__
__Altera_FPGA__
__Object-oriented_development__
__Andrew_File_System__
__CAD_package__
__microcontroller_architecture__
__Prototype_implementations__
__ATUM__
__list_processing_language__
__Core_Language_Engine__
__electronic_funds_transfer__
__memory_virtualization__
__source_file__.
__Ajax-based__
__hosting_environment__,
__message-passing_library__
__Lisp_machine__
__log_analyzer__
__RT-Linux__,
__Statistics_Canada__
__run_anywhere__"
__SUN_workstations__.
__layout_engine__.
__configuration_language__.
__Fortran_programs__,
__client_application__,
__static_race_detection__
__Motorola_68000__,
__library_routines__.
__animate_vision__
__parallel_debugger__
__hypermedia_services__
__concurrent_time-stamp__
__query_facility__.
__UNIX_kernel__.
__System_administration__
__business_process_specifications__,
__Remote_method_invocation__
__Linux_distribution__.
__Write_Once__
__electronic_office__
__Linux®__
__SQL_database__
__GSSP__
__mesh_array__
__instrumentation_framework__.
__Architectural_descriptions__
__commodity_OS__.
__UNIX_systems__,
__microprogrammed_processor__
__CAD_framework__.
__Linux_kernel_module__
__Recent_Lucent_Technologies_patents__.
__database_model__,
__VHDL_synthesis__
__multimedia_player__
__Orca__,
__static-analysis__
__Tcl/Tk__.
__primary_rate__
__fully_functional__,
__Java_Data_Objects__
__presentation_software__.
__Tango__,
__diagnostic_programs__
__GODIVA__
__XML_serialization__
__COBRA__-ABS
__back_ends__.
__Algol_68__,
__synthesizable_VHDL__.
__Status_report__:
__&trade__;
__discrete_event_simulator__.
__standard_library__,
__compilation_framework__,
__middleware_service__.
__collaborative_interface_agents__
__template_metaprogramming__.
__group_RPC__
__Functional_logic_programming__
__TAU_performance_system__
__WLAN_security__
__XQuery_compiler__
__XQuery_engine__,
__decision-tree_model__
__existing_Web_applications__.
__Perl_6__
__Scratchpad_II__
__lazy_functional_language_Haskell__.
__Fortran_90__/95
__statistics_package__
__double-dispatch__
__typed_intermediate_languages__
__Generative_programming__
__Key_components__
__persistent_object_store__
__dynamic_configuration__.
__resource-scarce__
__running_UNIX__.
__RHINOS__
__live_demonstration__
__relational_DBMSs__,
__visual_design_environment__
__Matlab/Simulink__,
__Fortran_IV__
__group_communication_service__.
__numerical_libraries__.
__programming_language__:
__UNIX_operating_system__
__variable_precision_arithmetic__
__querying_XML_data__.
__Learning_automata__
__stack_machine__.
__migration_facility__
__program_codes__,
__software_simulator__
__programming_library__.
__Spreadsheet_languages__,
__Java_compiler__.
__an_Eclipse_plugin__.
__Linux_platform__,
__FreeRTOS__
__triple_store__.
__instruction-level__,
__distributed_memory_multiprocessor_systems__
__automated_tuning__
__object_repository__
__MAFRA__
__parallelizing_compiler__,
__distributed_embedded_real-time_systems__
__proof-checker__
__COMMON_LISP__
__Microsoft's_Windows__
__socket-level__
(__Network_File_System__)
__profile_acquisition__
__SIMM__
__MPEG-4_encoder__
__structured_graphics__
__malware_analysis__,
__Experiences_teaching__
__analysis_engine__,
__Coordination_technology__
__reflective_capabilities__.
__macro_processor__.
__virtualization_techniques__,
__Java_VM__,
__shared-memory_parallel_computers__
__web_content_management__
__emulated_network__.
__PSI-MI__
__program_comprehension_tools__.
__Sangam__
__information_visualization_tool__.
__stack_machine__,
__modeling_notation__,
__Alpaca__
__numerical_library__
__memory_manager__,
(__Fault_Tolerant__
__open_source_web__
__Run_Time_Infrastructure__
__shared_memory_parallel_programming__
__PRAM_model__,
__runtime_library__,
__graphical_simulator__
__language_independence__,
__Bantam__
__scientific_workflow_management__
__master/worker__
__HLA_federates__
__relational_database_engine__
__concurrent_object-oriented_programming__
__current_implementation_status__
__intermediate_form__,
__Object_Pascal__
__memory_slot__.
__configuration_manager__,
__Celadon__
__universal_serial_bus__
__decision-support_system__,
__Remote_Procedure_Call_mechanism__
__Java_API__.
__database_functionality__.
__installation_instructions__
__Application_Program_Interfaces__
__molecular_science__
__Cadence__,
__static_type_inference__
__iterator-based__
__prediction_engine__
__RTOS-based__
__Minerva__,
__easily_deployed__.
__Shading_Language__
__trace_generation__,
__provenance_metadata__
__graphical_programming_environment__
__Java_technology__,
__workflow_manager__
__compiler_infrastructure__,
__Modern_languages__
__CVS_repository__
__multi-agent_contracting__
__SDKs__
__application_writers__.
__legacy_FORTRAN__
"__push-button__"
__highly_customizable__,
__FLIP-FLOP__
__ISO_standard__,
__P2P_platform__.
__MPI_derived_datatypes__
__wrapping_legacy__
__dynamic_optimizations__.
__resource_management_framework__.
__Perl__)
__reverse_compilation__
__multi-micro-processor__
__semi-automatically_generated__
__QoS_framework__.
__Haskell_compiler__,
__programming_language_independent__
__simulation_engines__,
__fully_digital__,
__weakly-typed__
__mote_platform__.
__reduction_machine__.
__weak_consistency__.
