__software_development__
__software_systems__
__business_processes__
__software_development__.
__software_architecture__
__carrying_out__
__software_systems__.
__design_patterns__
__simulation_models__
__complex_systems__
__formal_methods__
__business_process__
__software_developers__
__web_applications__
__software_engineers__
__Web_applications__
__use_cases__
__software_tools__
__multi-agent_systems__
__design_decisions__
__reverse_engineering__
__security_requirements__
__expert_systems__
__component-based__
__requirements_engineering__
__real-time_systems__
__process_models__
__software_testing__
__software_design__
__complex_systems__.
__development_process__
__embedded_software__
__knowledge_acquisition__
__software_components__.
__software_quality__
__project_management__
__design_process__
__existing_systems__
__application_development__
__user_requirements__
__software_projects__
__software_maintenance__
__software_reuse__
__software_architectures__
__computer_programs__
__software_development__,
__data_quality__
__analysis_tools__
__formal_verification__
__software_products__
__quality_assurance__
__interactive_systems__
__modeling_techniques__
__conceptual_models__
__tool_support__
__software_metrics__
__software_projects__.
__test_suites__
__functional_requirements__
__quality_attributes__
__product_design__
__test_suite__
__Web_applications__.
__rapid_prototyping__
__development_process__.
__software_evolution__
__design_process__.
__software_architecture__.
__product_line__
__legacy_systems__
__existing_tools__
__design_methodologies__
__software_process__
__from_scratch__
__business_processes__,
__simulation_tools__
__application_domain__
__software_quality__.
__engineering_design__
__architectural_design__
__design_tools__
__life_cycle__
__Traditional_approaches__
__software_systems__,
__large_systems__
__software_testing__.
__design_problems__
__software_modules__
__process_models__.
__software_processes__
__regression_testing__
__safety-critical__
__software_reliability__
__software_design__.
__software_artifacts__
__software_requirements__
__design_methods__
__conceptual_modeling__
__change_management__
__product_development__.
__geared_towards__
__reusable_components__
__development_processes__
__program_comprehension__
__enterprise_systems__
__software_applications__.
__Software_engineering__
__human_interaction__
__database_applications__.
__life_cycle__.
__requirements_engineering__.
__software_components__,
__formal_methods__.
__design_alternatives__
__complex_systems__,
__requirements_analysis__
__software_maintenance__.
__defect_detection__
__knowledge-based_systems__
__formal_verification__.
__aspect-oriented_programming__
__database_design__
__re-engineering__
__Web_application__
__development_tools__
__software_product__
__modeling_languages__
__best_practice__
__support_systems__
__design_goals__
__unit_testing__
__real-time_systems__,
__simulation_modeling__
__performance_prediction__
__program_development__
__learning_systems__
__crosscutting_concerns__
__legacy_systems__.
__process-oriented__
__process_modeling__
__simulation_techniques__
__knowledge_engineering__
__tool_support__.
__quality_requirements__
__product_lines__
__large_systems__.
__component_models__
__software_evolution__.
__Formal_methods__
__design_approaches__
__design_knowledge__
__embedded_software__.
__non-functional_requirements__
__manufacturing_processes__
__development_effort__
__agent_systems__
__Software_testing__
__CASE_tools__
__program_understanding__
__software_products__.
__reverse_engineering__.
__version_control__
__testing_techniques__
__Design_patterns__
__verification_techniques__
__design_solutions__
__conceptual_design__
__design_rationale__
__software_product_lines__.
__project_management__.
__co-design__
__business_applications__.
__object-oriented_design__
__cost_estimation__
__specific_requirements__
__impact_analysis__
__modeling_tools__
__separation_of_concerns__
__design_patterns__,
__software_reuse__.
__individual_components__
__verification_tools__
__model-driven_development__
__design_processes__
__architecture_design__
__evaluation_techniques__
__conceptual_modelling__
__domain_analysis__
__product_lines__.
__software_tools__.
__software_product_lines__
__business_requirements__
__software_architecture__,
__organizational_structures__
__enterprise_architecture__
__automated_tools__
__CAD_systems__
__performance_tuning__
__fine-tuning__
__software_development_process__
__life-cycle__
__formal_methods__,
__software_measurement__
__reverse_engineering__,
__from_scratch__,
__web_applications__,
__support_tools__
__adaptive_systems__
__design_process__,
__protocol_design__
__quality_management__
__design_requirements__
__design_criteria__
__Software_architecture__
__complex_software_systems__
__customer_requirements__
__verification_and_validation__
__business_process_modeling__
__Software_reuse__
__requirements_elicitation__
__systems_engineering__
__greatly_enhance__
__software_processes__.
__object-oriented_software__
__software_design__,
__object_orientation__
__experience_shows__
__object-orientation__
__safety_analysis__
__rapid_prototyping__.
__object-oriented_systems__
__large_software_systems__
__development_process__,
__existing_software__
__management_tools__
__modelling_techniques__
__Web_accessibility__
__Web_applications__,
__software_security__
__crosscutting_concerns__.
__software_solutions__
__concurrent_engineering__
__quality_models__
__component-based_systems__
__software_development_processes__
__systems_development__.
__safety_critical__
__architectural_styles__
__formal_techniques__
__mathematical_modeling__
__development_environments__
__software_application__
__large-scale_systems__
__business_goals__
__program_comprehension__.
__evaluation_process__
__non-functional_properties__
__software_architects__
__quality_evaluation__
__system-level_design__
__program_design__
__clone_detection__
__application_developers__.
__reference_models__
__process_improvement__.
__autonomic_systems__
__safety_requirements__
__effort_estimation__
__software_artifacts__.
__process_models__,
__greatly_simplify__
__software_designers__
__software_visualization__
__software_engineering_techniques__
__large_software_systems__.
__software_product_line__
__critical_systems__
__system_administration__
__software_complexity__
__agile_development__
__real-time_embedded_systems__
__software_development_process__.
__component-based_software__
__abstraction_levels__
__quality_metrics__
__process-based__
__safety-critical_systems__
__existing_systems__,
__domain-specific_languages__
__formal_verification__,
__geared_toward__
__development_methodology__
__software_reliability__.
__security-related__
__code_reuse__
__testing_methods__
__supporting_tools__
__complexity_metrics__
__component-oriented__
__Reverse_engineering__
__changing_requirements__
__embedded_system_design__
__software_organizations__
__legacy_software__
__process_knowledge__
__application_development__,
__workflow_technology__
__software_testing__,
__software_development_processes__.
__COTS_components__
__design_tools__.
__high_assurance__
__cost-effectiveness__
__user_requirements__,
__complex_applications__.
__simulation_models__,
__systems_design__
__large_systems__,
__model_development__
__architectural_decisions__
__component-based_development__
__program_understanding__.
__architectural_design__.
__ontology_engineering__
__Requirements_engineering__
__software_requirements__.
__process_modeling__.
__development_activities__
__requirement_analysis__
__knowledge_acquisition__,
__database_design__.
__product_family__
__Business_processes__
__groupware_systems__
__architectural_knowledge__
__development_processes__.
__design_metrics__
__simulation_environments__
__software_quality__,
__analysis_tools__,
__modelling_languages__
__regression_testing__.
__process_mining__
__enterprise_integration__
__complex_software_systems__.
__The_Unified_Modeling_Language__
__application_design__
__developing_software__
__Software_engineers__
__mutation_analysis__
__software_production__
__Software_developers__
__integration_testing__
__automated_testing__
__model-based_testing__
__visualization_tools__.
__software_projects__,
__agent-based_systems__
__quality_characteristics__
__security-critical__
__performance_testing__
__code_quality__
__software_architectures__,
__process_modelling__
__software_environments__
__alternative_designs__
__Real-time_systems__
__object-oriented_software__.
__requirements_specification__.
__quality_factors__
__safety-related__
__requirements_engineering__,
__component_technologies__
__software_maintenance__,
__security_aspects__
__software-intensive_systems__
__critical_parameters__
__project_planning__
__business_goals__.
__control_software__
__hypermedia_systems__
__software_engineering_principles__
__technical_requirements__
__web-based_applications__.
__design_processes__.
__Aspect-oriented_programming__
__labor-intensive__
__greatly_facilitate__
__embedded_real-time_systems__
__tools_supporting__
__service-oriented_systems__.
__product_design__,
__cross-cutting__
__component-based_software_development__
__building_models__
__legacy_systems__,
__plan-based__
__software_product__.
__safety-critical_systems__.
__development_efforts__
__software_platforms__
__product_line_engineering__
__development_effort__.
__simulation_tools__.
__estimation_models__
__security_requirements__,
__design_phase__
__schema_integration__
__compiler_construction__
__distributed_software__
__high-level_design__
__architectural_patterns__
__ontology_development__
__Programming_languages__
__test_automation__
__Simulation_models__
__design_effort__
__planning_systems__
__planning_techniques__
__software_development_organizations__
__knowledge_reuse__
__design_quality__
__model-driven_engineering__
__software_reuse__,
__development_methodologies__
__software_modules__.
__functional_requirements__,
__enterprise_information_systems__
__maintenance_tasks__
__Use_cases__
__test_engineers__
__core_assets__
__change_propagation__
__component_selection__
__business-oriented__
__UI_design__
__development_environments__.
__knowledge_engineers__
__Software_metrics__
__learning_scenarios__
__validation_techniques__
__embedded_software__,
__tool_support__,
__input_validation__
__security_metrics__
__end-user_programming__
__component-based_software_engineering__
__testing_process__
__knowledge_elicitation__
__test_suites__,
__groupware_applications__
__reliability_prediction__
__tool_integration__
__software_engineering_tools__
__software_development_tools__
__testing_techniques__.
__function_points__
__CASE_tools__.
__modeling_techniques__,
__design_specifications__
__support_tools__.
__change_requests__
__security_assurance__
__information_models__
__formal_verification_techniques__
__engineering_process__
__CSCW_systems__
__helps_developers__
__functional_and_non-functional__
__security_testing__
__architecture_design__.
__clinical_guidelines__
__highly_automated__
__technical_systems__
__Software_maintenance__
__complex_software__
__development_methods__
__design_practice__
__Formal_verification__
__policy_languages__
__software_designs__
__information_visualization_techniques__
__Regression_testing__
__reusable_software_components__
__configuration_management__.
__requires_careful__
__development_cycle__
__testing_tools__
__experience_suggests__
__software_quality_assurance__
__secure_systems__
__performance_tuning__.
__business_analysts__
__engineering_process__.
__static_analysis_tools__
__security_patterns__
__software_process_improvement__.
__design_flaws__
__domain_engineering__
__hardware_systems__
__quality_attributes__,
__software_development_environments__
__reusable_components__,
__development_tools__,
__knowledge-based_system__
__Rapid_prototyping__
__computer_programs__,
__performance_engineering__
__Software_components__
__industrial_systems__
__reliability_models__
__software_development_and_maintenance__
__reverse-engineering__
__modeling_languages__,
__application_domain__,
__Existing_tools__
__tool-supported__
__dependable_systems__
__change_management__.
__business_activities__.
__Software_evolution__
__reusable_software__
__important_aspects__
__CBR_systems__
__existing_methodologies__
__Workflow_management_systems__
__software_project__.
__hardware_design__,
__architectural_choices__
__emergent_behavior__
__Software_reliability__
__programming_tasks__
__dynamic_analysis__.
__development_project__.
__model_validation__.
__conceptual_modeling__.
__design_decision__
__program_visualization__
__life_cycle__,
__Software_quality__
__software_configuration_management__
__feature-oriented__
__up-front__
__programming_methodology__
__design_tools__,
__software_products__,
__requirements_specification__,
__architectural_design__,
__industrial_strength__
__current_practice__,
__tool_development__
__software_process__.
__process_steps__
__component-level__
__knowledge_based_systems__
__quality_assurance__.
__enterprise_modeling__
__software_construction__
__requirements_management__
__traceability_links__
__software_complexity__.
__secure_systems__.
__product_families__
__architectural_solutions__
__architecture-based__
__engineering_systems__
__design_phase__.
__requirements_analysis__,
__maintenance_tasks__.
__release_planning__
__scientific_software__
__The_book_review_column__.
__interactive_systems__,
__object-oriented_design__.
__process_modeling__,
__fault-tolerant_systems__
__data_collection_and_analysis__
__product_families__.
__component_reuse__
__software_patterns__
__Software_tools__
__design_artifacts__
__object-oriented_technology__
__knowledge_systems__
__software_solutions__.
__quality_attribute__
__requirements_definition__
__Model_transformations__
__software_assets__
__computer_algebra_systems__
__software_integration__
__object-oriented_analysis__
__testing_process__.
__helps_identify__
__product_line_engineering__.
__industrial_practice__.
__development_processes__,
__Software_architectures__
__enterprise_applications__,
__quality_aspects__
__product_derivation__
__requirements_analysis__.
__development_cycle__.
__architectural_approach__
__ontology_building__
__program_analysis_techniques__
__process_definition__
__specification_techniques__
__code-level__
__tool_developers__
__software_engineering_practices__
__software_architecture_design__
__software_security__.
__critical_systems__.
__dependable_systems__.
__systems_engineering__.
__diagnostic_reasoning__
__development_practices__
__scientific_discovery__.
__modelling_tools__
__measurement_tools__
__complement_existing__
__software_process_models__
__acceptance_tests__
__larger-scale__
__analysis_methods__,
__fault_tolerance_mechanisms__
__cross-cutting_concerns__
__existing_frameworks__
__computer_architects__
__software_structure__
__design_stage__
__regression_testing__,
__reliable_systems__
__early_design__
__integrated_development_environments__
__GUI_testing__
__structured_design__
__large_projects__
__requires_considerable__
__nonfunctional_requirements__
__web_application_development__
__ill-structured__
__collaborative_processes__
__user_interface_development__
__development_activities__.
__database_design__,
__security_evaluation__
__visualisation_techniques__
__component_integration__
__requirements_elicitation__.
__compiler_writers__
__integration_process__
__software-intensive_systems__.
__requirements_engineers__
__evaluation_tools__
__service_design__
__refactoring_tools__
__usability_requirements__
__code_reuse__,
__evaluation_methods__,
__test_scripts__
__authoring_tools__.
__development_phases__
__design_engineers__
__graphical_tools__
__rapid_prototyping__,
__architectural_views__
__product_models__
__software_processes__,
__automated_analysis__
__simulation_systems__.
__software_composition__
__feature_interaction__
__software_cost_estimation__
__reverse_engineering_tools__
__object-oriented_techniques__
__design_processes__,
__security_engineering__
__user_assistance__
__current_standards__
__testing_criteria__
__design_problems__,
"__real-world__"
__program_understanding__,
__software_productivity__
__defect_data__
__cost_factors__
__decision-support__
__engineering_processes__
__workflow_design__
__software_engineering_methods__
__testing_environment__
__functional_correctness__
__project-specific__
__helping_developers__
__business_process_modelling__
__regression_tests__
__automated_verification__
__User_interface__
__software_behavior__
__expert_judgment__
__quality_assurance__,
__formal_approaches__
__program_comprehension__,
__enable_designers__
__code_reuse__.
__product_line__.
__complex_designs__
__Thispaper_presents__
__model_construction__,
__Software_product_lines__
__testing_activities__
__dependability_requirements__
__architecture_design__,
__validation_process__
__detailed_design__
__Formal_specifications__
__software_production__.
__requirements_document__
__testing_procedures__
__integration_testing__.
__communication_design__
__architectural_concepts__
__design_methods__,
__requirements_traceability__
__software_cost__
__design_methodologies__,
__Complex_systems__
__evaluation_procedures__
__visual_tools__
__software_safety__
__complex_applications__,
__decision_support_tools__
__analytic_tools__
__agent_systems__,
__object-oriented_methods__
__distributed_software_systems__
__plan-driven__
__crosscutting_concerns__,
__high-assurance__
__object-oriented_software_systems__.
__systems_integration__
__reusable_assets__
__program_testing__
__main_aim__
__corrective_maintenance__
__commercial_software__.
__code_inspection__
__program_design__.
__debugging_tools__
__defect_prediction__
__valuable_insights__
__development_stages__
__software_artefacts__
__automation_systems__
__security_objectives__
__business_components__
__performance_data__,
__software_environments__.
__product_family__.
__mass_production__
__agent_architectures__
__maintenance_process__
__enterprise_modelling__
__empirical_knowledge__
__software_development_methodologies__
__production_quality__
__software_development_and_maintenance__.
__architectural_design_decisions__
__design_projects__.
__manufacturing_processes__,
__domain-specific__,
__Conceptual_modeling__
__critical_properties__
__COTS_software__
__embedded_control_systems__.
__functional_capabilities__
__software_development_processes__,
__design_environments__
__development_effort__,
__software_evolution__,
__design_specification__
__software_management__
__poorly_designed__
__software_developer__
__requirements_documents__
__Concurrent_programming__
__traceability_information__
__real_time_systems__
__requirements_elicitation__,
__pre-release__
__business_goals__,
__manufacturing_simulation__
__COTS_products__
__control_engineering__
__development_environments__,
__requirement_engineering__
__process_activities__
__risk_assessment__,
__aspect-oriented_software_development__
__WCAG_2.0__
__Domain_Specific_Languages__
__simulation_environments__.
__end-user_programming__.
__engineering_approaches__
__embedded_control_systems__
__design_phases__
__automatic_or_semi-automatic__
__program_debugging__
__complex_products__
__compiler_construction__.
__automated_support__
__test-driven__
__substantial_effort__
__expert_knowledge__,
__penetration_testing__
__software_life_cycle__
__software_development_project__.
__business_modeling__
__business_transformation__
__reading_techniques__
__micro_and_macro__
__re-engineering__.
__trade-off_analysis__
__unit_testing__.
__application_programming__
__configuration_management__,
__agile_methodologies__
__Recent_research_suggests__
__post-deployment__
__maintenance_processes__
__product_lines__,
__identifying_potential__
__database_technologies__
__software_engineering_processes__
__automotive_systems__
__risk_analysis__,
__COTS_components__.
__product_line_development__
__component_adaptation__
__conceptual_models__,
__design_stages__
__design_stages__.
__research_tools__
__model_creation__
__re-engineered__
__complex_domains__
__safety_critical_systems__.
__software_measures__
__large_applications__.
__architectural_description__
__integration_problems__
__reverse_engineering_techniques__
__high_productivity__
__flexibility_and_adaptability__
__points_of_view__,
__continuous_integration__
__Tool_support__
__safety-critical_systems__,
__building_ontologies__
__design_level__
__quality_properties__
__modeling_tools__,
__change_management__,
__software_models__.
__Separation_of_concerns__
__software_engineering_practice__
__formal_models__,
__design_space_exploration__,
__acceptance_test__
__specific_details__
__architectural_modeling__
__development_cycle__,
__design_requirements__,
__existing_software__.
__industrial_projects__.
__Software_inspection__
__product-line__
__model-driven_development__.
__variability_modeling__
__use-case__
__software_frameworks__
__quality_issues__
__implementation_choices__
__design_reuse__
__Software_design__
__review_process__
__design_paradigms__
__software_product_line_engineering__
__concurrent_software__.
__formal_notations__
__COTS-based__
__control_procedures__
__high-integrity__
__conceptual_design__,
__information_modeling__
__theoretical_foundation__
__tool-based__
__unit_tests__.
__process.This_paper__
__complex_designs__.
__architecture_description_languages__
__development_phase__
__well_structured__
__tool_integration__.
__software_requirements__,
__problem_frames__
__large_distributed_systems__.
__Experience_shows__
__regression_test_selection__
__post-hoc__
__software-intensive__
__COTS_component__
__careful_planning__
__simulation_tools__,
__class-level__
__engineering_practices__
__object-oriented_applications__.
__test_plans__
__unit_testing__,
__large_software_systems__,
__data_modelling__
__process_analysis__
__engineering_methods__
__development_stages__.
__international_standard__
__integration_processes__
__model-based_development__
__software_change__
__tedious_and_error-prone__
__version_control__,
__anti-patterns__
__programmer_productivity__.
__performance_debugging__
__software_quality_attributes__
__problem_diagnosis__
__safety-critical_software__
__critical_software__
__design_iterations__
__automated_design__
__safety_critical_systems__
__research_tool__
__programming_practices__
__tools_exist__
__operational_profiles__
__re-engineer__
__system-level_design__.
__engineering_tools__
__physical_database_design__
__component-based_software_development__.
__software_reliability__,
__Domain-specific_languages__
__require_careful__
__UML_modeling__
__change_request__
__hardware_designers__
__MDA-based__
__Model_transformation__
__verification_and_validation__.
__specific_goals__
__socio-technical_systems__.
__large_software_projects__.
__component-based_systems__,
__Program_comprehension__
__Process_modeling__
__re-structuring__
__Embedded_software__
__model-driven_software_development__
__Web_engineering__
__systems_engineering__,
__safety_issues__
__systematic_reuse__
__Software_product_line_engineering__
__reliability_estimates__
__user_stories__
__process_patterns__
__conflicting_requirements__
__Impact_analysis__
__variability_management__
__commonality_and_variability__
__operational_profile__
__maintenance_strategies__
__design_concerns__
__development_approaches__
__product_architecture__
__life-cycle__.
__language_designers__
__post-release__
__increasing_complexity__,
__Computer_architecture__
__effort_prediction__
__separation_of_concerns__,
__software_modeling__
__development_phases__.
__engineering_techniques__
__defect-prone__
__requirements_capture__
__design_phase__,
__acquisition_process__
__formal_specification_and_verification__
__integration_approaches__
__hazard_analysis__
__maturity_level__
__safety-critical_applications__.
__software_intensive_systems__
__Security_protocols__
__ill-equipped__
__test_automation__.
__OO_metrics__
__object-oriented_software_systems__
__architectural_designs__
__Process_mining__
__software_comprehension__
__software_functionality__
__real-time_embedded_software__
__organization-wide__
__enterprise_architectures__
__high_quality_software__
__conceptual_modeling__,
__organizational_models__
__requirements_specifications__,
__user_interface_design__,
__software_product_line__.
__project_planning__,
__data_preparation__,
__test_prioritization__
__complex_software__.
__architecture_recovery__
__model_development__,
__repetitive_tasks__
__business_information_systems__
__coupling_and_cohesion__
__software_design_patterns__
__creation_process__.
__software_reengineering__
__fast_prototyping__
__information_processing_systems__.
__review_process__.
__COTS-based_development__
__life_cycles__.
__security_solutions__.
__intelligence_analysis__
__automated_tests__
__quality_software__.
__open_source_tools__
__software_engineering_researchers__
__secure_software__
__reusable_component__
__complex_distributed_systems__
__preliminary_design__
__design_documents__
__test_execution__,
__policy_compliance__
__reliable_software__
__testing_techniques__,
__easier_to_understand__,
__measurement_models__
__product_line__,
__maintenance_activity__
__modeling_effort__
__functional_size__
__declarative_languages__
__Model-driven_development__
__program_development__,
__Knowledge-based_systems__
__risk_identification__
__engineering_projects__.
__data_analysis_tools__
__software_inspections__.
__coordination_languages__
__product_variants__
__organizational_requirements__
__business_information_systems__.
__interactive_software__
__model_driven_development__
__hardware/software_codesign__
__knowledge_engineering__,
__situation-specific__
__management_processes__
__fault_isolation__,
__CASE_tools__,
__core_asset__
__execution_logs__
__legacy_software_systems__
__event-based_systems__
__sophisticated_tools__
__aspect-orientation__
__problem_domain__,
__model-driven_engineering__.
__software_development_paradigm__
__advantages_include__
__software_engineering_process__
__modern_software_engineering__
__systems_development__,
__scientific_models__
__software_testers__
__requirements_prioritization__
__active_database__
__software_development_process__,
__component_models__,
__Panel_Summaries__.
__architectural_evolution__
__medical_systems__.
__SOA_governance__
__data_presentation__
__software_process__,
__Domain_analysis__
__agent-based_applications__
__software_development_projects__,
__specialized_tools__
__design_management__
__software_engineering_methodologies__
__reliable_software__.
__commonalities_and_variabilities__
__process_based__
__Key_issues__
__software_costs__
__application_frameworks__
__modeling_paradigms__
__workflow_languages__
__causal_analysis__
__communication-centric__
__Unit_testing__
__control_processes__
__code_smells__
__Graphical_user_interfaces__
__large-scale_software_systems__.
__model-based_testing__.
__component_architectures__
__requirements_negotiation__
__soft-_ware__
__development_cycles__
__bug_patterns__
__forward_engineering__
__performance_modeling__,
__reuse-based__
__military_simulation__
__object-oriented_analysis_and_design__
__helping_designers__
__essential_elements__
__engineering_effort__
__software_adaptation__
__technological_infrastructure__
__practical_limitations__
__design_review__
__complex_distributed_systems__.
__component-based_software_systems__.
__Process_models__
__software_development_methods__
__Conformance_testing__
__architecture_evaluation__
__object-oriented_software__,
__scenario-based_design__
__requirement_elicitation__
__Web_application_development__
__detailed_design__.
__architectural_tradeoffs__
__predictable_behavior__
__structured_programming__,
__international_standards__.
__validation_process__.
__software_engineering_approaches__
__programming_methodologies__
__impact_analysis__,
__embedded_systems_design__
__business_analysis__
__software_artifact__
__management_activities__
__scenario_based__
__Component_Based_Software_Engineering__
__development_organizations__
__software_repository__
__large_software_projects__
__tool_development__.
__engineering_models__
__software_process_model__
__size_measures__
__software_understanding__
__symbolic_computations__
__software_debugging__
__collaborative_development__
__Design_verification__
__error_reporting__
__hardware_and_software_components__,
__complexity_increases__,
__evolving_software_systems__.
__Domain_specific__
__process_assessment__
__software_product__,
__mathematical_modeling__.
__manual_testing__
__operational_reliability__
__process_improvement__,
__hardware_development__
__service_compositions__,
__development_life_cycle__
__management_tool__.
__software_designs__.
__natural_language_interfaces__.
__safety_critical_software__
(__tutorial_session__).
__architectural_knowledge__.
__formal_verification_tools__
__software_engineering_practice__.
__modern_software__
__critical_elements__
__verification_process__.
__OO_systems__
__software_fault_tolerance__
__design_alternatives__,
__measurement_process__
__Security_requirements__
__structural_analysis__,
__formal_description_techniques__
__stakeholder_requirements__
__software_development_activities__
__embedded_system_design__,
__verification_methodologies__
__well-engineered__
__tool_vendors__
__existing_web_services__
__glue_code__
__human_problem_solving__
__acceptance_testing__
__load_testing__
__validation_methodology__
__ETL_processes__
__requirements_modeling__
__deployed_software__
__development_methodologies__.
__related_activities__.
__industrial_scale__
__similar_projects__.
__fault_removal__
__computer-aided_software_engineering__
__evolving_systems__.
__modeling_methodologies__
__exception_handling_mechanisms__
__software_performance_engineering__
__software_development_methodology__
__assessment_criteria__
__language_engineering__
__support_tools__,
__software_engineering_tasks__
__testing_environment__.
__coding_standards__
__functional_validation__
__early_requirements__
__code_inspections__
__multimedia_authoring__
__software_intensive_systems__.
__bug_fixing__
__Visual_programming__
__embedded_software_development__.
__model-driven_software_development__.
__legacy_software__.
__software_process_modeling__
__testing_activities__.
__safety_related__
__ISO/IEC_9126__
__product_line_architecture__
__software_complexity__,
__reference_architectures__
__software_development_activities__.
__project_planning__.
__object-oriented_software_development__.
__regression_test__
__unit-level__
__automotive_software__
__intelligent_support__
__product_line_development__.
__change_impact__
__formal_techniques__.
__requirements_documents__.
__design_reuse__,
__domain-specific_modeling__
__performance_tuning__,
__extra-functional_properties__
__cooperative_design__.
__key_technology__
__notoriously_difficult__.
__programming_tools__,
__secure_software__.
__security_systems__,
__domain_analysis__,
__complex_software_systems__,
__quality_models__.
__AI_planning_techniques__
__software_lifecycle__
__soft-ware__
__application_security__
__N-version_programming__
__Aspect_mining__
__complex_products__.
__final_product__
__engineering_processes__.
__task_modeling__
__complex_information_systems__.
__adaptive_behaviour__
__industrial_problems__
__data_base_design__
__dependability_properties__
__architecture-centric__
__process_oriented__
__requirement_analysis__.
__modelling_techniques__,
__software_life_cycle__.
__engineering_approach__
__agile_approaches__
__transformation_tools__
__Thispaper_describes__
__modern_software_systems__.
__development_artifacts__
__process_planning__,
__web-centric__
__Potential_applications__
__testing_methodologies__
__cost_estimation__,
__adaptation_decisions__
__development_lifecycle__.
__malware_analysis__
__complex_real-time_systems__.
__aspect-oriented_techniques__
__process_mining_techniques__
__technical_solution__
__web_security__
__quality_goals__
__collaborative_software__
__Web_site_design__
__detailed_design__,
__software_artefacts__.
__highly_beneficial__
__business_process_modeling__,
__scattered_and_tangled__
__fully_automate__
__Non-functional_requirements__
__safety-critical_software__.
__product_designs__
__planning_tools__
__design_models__,
__firewall_policy__
__control_objectives__
__COTS_selection__
__evaluation_process__,
__software_debugging__.
__development_stage__.
__static_analysis_tool__
__code_clone__
__design_documentation__
__structural_bioinformatics__.
__architecture_styles__
__component_testing__
__critical_systems__,
__design_approaches__,
__intelligent_information_systems__
__design_flows__,
__software_requirement__
__hardware/software_systems__
__object_oriented_systems__.
__automated_assistance__
__industrial-scale__
__program_optimization__,
__design_artifacts__.
__software_configuration_management__.
__software_engineering_tools__.
__XML_applications__.
__security_principles__
__ontology_engineers__
__software_engineering_practices__.
__misuse_cases__
__collaboration_processes__
__bioinformatics_analysis__
__reliable_systems__.
__automated_testing__.
__major_parts__
__enterprise_information_system__
__data_mart__
__UML_tools__
__multi-paradigm__
__business_values__
__coverage_testing__
__software_release__
__Model-driven_engineering__
__adaptive_systems__,
__database_designers__
__requirement_analysis__,
__software_development_methodologies__.
__code_metrics__
__maintenance_tasks__,
__cognitive_complexity__
__reusable_code__
__software_product_line_engineering__.
__comprehension_tasks__
__business_scenarios__
__decision-making_process__,
__software_releases__.
__partially_automated__
__highly_complex__.
__Component-based_software__
__inspection_techniques__
__re-engineering__,
__modern_systems__.
__clinical_routine__
__configuration_problems__.
__OT_algorithms__
__model-driven_approaches__
__software_validation__
__software_engineering_environments__
__assessment_instrument__
__development_practices__,
__agent-based_simulations__
__agent-oriented_software__
__software_synthesis__.
__analytical_capabilities__
__evolving_requirements__
__design_strategies__,
__testing_phases__
__intelligence_analysis__.
__object-oriented_software_engineering__
__architectural_descriptions__
__software_libraries__,
__embedded_software_development__
__performance_prediction__,
__Enterprise_architecture__
__user-friendly_interfaces__
__architectural_choices__.
__large_complex_systems__.
__software_reusability__
__object-oriented_software_development__
__traditional_software_development__
__software_test__
__object-oriented_development__.
__systematic_approaches__
__performance_considerations__
__early_feedback__
__model_driven_engineering__
__medical_terminology__
__complex_domains__,
__Current_efforts__
__software_reliability_assessment__
__performance_indicators__,
__industrial_software__
__highly_iterative__
__maintenance_process__.
__strategic_objectives__
__policy_decisions__.
__document_engineering__
__added_functionality__
__file_processing__
__engineered_systems__
__development_phase__.
__service_identification__
__enterprise_architectures__.
__supporting_tools__.
__multimedia_features__
__development_project__,
__inspection_technique__
__construction_processes__
__automatic_synthesis__
__continuous_change__
__domain_engineering__,
__program_evolution__
__language_development__
__biological_research__.
__company-wide__
__virtual_prototypes__
__diagnostic_procedures__
__verification_techniques__,
__Mutation_analysis__
__Current_practice__
__Random_testing__
__program_debugging__.
__design_techniques__,
__testing_requirements__
__quality_assessment__,
__Change_management__
__design_languages__
__candidate_architectures__
__error_detection_mechanisms__
__fault-tolerant_applications__
__practical_usefulness__
__knowledge_management_systems__,
__training_scenarios__
__quality_assurance_techniques__
__enterprise_knowledge__
__automation_tools__
__fault_tolerant_systems__
__Schema_evolution__
__role_engineering__
__ISO_standards__
__automated_tools__.
__repair_strategies__
__easily_incorporated__
__behavior-oriented__
__software_usability__
__software_maintainability__.
__automated_support__.
__mapping_tools__
__design_automation_tools__
__legacy_code__,
__high_level_languages__
__agent-based_systems__,
__cohesion_metrics__
__method_fragments__
__problem_resolution__
__automated_testing__,
__rapid_feedback__
__model-driven_techniques__
__reusable_software__.
__tools.This_paper__
__product_life_cycle__.
__enterprise_architecture__,
__engineering_process__,
__architectural_alternatives__
__systematic_testing__
__business_goal__
__design_automation__,
__product_platform__
__application_generators__
__Computer_architects__
__electronic_circuits__,
__product-specific__
__software_engineering_activities__
__test_effort__
__profiling_techniques__
__target-specific__
__object_oriented_design__
__goal-oriented_requirements_engineering__
__high-quality_software__.
__theoretically_grounded__
__versioning_systems__
__testing_phases__.
__an_intelligent_agent__.
__maintenance_processes__.
__medical_errors__.
__scientific_software__.
__evaluation_techniques__,
__software_quality_management__
__refactoring_tools__.
__large-scale_software_systems__
__product-oriented__
__embedded_software_systems__
__design_diversity__
__Aspect-oriented_software_development__
__software_testing_techniques__
__Extreme_programming__
__agent_programming_languages__
__manual_tasks__
__operational_environments__.
__model-based_design__
__process_documentation__
__industrial_products__.
__incremental_development__,
__distributed_operating_systems__
__NLP_systems__.
__technical_knowledge__.
__quantitative_approach__
__Process_algebras__
__feature_modelling__
__software_engineering_methodology__
__nonfunctional_properties__
__developing_software__.
__authoring_tools__,
__awareness_mechanisms__
__safety_cases__
__requirement_documents__
__safety_standards__
__increase_productivity__
__project_management_tools__
__change_requests__.
__user_centered__
__industrial_requirements__
__complex_embedded_systems__
__software_product_families__.
__interface_issues__
__business_process_management_systems__
__B2B_applications__.
__maintenance_problems__.
__debugging_strategies__
__Elucidative_Programming__
__effective_coordination__
__Web_services__:
__product_designs__.
__animation_tools__
__static_analysis_tools__.
__medical_decision_support_systems__.
__complex_real-time_systems__
__product_derivation__.
__ontology_reuse__
__business_communication__
__related_metrics__
__electronic_commerce_systems__.
__stakeholder_analysis__
__technical_systems__,
__testing_tools__.
__complex_interactions__.
__information_systems_design__.
__test_adequacy_criteria__
__software_process_models__.
__design_knowledge__,
__problem_areas__,
__industrial_standards__
__user_friendliness__
__software_specifications__,
__software_metrics__,
__large-scale_applications__,
__organization-specific__
__industrial_practice__,
__test_process__.
__medical_domains__
__process_design__,
__maintenance_task__.
__testing_methodology__.
__prototype_development__.
__Change_impact_analysis__
__incremental_change__
__patent_analysis__
__reusable_assets__.
__ripple_effects__
__validation_tools__
__business_architecture__
__Object-oriented_databases__
__enterprise_software_systems__.
__data-mining_techniques__
__design_cycle__,
__process_mapping__
__closed_source__
__business_constraints__
__modelling_concepts__
__language-based_security__
__engineering_issues__
__ontology_merging__
__accessibility_evaluation__
__coupling_measures__
__Design_decisions__
__designing_software__
__Effort_estimation__
__AOP_languages__
__parallel_software__.
__component-based_software_systems__
__quickly_create__
__geographic_visualization__
__tool_builders__
__problem_definition__,
__workflow_management_systems__,
__domain_scientists__
__management_support__.
__metamodeling_techniques__
__MPSoC_design__
__precise_specifications__
__office_applications__
__process_reengineering__
__configuration_control__
__Program_understanding__
__communication_mechanisms__,
__information_system_development__.
__difficult_and_error-prone__.
__business_modelling__
"__best_practices__"
__architectural_analysis__
__analysis.This_paper__
__programming_concepts__,
__assessment_process__
__early_aspects__
__quality_characteristic__
__open_source_components__
__automated_software_testing__
__automated_systems__.
__software_component__,
__generative_programming__
__process_modeling_languages__
__dependability_assessment__
__design_aids__
__specific_functionality__
__separate_concerns__
__modular_systems__
__integrated_development__
__software_visualization_tools__
__Data_modeling__
__open_multi-agent_systems__.
__adaptive_user_interfaces__
__design_notations__
__architectural_change__
__automated_debugging__
__model_transformation_languages__
__developing_effective__
__subject_matter_expert__
__model_reuse__
__proactive_information_delivery__
__reference_architectures__.
__component_based_systems__
__mobile_agent_applications__
__agile_methodologies__.
__mission_critical_applications__.
__model_based_testing__
__Equally_important__
__software_comprehension__.
__quality_standards__.
__AI_planning__,
__design_paradigm__,
__exploration_tools__
__architectural_concerns__
__software_construction__,
__automatic_transformations__
__design_practices__,
__business_performance_management__
__Design_pattern__
__nonfunctional_requirements__.
__platform-independence__
__code_evolution__
__related_artifacts__
__development_lifecycle__
__software_development_life_cycle__.
__reuse-oriented__
__Software_security__
__large_projects__.
__software_developments__
__Electronic_System_Level__
__reuse_potential__
__software_product_lines__,
__OO_programming__
__temporal_verification__
__component-based_software_development__,
__functional_size_measurement__
__supporting_tools__,
__modelling_languages__,
__COTS_products__.
__collaborative_tasks__,
__small_to_medium-sized__
__CSCW_applications__
__standard_specifications__
__widespread_belief__
__AOSE_methodologies__
__organisational_context__
__reusability_and_extensibility__
__high_cohesion__
__software_engineering_principles__,
__reliability_engineering__
__simulation_methodologies__
__Object-oriented_frameworks__
__Multimedia_systems__
__software_modification__
__object-oriented_code__.
__functional_safety__
__hardware_development__.
__human_analyst__
__high_quality_software__.
__configuration_items__
__size_measure__
__iterative_development__
__automated_tools__,
__user-interface_design__.
__critical_activities__
__test-suite__
__aspect-oriented_software__
__safety_requirements__,
__universally_accepted__
__production_level__
__improving_software_quality__.
__Service_Oriented_Architectures__,
__black-box_testing__,
__late_stage__
__code_instrumentation__,
__expert_system_development__
__Software_designers__
__security_engineering__.
__COTS_components__,
__developer_productivity__.
__Tool-supported__
__simulation_environments__,
__Aspect_Oriented_Software_Development__
__clear_guidelines__
__process_modelling__,
__test_case_prioritization__.
__usage_profile__
__testing_methods__,
__white-box_testing__
__interactive_software__.
__regression_testing_techniques__
__fault_injection_techniques__
__anomalous_situations__
__COTS_product__
__object-oriented_techniques__.
__model_verification__,
__large-scale_software_systems__,
__modern_programming_languages__.
__development_approaches__.
__decision_models__,
__plan_generation__,
__sharing_mechanisms__
__specialized_languages__
__custom_solutions__
__data_quality_management__
__interaction_behaviour__
__spoken_dialogue_systems__,
__reading_technique__
__process_measurement__
__usefully_employed__
__technical_reviews__
__formal_specification_techniques__
__propagation_patterns__
__systems_development_methods__
__software_simulators__
__software_assurance__
__verification_tools__,
__threat_modeling__
__crime_analysis__.
__corporate-wide__
__automated_test__
__alternative_options__
__algorithms_and_data_structures__,
__verification_and_validation__,
__design_level__,
__electronic_negotiations__.
__problem-solving_methods__.
__theoretically_founded__
__planning_algorithms__.
__design_documents__,
__application_design__,
__Fault_localization__
__simulation_packages__.
__usefully_applied__
__change_propagation__,
__software_architecture_evaluation__
__product_development_processes__.
__Test_coverage__
__risk-driven__
__maintenance_tools__
__autonomous_components__.
__full-blown__
__situational_method_engineering__
__management_activities__.
__design_artefacts__
__customer-specific__
__code_bases__,
__evolving_software__
__reengineering_effort__.
__real-time_distributed_systems__
__ISO_9126__
__requirements_acquisition__
__components.This_paper__
__unexpected_exceptions__
__component_design__.
__management_policies__,
__prototyping_tools__
__design_documents__.
__highly_functional__
__generative_techniques__
__component-based_software_engineering__,
__development_life_cycle__.
__embedded_control_software__
__Software_architects__
__avionics_systems__
__requirements_evolution__.
__Feature_models__
__functional_testing__,
__manual_task__.
__embedded_real-time_systems__,
__software_product_family__
__firewall_configurations__
__ergonomic_design__
__online_testing__,
__specialized_tools__.
__modular_architectures__
__program_structure__,
__software_security__,
__industrial_systems__,
__data_exploration__,
__systems_design__,
__advanced_software__
__assistant_tool__
__architectural_levels__
__large_complex_systems__
__avionics_software__
__life_cycle_model__
__agent-oriented_software_development__
__generation_tools__
__service_orientation__.
__Model-based_development__
__workflow_modeling__.
__intelligent_software__
__flexible_processes__
__metrics_collection__
__quality_assurance_activities__
__current_tools__,
__maintenance_environment__
__Parallel_systems__
__Conceptual_models__
__estimation_models__,
__film_production__
__software_assets__.
__performance_testing__,
__modular_design__,
__visualisation_tools__.
__learning_content__,
__structure_analysis__,
__railway_signaling__
__emergent_behavior__.
__safety_critical_applications__.
__industrial_settings__,
__software_validation__.
"__one-size-fits-all__"
__use_case_descriptions__
__testing_practices__
__application_designers__.
__program_debugging__,
__driven_approach__
__business_entity__
__requirements_tracing__
__ap-_proaches__
__student_programs__.
__knowledge_acquisition_tools__
__core_assets__.
__planning_processes__
__prefabricated_components__
__process_analysis__.
__integrated_process__
__requirements_validation__
__rapid_development__,
__software_specification__,
__methodological_guidelines__
__embedded_system_development__
__completely_automate__
__temporal_predictability__
__continual_improvement__
__Six_Sigma__,
__maintenance_procedures__
__reusable_knowledge__
__software_architecture__:
__programs.This_paper__
__component_oriented__
__discrete-event_simulation_models__
__software_development_efforts__.
__technical_issue__
__embedded_computer_systems__.
__testing_efforts__
__validation_effort__
__highest_quality__
__database_concepts__
__controlled_experimentation__
__integration_mechanisms__
__practical_usage__
__Input_validation__
__engineering_activities__
__chance_discovery__.
__software_development_lifecycle__
__industrial_size__
__object-oriented_analysis__,
__architecture_description_languages__.
__software_quality_metrics__
__product_metrics__
__integration_testing__,
__metric_suite__
__error_proneness__
__main_steps__
__product_variant__
__productivity_metrics__
__higher_levels_of_abstraction__.
__evaluation_tools__.
__future_systems__,
__highly_interactive__.
__Product_line_engineering__
__tool_interoperability__.
__Architectural_styles__
__simulation_technology__.
__Formal_models__
__Cost_estimation__
__design_phases__,
__sequential_systems__.
__specific_features__,
__digital_electronics__
__poorly_documented__
__architectural_design_decisions__.
__embedded_software_development__,
__business_process_reengineering__.
__WCAG_1.0__
__collaboration_process__
__automated_static_analysis__
__agent-oriented_programming__
__target_specific__
__organizational_models__.
__software_documents__.
__debugging_programs__
__modern_programming__
__medical_processes__
__development_methods__,
__data_mining_projects__.
__change_history__.
__developers_and_maintainers__
__model-driven_development__,
__requiring_considerable__
__generating_test_cases__
__dynamic_adaptation__,
__development_methodology__,
__software_certification__
__relevant_stakeholders__
__Isis__
__product_line_architectures__.
__engineering_methodologies__
__application_frameworks__.
__specific_concerns__
__ontology_engineering__,
__product_manufacturing__
__version_management__,
__mitigation_strategies__.
__Task_models__
__software_architecture_design__.
__domain_modeling__.
__development_productivity__
__fruitfully_applied__
__automated_systems__,
__previous_releases__
__software_process_management__
__maintenance_activity__.
__educational_metadata__
__software_organizations__,
__formal_analysis_tools__
__complex_embedded_systems__.
__complex_engineering_systems__.
__agile_software__
__fall_short__.
__program_maintenance__
__compositional_techniques__
__software_engineering_tasks__,
__Web_security__
__modeling_concepts__,
__accumulated_knowledge__
__programmer_productivity__,
__wet_lab__
__design_stages__,
__use_case_descriptions__.
__model-based_software_development__
__flexibility_and_adaptability__.
__code_level__
__architectural_evaluation__
__unexpected_obstacles__
__parallel_program_development__
__security_risk_analysis__
__requirements_capture__,
__component_libraries__.
__Object-oriented_programming_languages__
__requirements_management__,
__OO_systems__.
__automated_discovery__
__architectural_decision__
__intelligent_information_processing__
__program_understanding_tools__
__commercial_deployment__
__digital_design__,
__ERP_maintenance__
__change-proneness__
__strategic_level__
__verification_technology__
__diagrammatic_notations__
__dependability_attributes__
__software_technologies__.
__formal-methods__
__vulnerability_detection__
__software_process_improvement__,
__testing_tools__,
__Web_application_testing__
__Stochastic_Petri_nets__
__process_tailoring__
__component_development__.
__evolutionary_development__
__testing_activities__,
__diagnostic_capabilities__
__knowledge_based_system__
__legacy_assets__
__real-time_operating_systems__,
__problem_solving_environments__.
__development_method__.
__productivity_improvements__
__software_engineering_environment__.
__experienced_programmers__
__coupling_mechanism__
__final_design__
__distributed_application__,
__development_frameworks__
__knowledge_acquired__
__pre-requisite__
__existing_assets__
__Queueing_networks__
__operations_research_techniques__
__aspect_oriented_programming__
__conceptual_integrity__
__automotive_software__.
__static_type_systems__
__cost_estimations__
__component_selection__,
__inconsistency_management__
__static_code_analysis__.
__ontology_creation__
__material_flow__.
__visual_data_analysis__
__imprecision_and_vagueness__
__UML_modeling_tools__
__microarray_image_analysis__
__Automated_tools__
__SQL_tuning__
__maintenance_operations__.
__discrete_simulation__.
__decision-support_systems__.
__Ajax_applications__
__program_efficiency__
__change_impact_analysis__.
__cost_prediction__
__defect_prevention__
__software_intensive__
__high_assurance_software__
__finding_bugs__
__code_comprehension__
__information_modeling__,
__lesson_learned__
__model_formulation__.
__knowledge-acquisition__
__expert-system__
__COBOL_programs__.
__software_reusability__,
__software_productivity__.
__easily_modifiable__
__security_architectures__.
__them.This_paper__
__development_phases__,
__LSI_technology__
__configuration_control__,
__trusted_systems__
__rapid_development__.
__release_plan__
__Business_process_models__
__platform-independence__,
__secure_information_systems__.
(__Computer_Aided_Software_Engineering__)
__problem_determination__.
__service-oriented_applications__,
__analytical_approaches__.
__development_efforts__,
__modularization_techniques__
__development_methodologies__,
__Functional_decomposition__
__Protocol_analysis__
__existing_researches__
__user-interfaces__.
__specification_documents__.
__preliminary_design__.
__assist_developers__
__Formal_techniques__
__selection_processes__
__Problem_frames__
__initial_requirements__
__evolutionary_change__.
__verification_efforts__
__Software_refactoring__
__development_paradigms__
__code_inspection__.
__software_quality_attributes__,
__requirements_change__,
__partially_automate__
__Automated_testing__
__greatly_aid__
__usability_goals__
__significantly_eases__
__design_iterations__,
__develop-_ment__
__software_maintenance_tasks__.
__requirements_management_tool__
__business_level__
__component_reuse__,
__Object-oriented_design__
__objective_assessment__
__business_goal__.
__Reference_models__
__engineering_processes__,
__functional_correctness__,
__visual_design__,
__distinct_phases__
__COTS-based_systems__
__legacy_software_systems__.
__Object-oriented_software__
__real_world_situations__
__labor-intensive_and_time-consuming__
__medical_decision_support_systems__
__inter-dependency__
__lacks_sufficient__
__policy_authoring__
__knowledge_structuring__
__requirements_gathering__,
__PIM_tools__
__long-awaited__
__smart_applications__
__fragmented_nature__
__current_methodologies__
__iterative_design__.
__early_phases__
__concurrent_engineering__,
__related_standards__
__software_evolvability__
__object-oriented_methodologies__
__developer_productivity__,
__strictly_defined__
__testing_efforts__.
__model-based_test_generation__
__OO_software__
__human_participation__
__SOA-based_systems__
__defect_tracking__
__object-oriented_design_patterns__
__Commercial-off-the-shelf__
__maintainability_and_reusability__
__error-proneness__
__solid_foundations__
__product_reliability__
__real-time_embedded_software__.
__software_prototyping__
__final_products__.
'__black_box__'
__secure_systems__,
__separating_concerns__
__primary_obstacle__
__embedded_control_systems__,
__assembly_operation__
__fast_turnaround__
__embedded_systems_development__
__compatibility_issues__
__increasing_productivity__
__architectural_decisions__,
__Collaborative_systems__
__component-based_development__,
__database_development__
__software_connectors__
__composite_states__
__object_oriented__,
__variability_modeling__.
__Release_planning__
__application_programming__.
__test_engineers__.
__complex_processes__,
__requirements_engineering_techniques__
__modularity_and_reusability__
__process_knowledge__,
__industrial_software_systems__.
__strategic_analysis__
__reusable_building_blocks__
__extensible_systems__
__solving_complex_problems__.
__verification_engineers__
__planning_process__,
__SCM_systems__
__product_reliability__.
__defect_management__
__Human_interaction__
__tool_interoperability__
__business_operation__.
__Fault-based_testing__
__process_control_systems__
__reengineering_tools__
__software_engineering_tools__,
__application_engineering__
__greatly_aided__
__software_management__,
__explanation_facilities__
__service_oriented_systems__
__needed.This_paper__
__industry_today__
__long_span__
__information_security_risk_management__
__Information_models__
__exception_detection__
__integration_test__
__embedded_software_systems__.
__embedded_system_development__.
__internationalization_and_localization__
__design_options__,
__technical_choices__
__performance_analysts__
__OO_concepts__
__maintenance_issues__
__concurrency_primitives__
__white_box_testing__
__clone_detection__,
__parallel_programming_environments__.
__processes.This_paper__
__performance_engineering__.
__Feature-oriented__
__software_standards__
__authors_advocate__
__level_integration__
__IC_designers__
__programming_productivity__.
__architecting_process__
__Crosscutting_concerns__
__GUI_applications__.
__accidental_complexities__
__requirements_engineering_activities__
__contract_management__
__safety_analyses__
__module_coupling__
__development_lifecycle__,
__requirements_evolution__
__commercial_product__
__mission_critical_systems__.
__source_code_documentation__
__Formal_verification_techniques__
__Learning_Management_Systems__,
__missing_requirements__
__productivity_measurement__
__tutoring_systems__,
__software_fault_tolerance__.
__rapid_configuration__
__widely_practiced__
__Architecture_description_languages__
__smart_card_applications__
__interface_development__
__enterprise_resource_planning_systems__.
__software_development_and_maintenance__,
__dependable_software__
__quality_goals__.
__software_development_life_cycle__
__effort_estimation__,
__reliability_measurement__
__test_plans__.
__software_inspection__,
__Model_driven_development__
__business_documents__,
__greatly_ease__
__reuse_candidates__
__scientific_foundation__
__interactive_user_interfaces__
__product_line's__
__defense-in-depth__
__system's_functionality__
__object-oriented_concepts__,
__Interface_Mutation__
__future_releases__
__newly_adopted__
__MAS_development__.
__verification_challenges__
__product_line_architectures__
__shared_meaning__
__software_development_organization__
__model-based_development__,
__architectural_solutions__.
__dependable_systems__,
__assessment_process__.
__software_modularity__
__GUI_development__
__shoe-last__
__reliable_distributed_systems__.
__security_testing__.
__common_criteria__
__structuring_principles__
__formal_reasoning__,
__document_authoring__
__statistical_quality_control__
__operational_knowledge__
__development_status__
__real-time_reactive_systems__
__computer-aided_verification__
__software_correctness__
__artificial_intelligence_systems__.
__inheritance_and_polymorphism__
__generated_code__,
__Basic_principles__
__programming_practices__,
__ensuring_correctness__
__software_process_simulation__
__software_size_estimation__
__design_exploration__,
__multicellular_organisms__.
__enterprise_processes__
__software_variants__
__impact_assessments__
__Developing_software__
__information_superiority__
__process_evolution__
__execution_monitoring__,
__documentation_tools__
__agent-oriented_programming_languages__
__complex_manufacturing_systems__
__software_engineering_practices__,
__object-oriented_analysis__.
__integrated_environments__
__higher_abstraction_levels__
__spreadsheet-based__
__artificial_intelligence_technologies__
__office_documents__.
__corrective_action__.
__library_management__
__software_modeling__.
__fault-tolerant_distributed_applications__.
__industrial_designers__.
__post-silicon_validation__
__maintenance_programmers__
__complexity_measurement__
__product_development_projects__
__Groupware_systems__
__improving_software_quality__
__enabled_applications__
__end-user_requirements__
__autonomic_features__
__conceptual_database_design__
__software_visualization__,
__Code_coverage__
__requirements_engineering_process__
__repeatable_experiments__
__program_families__
__elevator_control__
__computer-aided_engineering__
__usability_concerns__
__user-focused__
__code_optimizations__.
__size_measurement__
__mechanical_parts__,
__formal_techniques__,
__technical_foundation__
__model-based_testing__,
__formal_property_verification__
__Computational_linguistics__
__OO_techniques__
__large_ontologies__.
__high-level_design__,
__schema_matcher__
__evolutionary_change__
__spatial_data_handling__
__collaborative_workflows__
__quality-attribute__
__physical_prototypes__
__engineering_decisions__
__planning_processes__.
__automatic_generation__.
__OTS_components__
__functional_verification__,
__interactive_design__,
__metrics_suite__
__design_recovery__.
__social_simulations__
__linguistic_resource__
__parallel_program_performance__
__manual_task__,
__dependability_benchmarking__
__Object_oriented_programming__
__workflow_specification__,
__code_portability__
__traditional_waterfall__
__increased_productivity__,
__arduous_task__
__dynamic_weaving__
__software_artefact__
__expert_judgement__
__early_prototyping__
__process_management_systems__
__enterprise_engineering__.
__diagnosing_problems__
__ontology_creation__.
__usability_attributes__
__certification_process__
__large-scale_multi-agent_systems__
__dependable_embedded_systems__.
__forward_engineering__,
__Tool_integration__
__OO_framework__
__Web-based_learning_environments__
__design_paradigms__,
__ExpertFit_distribution-fitting__
__process_maturity_model__
__goal_generation__
__evolvable_systems__
__code_refactoring__
__related_documentation__
__OSS_components__
__component-based_and_service-oriented__
__SW_architecture__
__avionics_software__.
__automated_analysis__,
__embedded_real-time_software__
__Component_reuse__
__program_testing__,
__customized_hardware__
__architecture_compliance_checking__
__ISO_9001__:2000
__early_design_decisions__
__OO_designs__
__team_structure__,
__knowledge-based_expert_systems__
__software_complexity_metrics__
__ubicomp_applications__.
__Computational_reflection__
__Automated_support__
__software_lifecycle__.
__program_conversion__
__Software_patterns__
__dataflow_languages__
__mock_objects__
__formal_analyses__
__dialog_systems__,
__software_evaluation__.
__Java_programmers__.
"__sweet_spot__"
__ubiquitous_computing_technology__
__VLSI_physical_design__
__design_flaws__,
__recurring_tasks__
__simulation_codes__.
__Model-based_approaches__
__component-based_design__,
__software_quality_assurance__,
__critical_properties__,
__usability_heuristics__
__data_interchange__,
__software_certification__.
__decision-supporting__
__human_organizations__.
__reliable_systems__,
__Design_tools__
__industrial_development__.
__completed_successfully__.
__product_family__,
__web-based_application__.
__software_management__.
__code_reusability__
__large_scale_simulation__
__adaptive_software__.
__cross-organizational_business_processes__
__Domain_specific_languages__
__human-intensive__
__iterative_development__,
__pre-built_components__
__Business_process_modelling__
__hazard_analysis__.
__sociotechnical_systems__.
__knowledge-intensive_tasks__
__project's_success__.
__continuing_challenge__
__component-based_software_engineering__.
__user_interface_designs__.
__system's_components__
__chance_discovery__,
__program_maintenance__.
__eLearning_applications__
__Information_Retrieval_techniques__
__procedural_programming_languages__
__software_engineering_activities__,
__requirements_models__,
__product_line_architecture__.
__web_service_applications__
__Component_adaptation__
__architectural_description__,
__reusable_software_components__,
__hardware_prototyping__
__adoption_process__
__small_software_companies__
__enterprise_architecture_models__
__code_reading__
__Critical_systems__
__software_production__,
__CMMI_maturity__
__clinical_care__
__small_projects__.
__usability_inspection__.
__empirical_evaluations__,
__failure_tolerance__
__active_monitoring__
__unit_test__,
__industrial_software_systems__
__primary_objectives__
__Integration_testing__
__object_oriented_software__
__business_improvement__
__architectural_description_languages__
__requirements_discovery__
__requirements_elicitation_and_analysis__
__code-centric__
__requirement_engineering__.
__detailed_reports__
__computer_aided_software_engineering__
__application-domain__
__unit-testing__
__Visual_programming_languages__
__object-oriented_technology__,
__automated_service_composition__
__product_release__.
__Agent-oriented_software_engineering__
__interactive_web_applications__.
__object-oriented_classes__
__environmental_impact_assessment__
__integrated_information_systems__.
__paying_more_attention__
__migration_tools__
__recurring_design_problems__
__software_understanding__,
__modular_robotics__
__formal_software_development__
__Java_software__,
__traceability_links__.
__steep_learning_curve__
__Organic_Computing_systems__
__quality_assurance_process__
__runtime_validation__
__distributed_development__.
__adequate_tool_support__
__constraints.This_paper__
__business_modeling__,
__fault_prediction_models__.
__component-based_architectures__
__industry_today__,
__testing_coverage__
__component_software__.
__test_development__.
__dependability_concerns__
__usable_products__.
__managing_complexity__
__automatic_or_semiautomatic__
__quantitative_measurement__
__software_understanding__.
__architectural_paradigm__
__pencil_and_paper__.
__Execution_traces__
__software_testability__
__knowledge_assets__.
__test_case_prioritization_techniques__
__interface_components__.
__software_assurance__.
__implementation_phase__
__current_methodologies__.
__petascale_computing__.
__hardware_description_languages__,
__Aspect-orientation__
__early_design_phases__.
__UI_design__.
__dependability_models__
__requirements_evolution__,
__complex_biological_systems__
__Web_services_compositions__
__Requirements_traceability__
__search_guidance__
__team_behavior__.
__embedded_systems__'
__quality_engineering__
__improved_quality__.
__end-user_programming__,
__embedded_systems_design__,
__software_deployment__.
__architectural_evolution__.
__industrial_automation_systems__
__risk_management_process__.
__commercial_vendors__
__architectural_models__,
__software_maintainability__,
__requirements_document__,
__Knowledge_bases__
__object-oriented_software_metrics__
__de_facto_industry_standard__
__EMR_systems__
__black-box_and_white-box__
__corrective_maintenance__.
__reducing_uncertainty__
__technology_options__.
__OO_programs__
__information_models__,
__software_engineering_process__,
__object-oriented_methods__.
__machine_translation_system__,
__safety_engineers__
__standard_software__.
__Ada_software__
__device_independence__
__quality_models__,
__dominance_trees__
__accidents_and_incidents__
__electronic_purse__
__coding_standards__,
__safety-critical_embedded_systems__.
__elicitation_technique__
__power-performance_trade-offs__
__object_reuse__
__Information_Visualization_techniques__
__software_life-cycle__.
__press_die__
__business_process_design__.
__simulating_complex__
__socio-technical_systems__,
__software_maintenance_tasks__
__Data_models__
__compatibility_testing__
__OSS_projects__,
__agent_communication_languages__,
__impact_analyses__
__organizational_strategy__
__enterprise_computing_systems__.
__design_aspects__.
__formally_based__
__semantic_web_technologies__,
__project_progress__.
__process_definition__,
__visualisation_techniques__,
__advanced_computational_techniques__
__SPL_development__
__technical_feasibility__,
__semantically-enabled__
__test_case_design__
__software_reengineering__.
__virtual_prototyping__,
__Software_design_patterns__
__process_support__,
__user_friendly__,
__partial-order_methods__
"__real-life__"
__evolutionary_development__.
__simulation-based_training__
__UI_generation__
__bring_to_bear__
__software_quality_attribute__
__fast_prototyping__,
__real-time_control_systems__,
__reflective_architectures__
large__&dash__;scale
__input_validation__.
__data_base_management__,
__automotive_embedded_systems__
__development_productivity__.
__flight_controllers__
__software_development_practice__,
__artificial_societies__
__modelling_tools__,
__component_libraries__,
__assessment_methods__,
__software_development_methodologies__,
__modelling_notations__
__web_services__;
__hand-crafting__
__intellectual_control__
__massively_concurrent__
__software_refactoring__
__user-centered__,
__software_product_line_development__
__component_design__,
__maintainable_code__.
__concrete_guidance__
__quick-fix__
__scenario-oriented__
__stakeholder_requirements__,
__end-user_requirements__.
__code_reviews__,
__CMMI®__
__pen-based_interfaces__
__engineering_practice__,
__Combinatorial_testing__
__SCM_systems__.
__organizational_effectiveness__
__temporal_correctness__
__reusable_artifacts__.
__software_quality_improvement__.
__clone_group__
__software_model_checking__,
__Test_selection__
__Statistical_process_control__
__test_driven_development__
__product_documentation__
__inherently_complex__,
'__off-the-shelf__'
__organizational_modeling__
__code_smell__
__variability_management__.
__measurement_equipment__
__scattered_concerns__
__organization-oriented__
__machine_translation_systems__,
__language_acquisition__,
__sociotechnical_systems__
__high-cost__,
__knowledge_representation_schemes__
__structured_analysis__,
__Web_tools__
__quantitative_predictions__
__verified_software__.
__component_development__,
__exploiting_parallelism__.
__goal_refinement__
__coordinated_effort__
__formal_testing__
__reasoning_under_uncertainty__,
__cost_estimation_model__
__product_requirements__,
__ofobject-oriented__
__high-assurance_systems__
__customer_collaboration__
__Web_Services__)
__stage-gate__
__A_systematic_mapping_study__
__top_down__,
__data_warehouses_and_OLAP__
__innovative_technology__
__development_life-cycle__.
__multimodal_systems__,
__Extraction-Transformation-Loading__
__program_behaviors__,
__large_scale_and_complex__
__regression_test_suites__
__waterfall-based__
__wiki_systems__
__largely_manual__
__heterogeneous_embedded_systems__
__targeted_marketing__
__acceptance_tests__.
__mathematical_software__,
__classroom_teaching__.
__model-centric__
__Function_Points__,
__Enterprise_modelling__
__reusable_artifacts__
__Formal_methods__,
__risk_management_process__
__software_process_assessment__
__floating_point_computation__
__software_engineering_methods__.
__reference_process_models__
__Hypertext_systems__
__debugging_aid__
__software_portability__
__high_performance_computing_systems__,
__asset_identification__
__web_services_composition__,
__supercomputer_architectures__.
__structuring_knowledge__
__administration_tools__
__strategic_reasoning__.
__co-evolution__,
__early_lifecycle__
__assessment_methods__.
__project_status__.
__tactical_level__
__assessment_procedure__
__process_integration__,
__organizing_principles__
__agent_platforms__,
__embedded_real-time_software__.
__medical_protocols__.
__Future_plans__
__e-commerce_Web_sites__.
__organizational_information_systems__
__fault_tolerance_mechanisms__,
__finite-state_verification__
__development_kits__
__Aspect-oriented_modeling__
__concept_recognition__
__pre-runtime__
__ETL_process__,
__early_design_stages__
__spreadsheet_models__
__technical_requirements__,
__multi-device_user_interfaces__
"__ad_hoc__"
__software_development_phases__
__Process_capability_indices__
__software_methodologies__
__concurrent_software__,
__versatile_tools__
__reusable_software__,
__natural_language_specifications__
__reusing_code__
__operational_analysis__
__scenario-driven__
__maintaining_integrity__
__perfective_maintenance__
__$\textup{\textsf{Sharing__}}$
__high_level_specifications__
__railway_control_systems__.
__customer_configuration__
__man-months__
__fault_proneness__
__information_processing_systems__,
__scientific_workflow_systems__.
__application_developer's__
__knowledge-base__,
__application_tuning__
__eliciting_knowledge__
__semantic_frameworks__
__initial_development__,
__safety_certification__
__evolutionary_prototyping__
__product_model_data__
__industry_practice__,
__standard_interfaces__,
__assessment_activities__.
__coverage_measurement__
__Web_engineering__,
__diagnosis_process__.
__compiler_construction__,
__field-testing__
__software_product_development__.
__early_life-cycle__
__software_engineering_metrics__
__OSI_protocols__
__differ_substantially__.
__large_scale_software_systems__.
__secure_information_systems__
__maintenance_procedures__.
__software_product_families__
__input-modeling__
__business_process_engineering__
__feature-oriented_programming__
__safety_assurance__
__program_modularity__
__release_planning__.
__software_development_organisations__.
__aspect_oriented_design__
__product_lifecycle__,
__scattering_and_tangling__
__design_recovery__,
__requirements_definition__.
__iterative_development__.
__before_embarking__
__business_application__,
__reliable_software_systems__.
__business_continuity__.
__formal_notations__,
__CASE-tools__
__costly_and_error-prone__
__main_components__,
__synthesis_methodologies__
__software_architecting__
__dependability_evaluation__,
__based_testing__
__subsequent_releases__
__requirements_management_tools__
__project_risk_management__
__software_engineering_methods__,
__agile_development__,
__manufacturing_control_systems__
__object_oriented_design__.
__distributed_software__,
__incremental_elaboration__
__clinical_processes__.
__recurring_problems__.
__teaching_object-oriented_programming__.
__preservation_strategy__
__large_code_bases__
__heuristic_reasoning__
__mechanical_products__
__project_initiation__
__early_requirements_analysis__
__End_user__
__early_development_stages__
__Domain-specific_modeling__
__integration_tests__
__requirement_gathering__
__software_safety__.
__disease_management__
__secure_software_development__.
__high_level_programming__
__requirements_elicitation_techniques__
__OOP_languages__
__spatial_decision-making__.
__Information_system_development__
__high_level_models__
__long-term_sustainability__
__project-management__
__assurance_case__
__Conflict_detection__
__business_intelligence_systems__.
__problem-solving_environments__.
__adaptive_computing_systems__
__software_development_lifecycle__.
__Interaction_designers__
__adequacy_criterion__
__use_cases__:
__general_intelligence__.
middleware-__specific_concerns__
__distributed_processing_systems__,
__decision_structures__
__complex_decision_making__
__Reliability_models__
__user-friendliness__,
__acceptance_tests__,
__disciplined_manner__
__oriented_applications__
__enterprise_transformation__.
__unambiguous_definition__
__com-_ponents__
__link-time_optimization__
__life_cycle_costs__
__computing_machinery__
__computerized_tools__
__development_practice__,
__evaluation_tools__,
__safety_levels__
__business-process__
__reusability_and_maintainability__
__development_phase__,
__assessment_instruments__
__project_plans__.
__assessment_criteria__,
__trade_procedures__.
__Digital_systems__
__algebraic_reasoning__.
__fault-tolerant_distributed_algorithms__
__OO_development__
__object_oriented_analysis_and_design__
__runtime_management__.
__accident_analysis__
__requirements_definition__,
__facial_expression_training__
__confidentiality_requirements__
__ontological_modeling__
__making_informed_decisions__
__Software_organizations__
__library_development__
__model_driven_development__,
__accessible_user_interfaces__
__complex_scientific__
__model_based_testing__.
__Panel_discussion__:
__standards_development__
__integrated_design__,
__model-driven_engineering__,
__functional_specifications__,
__life-cycle__,
__supporting_infrastructure__.
__specifically_geared__
__consultation_systems__
__process_topologies__
__distributed_Java_applications__
__GUI_design__
__validating_requirements__
__informal_reasoning__
__office_tasks__
__template_metaprogramming__
__NAT-Traversal__
__existing_standards__,
__CSCW_application__
__intelligent_manufacturing_systems__.
__web_frameworks__
__emerging_paradigms__
__business_case__.
__service_interoperability__.
__model_based_development__
__higher-level_fusion__
__GUI_regression_testing__
__cross-cutting_concern__
__specification_notations__
__visual_assistance__
__location-enhanced_applications__.
__ill_equipped__
__model_evolution__,
__user_interface_concepts__
__technical_equipment__
__organizational_challenges__
__mathematical_knowledge__.
__HCI_patterns__
__menu-based_interaction__
__Quality_models__
__authoring_support__
__close_cooperation__
__mobile_UI__
__automated_tests__.
__information_systems_development__,
__easily_reused__.
__Entity_matching__
__architecture_description_languages__,
__advanced_software_engineering__
__experiment_investigates__
__distributed_embedded_real-time_systems__.
__increasing_design_complexity__,
__corporate_knowledge__,
__knowledge_models__,
__engineering_environments__
__integration_aspects__
__query_optimizers__,
__architecture_exploration__,
__robot_programs__.
__Software_risk_management__
__accessible_web_sites__.
__security_controls__.
__organizational_information_systems__.
__Real_world_applications__
__product_usage__
__software_product-line__
__software_performance_engineering__.
__fault_correction_process__
__processor_simulators__
__Model-based_test_generation__
__assembling_components__.
__rule_based_systems__.
__aspect-oriented_development__
__data_visualisation__,
__component_types__.
__electronic_system_level__
__hardware-software_codesign__
__object-oriented_extensions__
__faster_and_cheaper__.
__maturity_assessment__
__software_engineering_concepts__,
__DSS_development__
__JUnit_test_cases__
__assurance_requirements__
__Defect_prediction__
__Ontology_construction__
__error_handling_strategies__
__graph-drawing__
__software_project_plan__.
__Software_component__
__physical_domains__.
__building_dependable__
__safety-critical_embedded_systems__
__migration_process__.
__Security_engineering__
__component_reusability__
__dependable_software_systems__.
__lifecycle_management__.
__Software_review__
__robust_design__,
(__MC/DC__)
__software_life_cycle__,
__traceability_link_recovery__
__Traceability_links__
__early_phase_requirements__
__requirement_capture__
__orchestration_and_choreography__
__software_designs__,
__pervasive_spaces__.
__reengineering_legacy_systems__
__hydrologic_modeling__
__product-line_development__
__product_development_processes__
__software_intensive_products__.
__language_designers__,
__high_dependability__.
__software_modeling__,
__Software_safety__
__reflective_capabilities__
__software_behavior__,
Syn-__Gen__
__commercially_viable__.
__Reverse_engineering__,
__higher_levels_of_abstraction__,
__scenario_analysis__,
__agent_systems__:
__case_retrieval__,
__stakeholder_concerns__,
__requirement_management__
__checklist-based__
__Software_companies__
__requirements_documents__,
__Pedagogical_implications__
__domain-specificity__
__high-assurance_systems__.
__crosscutting_requirements__
__coding_style__,
__core_assets__,
__software_maintenance_process__.
__quality_goals__,
__framework_reuse__
__variant_requirements__
__developer-oriented__
__architectural_documentation__
__information_quality_assessment__
__reuse_libraries__.
__statistical_quality_control__.
__life-cycles__
__CBD_process__
__software_development_cycle__.
__PSL/PSA__
__risk_mitigation__.
__architecture_reconstruction__
__architectural_rules__
__Requirement_engineering__
__practicing_software_engineers__
__automated_aids__
__assessing_usability__
__building_intelligent__
__data_validation__,
__SOA_governance__.
__object-oriented_methods__,
__performance_analyst__
__variability_management__,
__ontology_mediation__
__ensuring_compliance__
__component_repository__
__experience_management__
__early_verification__
__Functional_coverage__
__sketch_understanding__
__software_variants__.
__parallel_programming_languages__,
__Test_suite__
__domain_oriented__
__maintenance_procedures__,
__managing_uncertainty__
__message_formats__.
__organizational_models__,
__recent_trend__
__reducing_risks__
__healthcare_domain__
non-__heap_memory__
__reversible_computing__
__theory_development__.
performance-__energy_trade-offs__
__Event_logs__
__implementation_projects__.
__engineering_lifecycle__.
__Component-based_programming__
__modularization_techniques__,
__risk_assessments__.
__ultimate_success__.
__forward-engineering__
__product_life-cycle__
__requirements-driven__
__enabling_reuse__
__agent_development__,
__inspection_tool__
__hypermedia_applications__,
__experience_reuse__
__STEP_standard__
__infrastructure_requirements__,
__home_care_systems__
__administrative_tasks__,
__architecture_evaluation__,
__software_systems__;
__&chi__;-kernel
__defect-detection_techniques__.
__automatic_performance_tuning__
__proactive_fault_management__
__application_packages__
__Distributed_operating_systems__
__traditional_GUI__
__Web_service_description__
__Early_aspects__
__Object-oriented_systems__
__agile_supply_chain__
__assistance_tools__
__design_for_manufacturability__.
__easily_maintained__.
__license_agreements__.
__corporate_planning__
__elicitation_and_specification__
__Cleanroom_software_engineering__
__compatibility_tests__
__stakeholder_interests__
__business_improvement__.
__design_reviews__,
__reusable_assets__,
__application_developer__.
__context-aware_mobile_application__
__automated_production__
__application_prototypes__
__early_design_phases__
__automatic_metadata__
__hypertext/hypermedia__
__pervasive_healthcare_applications__.
__building_consensus__
__product_recommendation__,
__iterative_prototyping__
__tool-support__
__logical_models__,
__designer_productivity__.
__expert_feedback__
__text_simplification__
__multilevel_transactions__.
__inter-operability__.
__systems_and_software_engineering__
__pathway_visualization__
__Distributed_software_systems__
__motivational_aspects__
__formal_verifications__
__flexible_business_processes__.
__ultra-reliable__
__productivity_improvement__,
__contractual_approach__
__knowledge_systems__,
__mathematical_modelling__,
__accurate_predictions__,
__secure_software_systems__
__huge_investment__
__collaborative_development__.
__ISO-IEC_15504__
__enterprise_security_management__
__artificial_intelligent_systems__
__interaction_testing__
__real_world_application__.
__self_managing__
__agent_oriented_software__
__non-functional_aspects__,
__Software_Engineering_practices__
__technological_limits__
__change_impact_analysis__,
__software_quality_engineering__.
__requirements_discovery__.
__Domain_models__
__strategic_programming__
__quality_certification__
__reliability_block_diagrams__
__clear_guidance__
__requirements_traceability__.
__database_designers__.
__product_planning__,
__grid_enabling__
__efficient_execution__,
__test_oracles__,
__application_profile__.
__distance_teaching__
__Simulation_Packages__
__poses_special_challenges__
__tool_box__
__stakeholder_goals__
__information_system_development__,
__mechanical_engineering_design__
__enterprise_system_implementation__
__mixed_reality_systems__.
__VR_Juggler__,
__trade-off_analysis__,
__legacy_COBOL__
__software_qualities__
__visual_modeling_techniques__
__test_case_generation_and_execution__
__inter-organizational_workflows__
__fault-tolerant_protocols__.
__manufacturing_organizations__.
__reengineering_project__
__design_automation_tools__,
__Temporal_databases__
__project_specific__
__Component_technologies__
__hazard_analysis__,
__Quality_attributes__
__automotive_electronic__
__safety-analysis__
__organizational_engineering__
__dynamic_tuning__
__failure-proneness__
__code_inspections__,
__ontology-based_information_extraction__
__software_development_project__,
__bug_detection__,
__embedded_system_development__,
__team_development__.
__debugging_activities__
__Multiple_Classification_Ripple_Down_Rules__
__user_interface_tools__
__high-integrity_software__
__main_shortcoming__
__desired_quality_attributes__
__cooperative_systems__,
__requirements-based_programming__
__Agile_approaches__
__beta_testing__
__service-oriented_grid__
__development_stages__,
__interactive_dramas__
__component-basedsoftware__
__Information_infrastructure__
__web_accessibility__,
__change_impacts__
__functional_partitioning__,
__validation_testing__
__Design_by_contract__
__development_strategies__.
__automotive_embedded_software__.
__diagram_notations__
__legacy_system_migration__
__regression_suites__
__manufactured_products__.
__penetration_testing__,
__orchestration_of_web_services__
__program_safety__
__security-critical_systems__
__product_documentation__.
__Reusing_software__
__lo-fi__
__distributed_component-based_systems__.
__component_testability__
__validation_tools__,
__scenario_construction__
__knowledge-driven__,
__user_modeling_servers__
__automated_traceability__
__ongoing_challenge__
__Web_scale__.
__feasibility_studies__,
__mission-critical_software__
__distributed_software_systems__,
__Aspect-oriented_programming_languages__
__software_requirements_specifications__.
__formal_validation__.
__trustworthy_software__.
__software_development_cycle__
__component_based_development__.
__product_specification__.
__NASA_missions__.
__healthcare_workflows__.
__reusable_aspect__
__decision_analysts__
__traditional_RBAC__
__learning_designs__,
__fuzzy_logic_techniques__
__mock_object__
__Path-oriented__
__hardware_prototypes__
__reusable_architectural__
__semantically_based__
__experienced_developers__.
__Software_release_planning__
__enterprise_business_processes__
__software_factories__
__requirements_elicitation_and_analysis__.
__BPEL_workflows__
__white-box_testing__,
__object_oriented_software__.
__robotics_domain__
__organizational_requirements__.
__mainstream_software__
__information_systems_integration__.
__specifically-designed__
__product-line_architectures__.
__planning_game__
__concern_identification__
__cohesion_metrics__,
__information_reuse__
__realtime_systems__,
__bug_hunting__.
__Synchronous_communication__
__late_phases__
__hazard_avoidance__
__metadata_creation__,
__specification_mining__.
__telecommunications_software__.
__risk_evaluation__,
__tool_selection__.
__mini-languages__
__additional_requirements__,
__Key_Process_Areas__
__complex_and_error-prone__,
__object-oriented_design_and_programming__.
__data_management_facilities__
__Software_architecture__,
__evolutionary_art__
__Mock_Objects__
__verification_engineers__.
__secure_business_processes__
__safety-critical_embedded_systems__,
__generative_art__
__spreadsheet_applications__.
__Instruction_set_simulators__
__reusability_and_maintainability__.
__modularization_of_crosscutting_concerns__
__model-driven_software_engineering__
__Application_frameworks__
__code_ownership__.
__analysis_toolbox__
__Component_based_software_development__
__OMG's_Model_Driven_Architecture__
__business_procedures__
__software_patterns__,
__Component_software__
__multiprocessor_SoC__.
__shared_ontologies__.
__dependability_aspects__
__program_documentation__.
__broadly_scoped__
__software_practice__,
__Software_process_models__
__complex_product_development__.
__Web_application_security__.
__modelling_frameworks__
__business_component__
__software_process_assessment__.
__improve_software_quality__
__knowledge_formalization__
__Embedded_system_design__
__experimental_facilities__
__critical_embedded_systems__
__fault-proneness__,
__model_comparison__,
__legacy_software_systems__,
__continuous_process_improvement__
__IBM_products__
__didactic_materials__
__environmental_aspects__
__Analytical_approaches__
__distributed_object_applications__.
__integration_issues__,
__automated_support__,
__design_representations__,
__software_developer's__
__high_assurance_software__.
__test_development__,
__Software_quality_models__
__highly-configurable__
__language_workbenches__.
__reuse_libraries__
__Manufacturing_systems__
__formative_evaluation__.
__life-cycle__:
__software_product_line_architectures__.
__interface_designer__
__programmer_behavior__
__Component_based_software_engineering__
__style_guide__
__complex_products__,
__IP-cores__
__engineering_practices__,
__Unit_tests__
__reengineering_process__.
__extra-functional_properties__,
__ontology_management__,
__corporate_knowledge_management__
__defect_correction__.
__consistency_maintenance__,
__unit_level__.
__critiquing_systems__.
__Web_application_development__,
__inter-organizational_business_processes__.
__early_adoption__
__evolving_requirements__,
__Web_Service_Composition__,
__safety_analysis__,
__Design_metrics__
__validation_methodologies__
__choreography_languages__
__extremely_flexible__,
__object_oriented_code__
__business_process_development__
__Code_generators__
__UML_profiles__.
__military_missions__.
__mathematical_computation__
__depends_critically__
__existing_assets__.
__knowledge_maintenance__
__Loose_coupling__
__spreadsheet_applications__
__assembly_design__,
__conflicting_demands__
__requirements_specification_document__
__Existing_methodologies__
__extended_transaction_models__,
__design_metrics__,
__RTL_verification__.
__daily_build__
__fact_extraction__,
__feature_engineering__,
__object-oriented_designs__.
__Layered_architecture__
__late-bound__
__component_based_software_engineering__,
__architecture_definition__,
__Policy_analysis__
__architectural_prototyping__.
__test_automation__,
__testing_hypotheses__.
__object-oriented_design_principles__
__requirement_documents__.
__GUI_test__
__aspect-orientation__,
__development_productivity__,
__document-centric_XML_documents__
__intention_inference__
__product_manufacturers__
__ontology_interoperability__
(__commercial_off-the-shelf__)
__requirements_elicitation_and_analysis__,
__hardware_synthesis__,
__service_chaining__
__SW_development__
__model-based_software_development__.
__language_descriptions__
__software_engineering_lifecycle__.
__evidence_base__
__key_elements__,
__agent_programming__,
__Excel_spreadsheets__.
__rules-of-thumb__
__presentation_layers__
__Scrum_teams__.
__OO_software__,
__Selective_regression_testing__
__communication_software__,
__biological_data_analysis__.
__Domain_engineering__
__administrative_procedures__
__static_verification__.
__property_verification__.
__organizational_setting__
__root_causes__,
__content_production__,
__OO_software__.
__MDD_approach__
__VLSI_designers__.
__structured_specifications__,
__Desktop_search__
__multi-agent_architectures__
__virtual_learning_environments__,
__data-intensive_web_applications__
__UML_use_case_diagrams__
__testing_automation__.
__feature_oriented__
__visual_exploratory__
__composition_languages__,
__catalytic_reactions__
__family_engineering__.
__Business_process_model__
__maintainable_software__.
__software_market__
__Testing_techniques__
__development_artifacts__,
__low-level_code__,
__general_purpose_programming_languages__,
__CSCL_scripts__
__architectural_description__.
__functional_size_measurement_method__
__secure_web_applications__.
__functional_abstractions__
__MAS_development__
__defect_reports__.
__Dynamic_impact_analysis__
__Reading_techniques__
__nursing_practice__.
__ISO_15504__
__significantly_easier__.
__generic_libraries__,
__fixing_bugs__,
__graphical_user-interface__
__use_case-driven__
__self-organising_emergent__
__Syndromic_surveillance__
__embedded_processors__:
__RTL_designs__,
__image-guided_therapy__.
__Web_service_interactions__
__security_risk_assessment__
__OO_frameworks__
__Scrum_process__
__accessibility_evaluation_tools__
__pre-silicon_validation__
__testing_methodologies__.
__emergency_plans__
__educational_scenarios__.
__forward_engineering__.
__life-cycle_phases__
"__quick_and_dirty__"
__code_reusability__,
__Clinical_decision_support__
__technical_constraints__.
__component-based_programming__,
__object-oriented_modeling_techniques__
__context-aware_mobile_applications__
__Increased_complexity__
__adaptable_software__
__product_definition__.
__software_factories__,
__user_interface_management_systems__
__Aspect-oriented_concepts__
__corporate_security__
__capability_based__
__intangible_benefits__
__Human-centered_design__
__reusable_IP__
__theft_detection__.
__GQM-based__
__tutorial_explains__
__ambitious_project__
__program_repair__
__reuse_based__
__software-testing__
__Aspect-Oriented_Programming__,
__CRM_systems__.
__runtime_assertion_checking__
__deductive_and_object-oriented__
__requirements_modeling__,
__product_development_lifecycle__
__entity_beans__
__regression_suite__.
__technology_innovations__.
__Enterprise_models__
__business_process_change__,
__parallel_DBMS__
__preventing_errors__
__Latency_tolerance__
__potential_bottlenecks__,
__object-oriented_software_development__,
__security_certification__
__platform_neutral__
__application_prototypes__.
__process_definitions__,
__test_engineer__
__service-oriented_software__.
__green-field__
__requirement_definition__
__foundational_ontologies__
__black_box_components__
__option_space__
__logical_design__,
__Multi-criteria_decision_making__
__decision-making_situations__.
__architectural_designs__,
__user_hints__
__software_development_paradigms__
__Aspect_oriented__
__tissue-engineered__
__design_validation__,
__competitive_bidding__
__pragmatic-reuse__
__software_measurement__,
__code_inspections__.
__teaching_material__,
__reengineering_project__.
__knowledge-intensive_processes__.
__test_preparation__,
__criminal_behavior__
__Multiple_objectives__
__guiding_principle__
__glue_code__,
__variability_dependencies__
__software_engineering_techniques__,
__design_activities__:
__analogical_planning__
__internal_quality__
__agent_paradigm__
__tedious_tasks__,
__automatic_analysis__,
__financial_audit__
__product-line_architectures__
__open_source_and_commercial__
__test-case_generation__
__Software_quality_management__
__mobile_business_processes__
__large_software_projects__,
__wrapper_agents__
__testing_frameworks__.
__Ada_tasking_programs__
__process-centered_environments__
__simulation_based_verification__
__health_information_technologies__
__re-structuring__,
__plan_libraries__
__assembly_process__,
__selective_regression_testing__.
__interactive_prototypes__
__systematic_reuse__,
__Metamorphic_testing__
__managing_variability__
__Regression_test_selection_techniques__
__test_technology__.
__modified_condition/decision_coverage__
__quality_attributes__:
__design_artefacts__.
__software_licenses__.
__maintenance_issues__.
__complexity_measurement__,
__object_oriented_modeling__
__decision-support_tools__
__design_productivity__,
__target_architectures__,
__project_life_cycle__,
__software_testing_techniques__.
__develop-ment__
__field_deployment__.
__special_purpose_simulation__
__software_development_methodology__,
__fault-tolerant_CORBA__
__search-based_testing__
__Bond-Graphs__
__management_reporting__
__code_generation__)
__measuring_software_quality__
__molecular_interactions__,
__process_engineer__
__silicon_validation__.
__continuous_process_improvement__.
__model-driven_design__.
__engineering_decisions__.
__implicit_parallelism__,
__database-driven_applications__.
__refinement_calculi__
__courseware_authoring__
__engineering_science__
__software_product_families__,
__supervisory_control_systems__
__management_discipline__
__report_generation__,
__software_traceability__
__interaction_testing__.
__object-oriented_principles__
__Java_libraries__,
__existing_software_assets__
__legacy_assets__.
__component_middleware__,
__causally-connected__
__crosscutting_structure__.
__technical_contributions__,
__ill-structured__,
__application_generators__,
__drug_discovery_and_development__
__reporting_capabilities__
__Subdivision-based__
__effort_estimations__
__UWAT+__
__human_problem_solving__.
__company_specific__
__black-box_testing_methods__
__design_languages__,
__compiler_implementation__,
__security_audits__.
__COBOL_compiler__
__social_annotation__,
__web_page__/site
__scenario_development__,
__Web_Service_composition__.
__business_procedures__.
__testing_methodologies__,
__wind-tunnel__
__change_tracking__
__dependable_embedded_systems__
__applying_design_patterns__
__Change_requests__
__RAM-based_FPGAs__
__information_systems_projects__.
__dependable_component-based__
__informed_decision-making__
__managing_complexity__,
__organizational_integration__
__redesign_process__.
__object-oriented_development__,
__trade-off_analysis__.
__multidimensional_model__.
__real-time_systems__;
__cooperative_applications__,
__mission_plans__
__ontology_engineers__.
__quality_circle__
__systems_development_life_cycle__
__program_portability__.
__Learning_technology__
__QoS-assurance__
__product_ontologies__
__engineering_approaches__,
(__Commercial-Off-The-Shelf__)
__architectural_options__.
__Verification_and_validation__:
__situated_MAS__
__program_compilation__
__collaborative_learning_scenarios__.
__systems_development_life_cycle__.
__low-level_programming__,
__requirements_traceability__,
__Formal_testing__
__recurring_design_problems__,
__CCM-based__
__autonomic_software__.
__program_analyzers__
__maturity_models__.
__capturing_requirements__
__coverage_analysis__,
__analog_IP__
__situational_methods__
__customer_interaction__.
__Early_efforts__
__commercial_CAD_systems__
__diagrammatic_languages__
__Data_warehouse_design__
__life_cycle_phases__.
__acceptance_test__,
__specification_animation__
__Architecture_evaluation__
__reading_technique__.
__Traditional_software_development__
__algorithmic_improvements__,
__productivity_factors__
__separation_of_crosscutting_concerns__
__distributed_component_systems__
__evaluating_design_alternatives__.
__Semantic_issues__
__industrial_usage__
__exploration_process__,
__data_warehouse_environment__.
__safety_critical_software__.
__stress-test__
e-__readiness_assessment__
__Questions_arise__
__test_plans__,
__Formal_tools__
__SCM_tool__
__Clinical_trials__
__maintainability_and_reusability__.
__regulation_compliance__
__product_assembly__.
__security_protocol_verification__
__accumulated_knowledge__.
__assessment_process__,
__handling_uncertainties__
__modeling_notations__,
__micro-architectures__,
__reasoning_methods__.
__modeling_methodologies__.
__novice_designers__.
__anomaly-based_intrusion_detection__
__ISO_9000__,
__product_concept_development__
__automatic_repair__
__effective_reuse__.
__grid-enabled_applications__.
__Web_accessibility_evaluation__
__software_engineering_discipline__
__software_process_assessments__
__rigorous_methods__
__Management_techniques__
__fostering_creativity__
__Iterative_development__
__defect_removal__.
__network_protocol_implementations__
__defensive_programming__
__CS1-CS2__
__structural_heterogeneity__.
__Specification-based_testing__
__product_line_assets__
__product_line_assets__.
(2__&kappa__;+1)-angulated
__assurance_cases__
__cooperative_multiagent__
__eXtreme_programming__
__groupware_design__
__distributed_pair_programming__
__security_administration__,
__mobile_collaborative_applications__.
__OO_software_development__
__clinical_pathways__,
__iterative_software_development__.
__component_behaviour__.
__Control_abstraction__
__action_plans__.
__human_reliability_assessment__
__SOA_migration__
__Interactive_design__
__firewall_rule_sets__
__semantic_web_applications__,
__intelligent_interfaces__,
__biological_laboratory__
__software_fault_tolerance__,
__parallel_program_development__.
__conceptual_structures__,
__requirements_elaboration__
__software_upgrades__.
__Model_interchange__
__data_preservation__
__laws_and_regulations__,
__Model_refactoring__
__hardware_designers__.
__professional_software_engineers__,
__innovative_products__.
__Adaptation_mechanisms__
__multi-agent_organizations__.
__COTS_products__,
__inevitable_consequence__
__rapid_design_space_exploration__.
__test_stubs__
__failure_prevention__
__embedded-software__
__graphical_animations__
__Interactive_techniques__
__early_development_phases__
__equation-based_object-oriented__
__automotive_embedded_software__
__concurrency_issues__.
__enterprise_architecting__
__Dofasco__
__architecture_selection__,
__conformance_checking__,
__user-session-based_testing__
__data-flow_based__
__managing_complexity__.
__high-level_programming_abstractions__
__machining_processes__,
__language-based__,
__software_quality_requirements__
__prototyping_tools__,
__graph_transformation_languages__
__Model-driven_approaches__
__misuse_cases__,
__quality_assurance_process__.
__Grid_programming_environments__
__test_lab__.
__Scientific_discovery__
__constrained-input__
__supporting_reuse__
__developing_user_interfaces__
__Web_Services_Orchestrations__
__mainstream_programming_languages__,
__Agent-based_simulations__
__answer-set_programs__.
__Security_metrics__
__NFR_Approach__
__dependable_computing__.
__coordination_structures__.
